(function(){"use strict";var Ze={},n0=Object.freeze({__proto__:null,default:Ze});const a0="3.0.0-alpha.0",Ea=typeof self<"u",i0=Ea&&self.constructor.name==="DedicatedWorkerGlobalScope",Ho=Ea&&"caches"in self,s0=typeof navigator<"u"&&"gpu"in navigator,qo=typeof process<"u",o0=qo&&process?.release?.name==="node",Ca=!Xo(Ze),jo=!Xo(Ze),Sr=Object.freeze({IS_BROWSER_ENV:Ea,IS_WEBWORKER_ENV:i0,IS_WEB_CACHE_AVAILABLE:Ho,IS_WEBGPU_AVAILABLE:s0,IS_PROCESS_AVAILABLE:qo,IS_NODE_ENV:o0,IS_FS_AVAILABLE:Ca,IS_PATH_AVAILABLE:jo}),Hi=Ca&&jo,Ko=Hi?Ze.dirname(Ze.dirname(Ze.fileURLToPath(self.location.href))):"./",u0=Hi?Ze.join(Ko,"/.cache/"):null,Yo="/models/",l0=Hi?Ze.join(Ko,Yo):Yo,lt={version:a0,backends:{onnx:{},tfjs:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!Ea,localModelPath:l0,useFS:Ca,useBrowserCache:Ho,useFSCache:Ca,cacheDir:u0,useCustomCache:!1,customCache:null};function Xo(t){return Object.keys(t).length===0}const Et=class{constructor(){let t=function(...e){return t._call(...e)};return Object.setPrototypeOf(t,new.target.prototype)}_call(...t){throw Error("Must implement _call method in subclass")}};function Sn(t,e){t&&t(e)}function d0(t){return Object.fromEntries(Object.entries(t).map(([e,r])=>[r,e]))}function Qo(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function c0(t){return Number.isInteger(t)||typeof t=="bigint"}function nt(...t){return Array.prototype.concat.apply([],t)}function kr(t,e){return Object.assign({},...e.map(r=>{if(t[r]!==void 0)return{[r]:t[r]}}))}var qi={};class Ta{_CONTENT_TYPE_MAP={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=Ze.existsSync(e),this.exists){this.status=200,this.statusText="OK";let r=Ze.statSync(e);this.headers.set("content-length",r.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(a){n.arrayBuffer().then(i=>{a.enqueue(new Uint8Array(i)),a.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new Ta(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await Ze.promises.readFile(this.filePath)).buffer}async blob(){const e=await Ze.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await Ze.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function ji(t,e=null,r=null){let n;try{n=new URL(t)}catch{return!1}return!(e&&!e.includes(n.protocol)||r&&!r.includes(n.hostname))}async function Jo(t){if(lt.useFS&&!ji(t,["http:","https:","blob:"]))return new Ta(t);if(typeof process<"u"&&process?.release?.name==="node"){const e=!!qi?.TESTING_REMOTELY,r=lt.version,n=new Headers;if(n.set("User-Agent",`transformers.js/${r}; is_ci/${e};`),ji(t,["http:","https:"],["huggingface.co","hf.co"])){const i=qi?.HF_TOKEN??qi?.HF_ACCESS_TOKEN;i&&n.set("Authorization",`Bearer ${i}`)}return fetch(t,{headers:n})}else return fetch(t)}const p0={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function h0(t,e,r){if(!r)return null;const n=p0[t]??`Error (${t}) occurred while trying to load file`;throw Error(`${n}: "${e}".`)}class Zo{constructor(e){this.path=e}async match(e){let r=Ze.join(this.path,e),n=new Ta(r);if(n.exists)return n}async put(e,r){const n=Buffer.from(await r.arrayBuffer());let a=Ze.join(this.path,e);try{await Ze.promises.mkdir(Ze.dirname(a),{recursive:!0}),await Ze.promises.writeFile(a,n)}catch(i){console.warn("An error occurred while writing the file to cache:",i)}}}async function f0(t,...e){for(let r of e)try{let n=await t.match(r);if(n)return n}catch{continue}}async function Ia(t,e,r=!0,n={}){if(!lt.allowLocalModels&&n.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");Sn(n.progress_callback,{status:"initiate",name:t,file:e});let a;if(!a&&lt.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(E){console.warn("An error occurred while opening the browser cache:",E)}}if(!a&&lt.useFSCache&&(a=new Zo(n.cache_dir??lt.cacheDir)),!a&&lt.useCustomCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");const i=n.revision??"main";let s=Aa(t,e),o=Aa(lt.localModelPath,s),d=Aa(lt.remoteHost,lt.remotePathTemplate.replaceAll("{model}",t).replaceAll("{revision}",encodeURIComponent(i)),e),l=i==="main"?s:Aa(t,i,e),h,m=a instanceof Zo?l:d,g=!1,c;a&&(c=await f0(a,o,m));const w=c!==void 0;if(c===void 0){if(lt.allowLocalModels)if(ji(s,["http:","https:"])){if(n.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${s}.`)}else try{c=await Jo(o),h=o}catch(x){console.warn(`Unable to load from local path "${o}": "${x}"`)}if(c===void 0||c.status===404){if(n.local_files_only||!lt.allowRemoteModels){if(r)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${o}".`);return null}if(c=await Jo(d),c.status!==200)return h0(c.status,d,r);h=m}g=a&&typeof Response<"u"&&c instanceof Response&&c.status===200}Sn(n.progress_callback,{status:"download",name:t,file:e});const v={status:"progress",name:t,file:e};let S;return n.progress_callback?w&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(S=new Uint8Array(await c.arrayBuffer()),Sn(n.progress_callback,{...v,progress:100,loaded:S.length,total:S.length})):S=await m0(c,E=>{Sn(n.progress_callback,{...v,...E})}):S=new Uint8Array(await c.arrayBuffer()),g&&h&&await a.match(h)===void 0&&await a.put(h,new Response(S,{headers:c.headers})).catch(E=>{console.warn(`Unable to add response to browser cache: ${E}.`)}),Sn(n.progress_callback,{status:"done",name:t,file:e}),S}async function Er(t,e,r=!0,n={}){let a=await Ia(t,e,r,n);if(a===null)return{};let s=new TextDecoder("utf-8").decode(a);return JSON.parse(s)}async function m0(t,e){const r=t.headers.get("Content-Length");r===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let n=parseInt(r??"0"),a=new Uint8Array(n),i=0;const s=t.body.getReader();async function o(){const{done:d,value:l}=await s.read();if(d)return;let h=i+l.length;if(h>n){n=h;let g=new Uint8Array(n);g.set(a),a=g}a.set(l,i),i=h;const m=i/n*100;return e({progress:m,loaded:i,total:n}),o()}return await o(),a}function Aa(...t){return t=t.map((e,r)=>(r&&(e=e.replace(new RegExp("^/"),"")),r!==t.length-1&&(e=e.replace(new RegExp("/$"),"")),e)),t.join("/")}function g0(t,e,r){const n=new Array(r.length),a=new Array(r.length);for(let o=r.length-1,d=1;o>=0;--o)a[o]=d,n[o]=e[r[o]],d*=n[o];const i=r.map((o,d)=>a[r.indexOf(d)]),s=new t.constructor(t.length);for(let o=0;o<t.length;++o){let d=0;for(let l=e.length-1,h=o;l>=0;--l)d+=h%e[l]*i[l],h=Math.floor(h/e[l]);s[d]=t[o]}return[s,n]}function Ki(t){const e=Oa(t)[0],r=t.map(i=>Math.exp(i-e)),n=r.reduce((i,s)=>i+s,0);return r.map(i=>i/n)}function _0(t){return Ki(t).map(n=>Math.log(n))}function y0(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]<e&&(e=t[n],r=n);return[e,r]}function Oa(t){if(t.length===0)throw Error("Array must not be empty");let e=t[0],r=0;for(let n=1;n<t.length;++n)t[n]>e&&(e=t[n],r=n);return[Number(e),r]}function w0(t,e){if(e%2===0||e<=0)throw new Error("Window size must be a positive odd number");const r=new t.constructor(t.length),n=new t.constructor(e),a=Math.floor(e/2);for(let i=0;i<t.length;++i){let s=0;for(let o=-a;o<=a;++o){let d=i+o;d<0?d=Math.abs(d):d>=t.length&&(d=2*(t.length-1)-d),n[s++]=t[d]}n.sort(),r[i]=n[a]}return r}function Yi(t,e){const r=Math.pow(10,e);return Math.round(t*r)/r}/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Xi=Object.defineProperty,b0=Object.getOwnPropertyDescriptor,v0=Object.getOwnPropertyNames,$0=Object.prototype.hasOwnProperty,X=(t,e)=>()=>(t&&(e=t(t=0)),e),Xr=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Qr=(t,e)=>{for(var r in e)Xi(t,r,{get:e[r],enumerable:!0})},x0=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of v0(e))!$0.call(t,a)&&a!==r&&Xi(t,a,{get:()=>e[a],enumerable:!(n=b0(e,a))||n.enumerable});return t},Cr=t=>x0(Xi({},"__esModule",{value:!0}),t),kn,gr,Tr,eu,Qi,Ji=X(()=>{kn=new Map,gr=[],Tr=(t,e,r)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let n=kn.get(t);if(n===void 0)kn.set(t,{backend:e,priority:r});else{if(n.priority>r)return;if(n.priority===r&&n.backend!==e)throw new Error(`cannot register backend "${t}" using priority ${r}`)}if(r>=0){let a=gr.indexOf(t);a!==-1&&gr.splice(a,1);for(let i=0;i<gr.length;i++)if(kn.get(gr[i]).priority<=r){gr.splice(i,0,t);return}gr.push(t)}return}throw new TypeError("not a valid backend")},eu=async t=>{let e=kn.get(t);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let r=!!e.initPromise;try{return r||(e.initPromise=e.backend.init(t)),await e.initPromise,e.initialized=!0,e.backend}catch(n){return r||(e.error=`${n}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},Qi=async t=>{let e=t.executionProviders||[],r=e.map(d=>typeof d=="string"?d:d.name),n=r.length===0?gr:r,a,i=[],s=new Set;for(let d of n){let l=await eu(d);typeof l=="string"?i.push({name:d,err:l}):(a||(a=l),a===l&&s.add(d))}if(!a)throw new Error(`no available backend found. ERR: ${i.map(d=>`[${d.name}] ${d.err}`).join(", ")}`);for(let{name:d,err:l}of i)r.includes(d)&&console.warn(`removing requested execution provider "${d}" from session options because it is not available: ${l}`);let o=e.filter(d=>s.has(typeof d=="string"?d:d.name));return[a,new Proxy(t,{get:(d,l)=>l==="executionProviders"?o:Reflect.get(d,l)})]}}),S0=X(()=>{Ji()}),tu,k0=X(()=>{tu="1.18.0"}),Zi,zt,ru=X(()=>{k0(),Zi="warning",zt={wasm:{},webgl:{},webgpu:{},versions:{common:tu},set logLevel(t){if(t!==void 0){if(typeof t!="string"||["verbose","info","warning","error","fatal"].indexOf(t)===-1)throw new Error(`Unsupported logging level: ${t}`);Zi=t}},get logLevel(){return Zi}},Object.defineProperty(zt,"logLevel",{enumerable:!0})}),Fe,E0=X(()=>{ru(),Fe=zt}),nu,au,C0=X(()=>{nu=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];let n=r.getContext("2d");if(n!=null){let a,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],i=t.dims[3]):(a=t.dims[3],i=t.dims[2]);let s=e?.format!==void 0?e.format:"RGB",o=e?.norm,d,l;o===void 0||o.mean===void 0?d=[255,255,255,255]:typeof o.mean=="number"?d=[o.mean,o.mean,o.mean,o.mean]:(d=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(d[3]=o.mean[3])),o===void 0||o.bias===void 0?l=[0,0,0,0]:typeof o.bias=="number"?l=[o.bias,o.bias,o.bias,o.bias]:(l=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(l[3]=o.bias[3]));let h=i*a,m=0,g=h,c=h*2,w=-1;s==="RGBA"?(m=0,g=h,c=h*2,w=h*3):s==="RGB"?(m=0,g=h,c=h*2):s==="RBG"&&(m=0,c=h,g=h*2);for(let v=0;v<i;v++)for(let S=0;S<a;S++){let E=(t.data[m++]-l[0])*d[0],x=(t.data[g++]-l[1])*d[1],I=(t.data[c++]-l[2])*d[2],T=w===-1?255:(t.data[w++]-l[3])*d[3];n.fillStyle="rgba("+E+","+x+","+I+","+T+")",n.fillRect(S,v,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},au=(t,e)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),n;if(r!=null){let a,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],i=t.dims[1],s=t.dims[3]):(a=t.dims[3],i=t.dims[2],s=t.dims[1]);let o=e!==void 0&&e.format!==void 0?e.format:"RGB",d=e?.norm,l,h;d===void 0||d.mean===void 0?l=[255,255,255,255]:typeof d.mean=="number"?l=[d.mean,d.mean,d.mean,d.mean]:(l=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(l[3]=d.mean[3])),d===void 0||d.bias===void 0?h=[0,0,0,0]:typeof d.bias=="number"?h=[d.bias,d.bias,d.bias,d.bias]:(h=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(h[3]=d.bias[3]));let m=i*a;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let g=4,c=0,w=1,v=2,S=3,E=0,x=m,I=m*2,T=-1;o==="RGBA"?(E=0,x=m,I=m*2,T=m*3):o==="RGB"?(E=0,x=m,I=m*2):o==="RBG"&&(E=0,I=m,x=m*2),n=r.createImageData(a,i);for(let M=0;M<i*a;c+=g,w+=g,v+=g,S+=g,M++)n.data[c]=(t.data[E++]-h[0])*l[0],n.data[w]=(t.data[x++]-h[1])*l[1],n.data[v]=(t.data[I++]-h[2])*l[2],n.data[S]=T===-1?255:(t.data[T++]-h[3])*l[3]}else throw new Error("Can not access image data");return n}}),Ma,iu,su,ou,uu,T0=X(()=>{ts(),Ma=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:n}=e,a=e.norm??{mean:255,bias:0},i,s;typeof a.mean=="number"?i=[a.mean,a.mean,a.mean,a.mean]:i=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?s=[a.bias,a.bias,a.bias,a.bias]:s=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=e.format!==void 0?e.format:"RGBA",d=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=r*n,h=d==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),m=4,g=0,c=1,w=2,v=3,S=0,E=l,x=l*2,I=-1;o==="RGB"&&(m=3,g=0,c=1,w=2,v=-1),d==="RGBA"?I=l*3:d==="RBG"?(S=0,x=l,E=l*2):d==="BGR"&&(x=0,E=l,S=l*2);for(let T=0;T<l;T++,g+=m,w+=m,c+=m,v+=m)h[S++]=(t[g]+s[0])/i[0],h[E++]=(t[c]+s[1])/i[1],h[x++]=(t[w]+s[2])/i[2],I!==-1&&v!==-1&&(h[I++]=(t[v]+s[3])/i[3]);return d==="RGBA"?new Lt("float32",h,[1,4,r,n]):new Lt("float32",h,[1,3,r,n])},iu=async(t,e)=>{let r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,i=typeof t=="string",s,o=e??{},d=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=h=>h instanceof HTMLCanvasElement||h instanceof OffscreenCanvas?h.getContext("2d"):null;if(r){let h=d();h.width=t.width,h.height=t.height;let m=l(h);if(m!=null){let g=t.height,c=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(g=e.resizedHeight,c=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=g,o.width=c}else o.tensorFormat="RGBA",o.height=g,o.width=c;m.drawImage(t,0,0),s=m.getImageData(0,0,c,g).data}else throw new Error("Can not access image data")}else if(n){let h,m;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(h=e.resizedHeight,m=e.resizedWidth):(h=t.height,m=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=h,o.width=m,e!==void 0){let g=d();g.width=m,g.height=h;let c=l(g);if(c!=null)c.putImageData(t,0,0),s=c.getImageData(0,0,m,h).data;else throw new Error("Can not access image data")}else s=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let h=d();h.width=t.width,h.height=t.height;let m=l(h);if(m!=null){let g=t.height,c=t.width;return m.drawImage(t,0,0,c,g),s=m.getImageData(0,0,c,g).data,o.height=g,o.width=c,Ma(s,o)}else throw new Error("Can not access image data")}else{if(i)return new Promise((h,m)=>{let g=d(),c=l(g);if(!t||!c)return m();let w=new Image;w.crossOrigin="Anonymous",w.src=t,w.onload=()=>{g.width=w.width,g.height=w.height,c.drawImage(w,0,0,g.width,g.height);let v=c.getImageData(0,0,g.width,g.height);o.height=g.height,o.width=g.width,h(Ma(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return Ma(s,o);throw new Error("Input data provided is not supported - aborted tensor creation")},su=(t,e)=>{let{width:r,height:n,download:a,dispose:i}=e,s=[1,n,r,4];return new Lt({location:"texture",type:"float32",texture:t,dims:s,download:a,dispose:i})},ou=(t,e)=>{let{dataType:r,dims:n,download:a,dispose:i}=e;return new Lt({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:i})},uu=(t,e,r)=>new Lt({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]})}),Ir,En,es,lu,I0=X(()=>{Ir=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),En=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),es=!1,lu=()=>{if(!es){es=!0;let t=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;t&&(Ir.set("int64",BigInt64Array),En.set(BigInt64Array,"int64")),e&&(Ir.set("uint64",BigUint64Array),En.set(BigUint64Array,"uint64")),r?(Ir.set("float16",Float16Array),En.set(Float16Array,"float16")):Ir.set("float16",Uint16Array)}}}),du,cu,A0=X(()=>{ts(),du=t=>{let e=1;for(let r=0;r<t.length;r++){let n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},cu=(t,e)=>{switch(t.location){case"cpu":return new Lt(t.type,t.data,e);case"cpu-pinned":return new Lt({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new Lt({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new Lt({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}}}),Lt,ts=X(()=>{C0(),T0(),I0(),A0(),Lt=class{constructor(t,e,r){lu();let n,a;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,n=t.type,a=t.dims,t.location){case"cpu-pinned":{let s=Ir.get(n);if(!s)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(t.data instanceof s))throw new TypeError(`buffer should be of type ${s.name}`);this.cpuData=t.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let s,o;if(typeof t=="string")if(n=t,o=r,t==="string"){if(!Array.isArray(e))throw new TypeError("A string tensor's data must be a string array.");s=e}else{let d=Ir.get(t);if(d===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(e)){if(t==="float16"&&d===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?s=d.from(e,BigInt):s=d.from(e)}else if(e instanceof d)s=e;else throw new TypeError(`A ${n} tensor's data must be type of ${d}`)}else if(o=e,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let d=typeof t[0];if(d==="string")n="string",s=t;else if(d==="boolean")n="bool",s=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${d}.`)}else{let d=En.get(t.constructor);if(d===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);n=d,s=t}if(o===void 0)o=[s.length];else if(!Array.isArray(o))throw new TypeError("A tensor's dims must be a number array");a=o,this.cpuData=s,this.dataLocation="cpu"}let i=du(a);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=a,this.size=i}static async fromImage(t,e){return iu(t,e)}static fromTexture(t,e){return su(t,e)}static fromGpuBuffer(t,e){return ou(t,e)}static fromPinnedBuffer(t,e,r){return uu(t,e,r)}toDataURL(t){return nu(this,t)}toImageData(t){return au(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let e=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=e,t&&this.disposer&&(this.disposer(),this.disposer=void 0),e}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return cu(this,t)}}}),ft,rs=X(()=>{ts(),ft=Lt}),Cn,ns,Ut,Rt,pu=X(()=>{ru(),Cn=(t,e)=>{(typeof zt.trace>"u"?!zt.wasm.trace:!zt.trace)||console.timeStamp(`${t}::ORT::${e}`)},ns=(t,e)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],n=!1;for(let a=0;a<r.length;a++){if(n&&!r[a].includes("TRACE_FUNC")){let i=`FUNC_${t}::${r[a].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Cn("CPU",i);return}r[a].includes("TRACE_FUNC")&&(n=!0)}},Ut=t=>{(typeof zt.trace>"u"?!zt.wasm.trace:!zt.trace)||ns("BEGIN",t)},Rt=t=>{(typeof zt.trace>"u"?!zt.wasm.trace:!zt.trace)||ns("END",t)}}),hu,O0=X(()=>{Ji(),rs(),pu(),hu=class e0{constructor(e){this.handler=e}async run(e,r,n){Ut();let a={},i={};if(typeof e!="object"||e===null||e instanceof ft||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of r){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);a[l]=null}if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,h=Object.getOwnPropertyNames(r);for(let m of this.outputNames)if(h.indexOf(m)!==-1){let g=r[m];(g===null||g instanceof ft)&&(l=!0,s=!1,a[m]=g)}if(l){if(typeof n=="object"&&n!==null)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else i=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)a[l]=null;let o=await this.handler.run(e,a,i),d={};for(let l in o)if(Object.hasOwnProperty.call(o,l)){let h=o[l];h instanceof ft?d[l]=h:d[l]=new ft(h.type,h.data,h.dims)}return Rt(),d}async release(){return this.handler.dispose()}static async create(e,r,n,a){Ut();let i,s={};if(typeof e=="string"){if(i=e,typeof r=="object"&&r!==null)s=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof r=="object"&&r!==null)s=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let h=e,m=0,g=e.byteLength;if(typeof r=="object"&&r!==null)s=r;else if(typeof r=="number"){if(m=r,!Number.isSafeInteger(m))throw new RangeError("'byteOffset' must be an integer.");if(m<0||m>=h.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${h.byteLength}).`);if(g=e.byteLength-m,typeof n=="number"){if(g=n,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||m+g>h.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${h.byteLength-m}].`);if(typeof a=="object"&&a!==null)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof n<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(h,m,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[o,d]=await Qi(s),l=await o.createInferenceSessionHandler(i,d);return Rt(),new e0(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),as,M0=X(()=>{O0(),as=hu}),z0=X(()=>{}),R0=X(()=>{}),P0=X(()=>{}),B0=X(()=>{}),fu,mu,D0=X(()=>{Ji(),rs(),fu="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",mu=class t0{constructor(e,r,n){this.handler=e,this.hasOptimizerModel=r,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,r){let n=e.evalModel||"",a=e.optimizerModel||"",i=r||{},[s,o]=await Qi(i);if(s.createTrainingSessionHandler){let d=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,a,o);return new t0(d,!!e.optimizerModel,!!e.evalModel)}else throw new Error(fu)}typeNarrowingForRunStep(e,r,n,a,i){let s={},o={};if(typeof n!="object"||n===null||n instanceof ft||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof a=="object"){if(a===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(a instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(a)){if(a.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let l of a){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,h=Object.getOwnPropertyNames(a);for(let m of r)if(h.indexOf(m)!==-1){let g=a[m];(g===null||g instanceof ft)&&(l=!0,d=!1,s[m]=g)}if(l){if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else o=a}}else if(typeof a<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof n[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(d)for(let l of r)s[l]=null;return[s,o]}convertHandlerReturnTypeToMapOfTensors(e){let r={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let a=e[n];a instanceof ft?r[n]=a:r[n]=new ft(a.type,a.data,a.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,r,n){let[a,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,r,n),s=await this.handler.runTrainStep(e,a,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,r,n){if(this.hasEvalModel){let[a,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,r,n),s=await this.handler.runEvalStep(e,a,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,r=!0){let n=await this.getParametersSize(r);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,r)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}}),is,N0=X(()=>{D0(),is=mu}),gu={};Qr(gu,{InferenceSession:()=>as,TRACE:()=>Cn,TRACE_FUNC_BEGIN:()=>Ut,TRACE_FUNC_END:()=>Rt,Tensor:()=>ft,TrainingSession:()=>is,env:()=>Fe,registerBackend:()=>Tr});var Wt=X(()=>{S0(),E0(),M0(),rs(),z0(),R0(),pu(),P0(),B0(),N0()}),ss={};Qr(ss,{createReadStream:()=>wu,readFile:()=>_u,readFileSync:()=>yu});var _u,yu,wu,bu=X(()=>{_u=void 0,yu=void 0,wu=void 0}),os={};Qr(os,{join:()=>vu});var vu,$u=X(()=>{vu=void 0}),F0=Xr((t,e)=>{var r=(()=>{var n=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(n||=__filename),function(a={}){var i=a,s,o,d=new Promise((p,_)=>{s=p,o=_});i.mountExternalData=(p,_)=>{(i.eb||(i.eb=new Map)).set(p,_)},i.unmountExternalData=()=>{delete i.eb};let l=()=>{let p=(b,k,O)=>(...P)=>{let G=St,Y=k?.();P=b(...P);let ie=k?.();return Y!==ie&&(b=ie,O(Y),k=O=null),St!=G?Ai():P},_=b=>async(...k)=>{try{if(i.cb)throw Error("Session already started");let O=i.cb={xb:k[0],errors:[]},P=await b(...k);if(i.cb!==O)throw Error("Session mismatch");i.kb?.flush();let G=O.errors;if(0<G.length){let Y=await Promise.all(G);if(Y=Y.filter(ie=>ie),0<Y.length)throw Error(Y.join(`
`))}return P}finally{i.cb=null}};i._OrtCreateSession=p(i._OrtCreateSession,()=>i._OrtCreateSession,b=>i._OrtCreateSession=b),i._OrtRun=_(p(i._OrtRun,()=>i._OrtRun,b=>i._OrtRun=b)),i._OrtRunWithBinding=_(p(i._OrtRunWithBinding,()=>i._OrtRunWithBinding,b=>i._OrtRunWithBinding=b)),i._OrtBindInput=p(i._OrtBindInput,()=>i._OrtBindInput,b=>i._OrtBindInput=b),l=void 0};i.jsepInit=(p,_)=>{if(l?.(),p==="webgpu"){[i.kb,i.pb,i.tb,i.lb,i.sb,i.Ra,i.ub,i.wb,i.qb,i.rb,i.vb]=_;let b=i.kb;i.jsepRegisterBuffer=(k,O,P,G)=>b.registerBuffer(k,O,P,G),i.jsepGetBuffer=k=>b.getBuffer(k),i.jsepCreateDownloader=(k,O,P)=>b.createDownloader(k,O,P),i.jsepOnReleaseSession=k=>{b.onReleaseSession(k)},i.jsepOnRunStart=k=>b.onRunStart(k)}};var h=Object.assign({},i),m="./this.program",g=(p,_)=>{throw _},c=typeof window=="object",w=typeof importScripts=="function",v=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",E,x,I;if(v){var T=(bu(),Cr(ss)),M=($u(),Cr(os));S=w?M.dirname(S)+"/":__dirname+"/",E=(p,_)=>(p=ar(p)?new URL(p):M.normalize(p),T.readFileSync(p,_?void 0:"utf8")),I=p=>(p=E(p,!0),p.buffer||(p=new Uint8Array(p)),p),x=(p,_,b,k=!0)=>{p=ar(p)?new URL(p):M.normalize(p),T.readFile(p,k?void 0:"utf8",(O,P)=>{O?b(O):_(k?P.buffer:P)})},!i.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(p,_)=>{throw process.exitCode=p,_}}else(c||w)&&(w?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),n&&(S=n),S.startsWith("blob:")?S="":S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1),E=p=>{var _=new XMLHttpRequest;return _.open("GET",p,!1),_.send(null),_.responseText},w&&(I=p=>{var _=new XMLHttpRequest;return _.open("GET",p,!1),_.responseType="arraybuffer",_.send(null),new Uint8Array(_.response)}),x=(p,_,b)=>{var k=new XMLHttpRequest;k.open("GET",p,!0),k.responseType="arraybuffer",k.onload=()=>{k.status==200||k.status==0&&k.response?_(k.response):b()},k.onerror=b,k.send(null)});var U=console.log.bind(console),B=console.error.bind(console);Object.assign(i,h),h=null;var D,Q=!1,J,se,ae,ce,ue,A,R,Z,ve,te,oe;function V(){var p=D.buffer;i.HEAP8=se=new Int8Array(p),i.HEAP16=ce=new Int16Array(p),i.HEAPU8=ae=new Uint8Array(p),i.HEAPU16=ue=new Uint16Array(p),i.HEAP32=A=new Int32Array(p),i.HEAPU32=R=new Uint32Array(p),i.HEAPF32=Z=new Float32Array(p),i.HEAPF64=oe=new Float64Array(p),i.HEAP64=ve=new BigInt64Array(p),i.HEAPU64=te=new BigUint64Array(p)}var re=[],fe=[],ze=[],Ue=0,it=null;function pt(p){throw p="Aborted("+p+")",B(p),Q=!0,J=1,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),o(p),p}var Je=p=>p.startsWith("data:application/octet-stream;base64,"),ar=p=>p.startsWith("file://"),Ke;if(Ke="ort-wasm-simd.wasm",!Je(Ke)){var He=Ke;Ke=i.locateFile?i.locateFile(He,S):S+He}function Nt(p){if(I)return I(p);throw"both async and sync fetching of the wasm failed"}function Wr(p){if(c||w){if(typeof fetch=="function"&&!ar(p))return fetch(p,{credentials:"same-origin"}).then(_=>{if(!_.ok)throw`failed to load wasm binary file at '${p}'`;return _.arrayBuffer()}).catch(()=>Nt(p));if(x)return new Promise((_,b)=>{x(p,k=>_(new Uint8Array(k)),b)})}return Promise.resolve().then(()=>Nt(p))}function yt(p,_,b){return Wr(p).then(k=>WebAssembly.instantiate(k,_)).then(b,k=>{B(`failed to asynchronously prepare wasm: ${k}`),pt(k)})}function vi(p,_){var b=Ke;return typeof WebAssembly.instantiateStreaming!="function"||Je(b)||ar(b)||v||typeof fetch!="function"?yt(b,p,_):fetch(b,{credentials:"same-origin"}).then(k=>WebAssembly.instantiateStreaming(k,p).then(_,function(O){return B(`wasm streaming compile failed: ${O}`),B("falling back to ArrayBuffer instantiation"),yt(b,p,_)}))}var dn={824920:(p,_,b,k)=>{if(typeof i>"u"||!i.eb)return 1;if(p=qe(p>>>0),p.startsWith("./")&&(p=p.substring(2)),p=i.eb.get(p),!p)return 2;if(_>>>=0,b>>>=0,_+b>p.byteLength)return 3;try{return ae.set(p.subarray(_,_+b),k>>>0>>>0),0}catch{return 4}},825421:()=>{i.qb()},825452:()=>{i.rb()},825481:()=>{i.vb()},825506:p=>i.pb(p),825539:p=>i.tb(p),825571:(p,_,b)=>{i.lb(p,_,b,!0)},825610:(p,_,b)=>{i.lb(p,_,b)},825643:p=>{i.Ra("Abs",p,void 0)},825694:p=>{i.Ra("Neg",p,void 0)},825745:p=>{i.Ra("Floor",p,void 0)},825798:p=>{i.Ra("Ceil",p,void 0)},825850:p=>{i.Ra("Reciprocal",p,void 0)},825908:p=>{i.Ra("Sqrt",p,void 0)},825960:p=>{i.Ra("Exp",p,void 0)},826011:p=>{i.Ra("Erf",p,void 0)},826062:p=>{i.Ra("Sigmoid",p,void 0)},826117:(p,_,b)=>{i.Ra("HardSigmoid",p,{alpha:_,beta:b})},826196:p=>{i.Ra("Log",p,void 0)},826247:p=>{i.Ra("Sin",p,void 0)},826298:p=>{i.Ra("Cos",p,void 0)},826349:p=>{i.Ra("Tan",p,void 0)},826400:p=>{i.Ra("Asin",p,void 0)},826452:p=>{i.Ra("Acos",p,void 0)},826504:p=>{i.Ra("Atan",p,void 0)},826556:p=>{i.Ra("Sinh",p,void 0)},826608:p=>{i.Ra("Cosh",p,void 0)},826660:p=>{i.Ra("Asinh",p,void 0)},826713:p=>{i.Ra("Acosh",p,void 0)},826766:p=>{i.Ra("Atanh",p,void 0)},826819:p=>{i.Ra("Tanh",p,void 0)},826871:p=>{i.Ra("Not",p,void 0)},826922:(p,_,b)=>{i.Ra("Clip",p,{min:_,max:b})},826991:p=>{i.Ra("Clip",p,void 0)},827043:(p,_)=>{i.Ra("Elu",p,{alpha:_})},827101:p=>{i.Ra("Relu",p,void 0)},827153:(p,_)=>{i.Ra("LeakyRelu",p,{alpha:_})},827217:(p,_)=>{i.Ra("ThresholdedRelu",p,{alpha:_})},827287:(p,_)=>{i.Ra("Cast",p,{to:_})},827345:p=>{i.Ra("Add",p,void 0)},827396:p=>{i.Ra("Sub",p,void 0)},827447:p=>{i.Ra("Mul",p,void 0)},827498:p=>{i.Ra("Div",p,void 0)},827549:p=>{i.Ra("Pow",p,void 0)},827600:p=>{i.Ra("Equal",p,void 0)},827653:p=>{i.Ra("Greater",p,void 0)},827708:p=>{i.Ra("GreaterOrEqual",p,void 0)},827770:p=>{i.Ra("Less",p,void 0)},827822:p=>{i.Ra("LessOrEqual",p,void 0)},827881:(p,_,b,k,O)=>{i.Ra("ReduceMean",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828040:(p,_,b,k,O)=>{i.Ra("ReduceMax",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828198:(p,_,b,k,O)=>{i.Ra("ReduceMin",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828356:(p,_,b,k,O)=>{i.Ra("ReduceProd",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828515:(p,_,b,k,O)=>{i.Ra("ReduceSum",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828673:(p,_,b,k,O)=>{i.Ra("ReduceL1",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828830:(p,_,b,k,O)=>{i.Ra("ReduceL2",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},828987:(p,_,b,k,O)=>{i.Ra("ReduceLogSum",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},829148:(p,_,b,k,O)=>{i.Ra("ReduceSumSquare",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},829312:(p,_,b,k,O)=>{i.Ra("ReduceLogSumExp",p,{keepDims:!!_,noopWithEmptyAxes:!!b,axes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},829476:p=>{i.Ra("Where",p,void 0)},829529:(p,_,b)=>{i.Ra("Transpose",p,{perm:_?Array.from(A.subarray(_>>>0,b>>>0)):[]})},829637:(p,_,b,k)=>{i.Ra("DepthToSpace",p,{blocksize:_,mode:qe(b),format:k?"NHWC":"NCHW"})},829770:(p,_,b,k)=>{i.Ra("DepthToSpace",p,{blocksize:_,mode:qe(b),format:k?"NHWC":"NCHW"})},829903:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe)=>{i.Ra("ConvTranspose",p,{format:ie?"NHWC":"NCHW",autoPad:_,dilations:[b],group:k,kernelShape:[O],pads:[P,G],strides:[Y],wIsConst:()=>!!se[ee>>>0],outputPadding:pe?Array.from(A.subarray(pe>>>0,Re>>>0)):[],outputShape:De?Array.from(A.subarray(De>>>0,N>>>0)):[],activation:qe(xe)})},830304:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N)=>{i.Ra("ConvTranspose",p,{format:Y?"NHWC":"NCHW",autoPad:_,dilations:Array.from(A.subarray(b>>>0,(b>>>0)+2>>>0)),group:k,kernelShape:Array.from(A.subarray(O>>>0,(O>>>0)+2>>>0)),pads:Array.from(A.subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(A.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!se[ie>>>0],outputPadding:ee?Array.from(A.subarray(ee>>>0,pe>>>0)):[],outputShape:Re?Array.from(A.subarray(Re>>>0,De>>>0)):[],activation:qe(N)})},830869:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe)=>{i.Ra("ConvTranspose",p,{format:ie?"NHWC":"NCHW",autoPad:_,dilations:[b],group:k,kernelShape:[O],pads:[P,G],strides:[Y],wIsConst:()=>!!se[ee>>>0],outputPadding:pe?Array.from(A.subarray(pe>>>0,Re>>>0)):[],outputShape:De?Array.from(A.subarray(De>>>0,N>>>0)):[],activation:qe(xe)})},831270:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N)=>{i.Ra("ConvTranspose",p,{format:Y?"NHWC":"NCHW",autoPad:_,dilations:Array.from(A.subarray(b>>>0,(b>>>0)+2>>>0)),group:k,kernelShape:Array.from(A.subarray(O>>>0,(O>>>0)+2>>>0)),pads:Array.from(A.subarray(P>>>0,(P>>>0)+4>>>0)),strides:Array.from(A.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!se[ie>>>0],outputPadding:ee?Array.from(A.subarray(ee>>>0,pe>>>0)):[],outputShape:Re?Array.from(A.subarray(Re>>>0,De>>>0)):[],activation:qe(N)})},831835:(p,_)=>{i.Ra("GlobalAveragePool",p,{format:_?"NHWC":"NCHW"})},831926:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe,Oe)=>{i.Ra("AveragePool",p,{format:Oe?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:O,dilations:[P,G],kernel_shape:[Y,ie],pads:[ee,pe,Re,De],strides:[N,xe]})},832210:(p,_)=>{i.Ra("GlobalAveragePool",p,{format:_?"NHWC":"NCHW"})},832301:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe,Oe)=>{i.Ra("AveragePool",p,{format:Oe?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:O,dilations:[P,G],kernel_shape:[Y,ie],pads:[ee,pe,Re,De],strides:[N,xe]})},832585:(p,_)=>{i.Ra("GlobalMaxPool",p,{format:_?"NHWC":"NCHW"})},832672:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe,Oe)=>{i.Ra("MaxPool",p,{format:Oe?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:O,dilations:[P,G],kernel_shape:[Y,ie],pads:[ee,pe,Re,De],strides:[N,xe]})},832952:(p,_)=>{i.Ra("GlobalMaxPool",p,{format:_?"NHWC":"NCHW"})},833039:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe,Oe)=>{i.Ra("MaxPool",p,{format:Oe?"NHWC":"NCHW",auto_pad:_,ceil_mode:b,count_include_pad:k,storage_order:O,dilations:[P,G],kernel_shape:[Y,ie],pads:[ee,pe,Re,De],strides:[N,xe]})},833319:(p,_,b,k,O)=>{i.Ra("Gemm",p,{alpha:_,beta:b,transA:k,transB:O})},833423:p=>{i.Ra("MatMul",p,void 0)},833477:(p,_,b,k)=>{i.Ra("ArgMax",p,{keepDims:!!_,selectLastIndex:!!b,axis:k})},833585:(p,_,b,k)=>{i.Ra("ArgMin",p,{keepDims:!!_,selectLastIndex:!!b,axis:k})},833693:(p,_)=>{i.Ra("Softmax",p,{axis:_})},833756:(p,_)=>{i.Ra("Concat",p,{axis:_})},833816:(p,_,b,k,O)=>{i.Ra("Split",p,{axis:_,numOutputs:b,splitSizes:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},833956:p=>{i.Ra("Expand",p,void 0)},834010:(p,_)=>{i.Ra("Gather",p,{axis:Number(_)})},834081:(p,_)=>{i.Ra("GatherElements",p,{axis:Number(_)})},834160:(p,_,b,k,O,P,G,Y,ie,ee,pe)=>{i.Ra("Resize",p,{antialias:_,axes:b?Array.from(A.subarray(b>>>0,k>>>0)):[],coordinateTransformMode:qe(O),cubicCoeffA:P,excludeOutside:G,extrapolationValue:Y,keepAspectRatioPolicy:qe(ie),mode:qe(ee),nearestMode:qe(pe)})},834506:(p,_,b,k,O,P,G)=>{i.Ra("Slice",p,{starts:_?Array.from(A.subarray(_>>>0,b>>>0)):[],ends:k?Array.from(A.subarray(k>>>0,O>>>0)):[],axes:P?Array.from(A.subarray(P>>>0,G>>>0)):[]})},834722:p=>{i.Ra("Tile",p,void 0)},834774:(p,_,b,k)=>{i.Ra("LayerNormalization",p,{axis:_,epsilon:b,simplified:!!k})},834885:(p,_,b)=>{i.Ra("InstanceNormalization",p,{epsilon:_,format:b?"NHWC":"NCHW"})},834999:(p,_,b)=>{i.Ra("InstanceNormalization",p,{epsilon:_,format:b?"NHWC":"NCHW"})},835113:p=>{i.Ra("Range",p,void 0)},835166:(p,_)=>{i.Ra("Einsum",p,{equation:qe(_)})},835247:(p,_,b,k,O)=>{i.Ra("Pad",p,{mode:_,value:b,pads:k?Array.from(A.subarray(k>>>0,O>>>0)):[]})},835374:(p,_,b,k,O,P)=>{i.Ra("BatchNormalization",p,{epsilon:_,momentum:b,spatial:!!O,trainingMode:!!k,format:P?"NHWC":"NCHW"})},835543:(p,_,b,k,O,P)=>{i.Ra("BatchNormalization",p,{epsilon:_,momentum:b,spatial:!!O,trainingMode:!!k,format:P?"NHWC":"NCHW"})},835712:(p,_,b)=>{i.Ra("CumSum",p,{exclusive:Number(_),reverse:Number(b)})},835809:(p,_,b,k,O,P,G,Y,ie)=>{i.Ra("Attention",p,{numHeads:_,isUnidirectional:b,maskFilterValue:k,scale:O,doRotary:P,qkvHiddenSizes:G?Array.from(A.subarray(Number(Y)>>>0,Number(Y)+G>>>0)):[],pastPresentShareBuffer:!!ie})},836081:p=>{i.Ra("BiasAdd",p,void 0)},836136:p=>{i.Ra("BiasSplitGelu",p,void 0)},836197:p=>{i.Ra("FastGelu",p,void 0)},836253:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De)=>{i.Ra("Conv",p,{format:ie?"NHWC":"NCHW",auto_pad:_,dilations:[b],group:k,kernel_shape:[O],pads:P?Array.from(A.subarray(P>>>0,G>>>0)):[],strides:[Y],w_is_const:()=>!!se[ee>>>0],activation:qe(pe),activation_params:Re?Array.from(Z.subarray(Re>>>0,De>>>0)):[]})},836623:(p,_,b,k,O,P,G,Y,ie,ee,pe,Re,De,N,xe,Oe)=>{i.Ra("Conv",p,{format:Re?"NHWC":"NCHW",auto_pad:_,dilations:[b,k],group:O,kernel_shape:[P,G],pads:Y?Array.from(A.subarray(Y>>>0,ie>>>0)):[],strides:[ee,pe],w_is_const:()=>!!se[De>>>0],activation:qe(N),activation_params:xe?Array.from(Z.subarray(xe>>>0,Oe>>>0)):[]})},837014:p=>{i.Ra("Gelu",p,void 0)},837066:(p,_,b,k,O,P)=>{i.Ra("MatMulNBits",p,{k:_,n:b,accuracyLevel:k,bits:O,blockSize:P})},837193:(p,_,b,k,O,P)=>{i.Ra("MultiHeadAttention",p,{numHeads:_,isUnidirectional:b,maskFilterValue:k,scale:O,doRotary:P})},837352:(p,_,b,k,O)=>{i.Ra("RotaryEmbedding",p,{interleaved:!!_,numHeads:b,rotaryEmbeddingDim:k,scale:O})},837491:(p,_,b)=>{i.Ra("SkipLayerNormalization",p,{epsilon:_,simplified:!!b})},837593:(p,_,b)=>{i.Ra("SkipLayerNormalization",p,{epsilon:_,simplified:!!b})},837695:(p,_,b,k)=>{i.Ra("LayerNormalization",p,{axis:_,epsilon:b,simplified:!!k})},837806:p=>{i.ub(p)},837840:(p,_)=>i.wb(p,_,i.cb.xb,i.cb.errors)};function Vr(p){this.name="ExitStatus",this.message=`Program terminated with exit(${p})`,this.status=p}class Oo{constructor(_){this.hb=_-24}}var pr=0,vr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,la=(p,_,b)=>{_>>>=0;var k=_+b;for(b=_;p[b]&&!(b>=k);)++b;if(16<b-_&&p.buffer&&vr)return vr.decode(p.subarray(_,b));for(k="";_<b;){var O=p[_++];if(O&128){var P=p[_++]&63;if((O&224)==192)k+=String.fromCharCode((O&31)<<6|P);else{var G=p[_++]&63;O=(O&240)==224?(O&15)<<12|P<<6|G:(O&7)<<18|P<<12|G<<6|p[_++]&63,65536>O?k+=String.fromCharCode(O):(O-=65536,k+=String.fromCharCode(55296|O>>10,56320|O&1023))}}else k+=String.fromCharCode(O)}return k},qe=(p,_)=>(p>>>=0)?la(ae,p,_):"",cn=p=>{for(var _=0,b=0;b<p.length;++b){var k=p.charCodeAt(b);127>=k?_++:2047>=k?_+=2:55296<=k&&57343>=k?(_+=4,++b):_+=3}return _},Ft=(p,_,b,k)=>{if(b>>>=0,!(0<k))return 0;var O=b;k=b+k-1;for(var P=0;P<p.length;++P){var G=p.charCodeAt(P);if(55296<=G&&57343>=G){var Y=p.charCodeAt(++P);G=65536+((G&1023)<<10)|Y&1023}if(127>=G){if(b>=k)break;_[b++>>>0]=G}else{if(2047>=G){if(b+1>=k)break;_[b++>>>0]=192|G>>6}else{if(65535>=G){if(b+2>=k)break;_[b++>>>0]=224|G>>12}else{if(b+3>=k)break;_[b++>>>0]=240|G>>18,_[b++>>>0]=128|G>>12&63}_[b++>>>0]=128|G>>6&63}_[b++>>>0]=128|G&63}}return _[b>>>0]=0,b-O},$r,It=p=>{for(var _="";ae[p>>>0];)_+=$r[ae[p++>>>0]];return _},da={},pn={},ir;function ca(p,_,b={}){var k=_.name;if(!p)throw new ir(`type "${k}" must have a positive integer typeid pointer`);if(pn.hasOwnProperty(p)){if(b.nb)return;throw new ir(`Cannot register type '${k}' twice`)}pn[p]=_,da.hasOwnProperty(p)&&(_=da[p],delete da[p],_.forEach(O=>O()))}function $t(p,_,b={}){if(!("argPackAdvance"in _))throw new TypeError("registerType registeredInstance requires argPackAdvance");return ca(p,_,b)}var hn=(p,_,b)=>{switch(_){case 1:return b?k=>se[k>>>0]:k=>ae[k>>>0];case 2:return b?k=>ce[k>>>1>>>0]:k=>ue[k>>>1>>>0];case 4:return b?k=>A[k>>>2>>>0]:k=>R[k>>>2>>>0];case 8:return b?k=>ve[k>>>3]:k=>te[k>>>3];default:throw new TypeError(`invalid integer width (${_}): ${p}`)}},fn=[],st=[];function pa(p){p>>>=0,9<p&&--st[p+1]===0&&(st[p]=void 0,fn.push(p))}var Ae=p=>{if(!p)throw new ir("Cannot use deleted val. handle = "+p);return st[p]},xt=p=>{switch(p){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let _=fn.pop()||st.length;return st[_]=p,st[_+1]=1,_}};function Gr(p){return this.fromWireType(R[p>>>2>>>0])}var Mo={name:"emscripten::val",fromWireType:p=>{var _=Ae(p);return pa(p),_},toWireType:(p,_)=>xt(_),argPackAdvance:8,readValueFromPointer:Gr,bb:null},$i=(p,_)=>{switch(_){case 4:return function(b){return this.fromWireType(Z[b>>>2>>>0])};case 8:return function(b){return this.fromWireType(oe[b>>>3>>>0])};default:throw new TypeError(`invalid float width (${_}): ${p}`)}},xi=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ye=(p,_)=>{for(var b=p>>1,k=b+_/2;!(b>=k)&&ue[b>>>0];)++b;if(b<<=1,32<b-p&&xi)return xi.decode(ae.subarray(p>>>0,b>>>0));for(b="",k=0;!(k>=_/2);++k){var O=ce[p+2*k>>>1>>>0];if(O==0)break;b+=String.fromCharCode(O)}return b},mn=(p,_,b)=>{if(b??=2147483647,2>b)return 0;b-=2;var k=_;b=b<2*p.length?b/2:p.length;for(var O=0;O<b;++O)ce[_>>>1>>>0]=p.charCodeAt(O),_+=2;return ce[_>>>1>>>0]=0,_-k},Si=p=>2*p.length,zo=(p,_)=>{for(var b=0,k="";!(b>=_/4);){var O=A[p+4*b>>>2>>>0];if(O==0)break;++b,65536<=O?(O-=65536,k+=String.fromCharCode(55296|O>>10,56320|O&1023)):k+=String.fromCharCode(O)}return k},ki=(p,_,b)=>{if(_>>>=0,b??=2147483647,4>b)return 0;var k=_;b=k+b-4;for(var O=0;O<p.length;++O){var P=p.charCodeAt(O);if(55296<=P&&57343>=P){var G=p.charCodeAt(++O);P=65536+((P&1023)<<10)|G&1023}if(A[_>>>2>>>0]=P,_+=4,_+4>b)break}return A[_>>>2>>>0]=0,_-k},Ei=p=>{for(var _=0,b=0;b<p.length;++b){var k=p.charCodeAt(b);55296<=k&&57343>=k&&++b,_+=4}return _},gn=(p,_)=>{var b=pn[p];if(b===void 0)throw p=$a(p),b=It(p),wt(p),new ir(`${_} has unknown type ${b}`);return b},ha=(p,_,b)=>{var k=[];return p=p.toWireType(k,b),k.length&&(R[_>>>2>>>0]=xt(k)),p},Hr=p=>{try{p()}catch(_){pt(_)}},rt=p=>{if(!Q)try{p();try{J=J=p=J,i.onExit?.(p),Q=!0,g(p,new Vr(p))}catch(_){_ instanceof Vr||_=="unwind"||g(1,_)}}catch(_){_ instanceof Vr||_=="unwind"||g(1,_)}};function Ci(){var p=_e,_={};for(let[b,k]of Object.entries(p))_[b]=typeof k=="function"?(...O)=>{Qt.push(b);try{return k(...O)}finally{Q||(Qt.pop(),St&&Xt===1&&Qt.length===0&&(Xt=0,Hr(Di),typeof Fibers<"u"&&Fibers.Db()))}}:k;return _}var Xt=0,St=null,fa=0,Qt=[],ma={},ga={},Ti=0,_n=null,Ii=[];function Ai(){return new Promise((p,_)=>{_n={resolve:p,reject:_}})}function Oi(){var p=xr(65548),_=p+12;R[p>>>2>>>0]=_,R[p+4>>>2>>>0]=_+65536,_=Qt[0];var b=ma[_];return b===void 0&&(b=Ti++,ma[_]=b,ga[b]=_),A[p+8>>>2>>>0]=b,p}function Mi(p){if(!Q){if(Xt===0){var _=!1,b=!1;p((k=0)=>{if(!Q&&(fa=k,_=!0,b)){Xt=2,Hr(()=>Zt(St)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),k=!1;try{var O=(0,_e[ga[A[St+8>>>2>>>0]]])()}catch(Y){O=Y,k=!0}var P=!1;if(!St){var G=_n;G&&(_n=null,(k?G.reject:G.resolve)(O),P=!0)}if(k&&!P)throw O}}),b=!0,_||(Xt=1,St=Oi(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),Hr(()=>Kr(St)))}else Xt===2?(Xt=0,Hr(Mt),wt(St),St=null,Ii.forEach(rt)):pt(`invalid state: ${Xt}`);return fa}}function _a(p){return Mi(_=>{p().then(_)})}var qr=[],zi={},yn=p=>{var _=zi[p];return _===void 0?It(p):_},At=()=>typeof globalThis=="object"?globalThis:Function("return this")(),ya=p=>{var _=qr.length;return qr.push(p),_},wa=(p,_)=>{for(var b=Array(p),k=0;k<p;++k)b[k]=gn(R[_+4*k>>>2>>>0],"parameter "+k);return b},Jt=(p,_)=>Object.defineProperty(_,"name",{value:p});function Ro(p){var _=Function;if(!(_ instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof _} which is not a function`);var b=Jt(_.name||"unknownFunctionName",function(){});return b.prototype=_.prototype,b=new b,p=_.apply(b,p),p instanceof Object?p:b}var ht=p=>p%4===0&&(p%100!==0||p%400===0),ba=[0,31,60,91,121,152,182,213,244,274,305,335],wn=[0,31,59,90,120,151,181,212,243,273,304,334],Ot=[],bn=(p,_)=>{Ot.length=0;for(var b;b=ae[p++>>>0];){var k=b!=105;k&=b!=112,_+=k&&_%8?4:0,Ot.push(b==112?R[_>>>2>>>0]:b==106?ve[_>>>3]:b==105?A[_>>>2>>>0]:oe[_>>>3>>>0]),_+=k?8:4}return Ot},ot={},kt=()=>{if(!jr){var p={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:m||"./this.program"},_;for(_ in ot)ot[_]===void 0?delete p[_]:p[_]=ot[_];var b=[];for(_ in p)b.push(`${_}=${p[_]}`);jr=b}return jr},jr,Po=[null,[],[]],Ri=[31,29,31,30,31,30,31,31,30,31,30,31],va=[31,28,31,30,31,30,31,31,30,31,30,31];function Bo(p){var _=Array(cn(p)+1);return Ft(p,_,0,_.length),_}function Pi(p,_,b,k){function O(N,xe,Oe){for(N=typeof N=="number"?N.toString():N||"";N.length<xe;)N=Oe[0]+N;return N}function P(N,xe){return O(N,xe,"0")}function G(N,xe){function Oe(mr){return 0>mr?-1:0<mr?1:0}var fr;return(fr=Oe(N.getFullYear()-xe.getFullYear()))===0&&(fr=Oe(N.getMonth()-xe.getMonth()))===0&&(fr=Oe(N.getDate()-xe.getDate())),fr}function Y(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function ie(N){var xe=N.$a;for(N=new Date(new Date(N.ab+1900,0,1).getTime());0<xe;){var Oe=N.getMonth(),fr=(ht(N.getFullYear())?Ri:va)[Oe];if(xe>fr-N.getDate())xe-=fr-N.getDate()+1,N.setDate(1),11>Oe?N.setMonth(Oe+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+xe);break}}return Oe=new Date(N.getFullYear()+1,0,4),xe=Y(new Date(N.getFullYear(),0,4)),Oe=Y(Oe),0>=G(xe,N)?0>=G(Oe,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}p>>>=0,_>>>=0,b>>>=0,k>>>=0;var ee=R[k+40>>>2>>>0];k={Ab:A[k>>>2>>>0],zb:A[k+4>>>2>>>0],fb:A[k+8>>>2>>>0],jb:A[k+12>>>2>>>0],gb:A[k+16>>>2>>>0],ab:A[k+20>>>2>>>0],Va:A[k+24>>>2>>>0],$a:A[k+28>>>2>>>0],Cb:A[k+32>>>2>>>0],yb:A[k+36>>>2>>>0],Bb:ee?qe(ee):""},b=qe(b),ee={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var pe in ee)b=b.replace(new RegExp(pe,"g"),ee[pe]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),De="January February March April May June July August September October November December".split(" ");ee={"%a":N=>Re[N.Va].substring(0,3),"%A":N=>Re[N.Va],"%b":N=>De[N.gb].substring(0,3),"%B":N=>De[N.gb],"%C":N=>P((N.ab+1900)/100|0,2),"%d":N=>P(N.jb,2),"%e":N=>O(N.jb,2," "),"%g":N=>ie(N).toString().substring(2),"%G":ie,"%H":N=>P(N.fb,2),"%I":N=>(N=N.fb,N==0?N=12:12<N&&(N-=12),P(N,2)),"%j":N=>{for(var xe=0,Oe=0;Oe<=N.gb-1;xe+=(ht(N.ab+1900)?Ri:va)[Oe++]);return P(N.jb+xe,3)},"%m":N=>P(N.gb+1,2),"%M":N=>P(N.zb,2),"%n":()=>`
`,"%p":N=>0<=N.fb&&12>N.fb?"AM":"PM","%S":N=>P(N.Ab,2),"%t":()=>"	","%u":N=>N.Va||7,"%U":N=>P(Math.floor((N.$a+7-N.Va)/7),2),"%V":N=>{var xe=Math.floor((N.$a+7-(N.Va+6)%7)/7);if(2>=(N.Va+371-N.$a-2)%7&&xe++,xe)xe==53&&(Oe=(N.Va+371-N.$a)%7,Oe==4||Oe==3&&ht(N.ab)||(xe=1));else{xe=52;var Oe=(N.Va+7-N.$a-1)%7;(Oe==4||Oe==5&&ht(N.ab%400-1))&&xe++}return P(xe,2)},"%w":N=>N.Va,"%W":N=>P(Math.floor((N.$a+7-(N.Va+6)%7)/7),2),"%y":N=>(N.ab+1900).toString().substring(2),"%Y":N=>N.ab+1900,"%z":N=>{N=N.yb;var xe=0<=N;return N=Math.abs(N)/60,(xe?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Bb,"%%":()=>"%"},b=b.replace(/%%/g,"\0\0");for(pe in ee)b.includes(pe)&&(b=b.replace(new RegExp(pe,"g"),ee[pe](k)));return b=b.replace(/\0\0/g,"%"),pe=Bo(b),pe.length>_?0:(se.set(pe,p>>>0),pe.length-1)}for(var Bi=Array(256),vn=0;256>vn;++vn)Bi[vn]=String.fromCharCode(vn);$r=Bi,ir=i.BindingError=class extends Error{constructor(p){super(p),this.name="BindingError"}},i.InternalError=class extends Error{constructor(p){super(p),this.name="InternalError"}},st.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>st.length/2-5-fn.length;var Do={ia:function(p,_,b){return _a(async()=>{await i.sb(p,_,b)})},a:function(p,_,b){p>>>=0;var k=new Oo(p);throw R[k.hb+16>>>2>>>0]=0,R[k.hb+4>>>2>>>0]=_>>>0,R[k.hb+8>>>2>>>0]=b>>>0,pr=p,pr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(p,_,b){_=It(_>>>0),$t(p>>>0,{name:_,fromWireType:k=>k,toWireType:function(k,O){if(typeof O!="bigint"&&typeof O!="number")throw O===null?O="null":(k=typeof O,O=k==="object"||k==="array"||k==="function"?O.toString():""+O),new TypeError(`Cannot convert "${O}" to ${this.name}`);return typeof O=="number"&&(O=BigInt(O)),O},argPackAdvance:8,readValueFromPointer:hn(_,b>>>0,_.indexOf("u")==-1),bb:null})},K:function(p,_,b,k){_=It(_>>>0),$t(p>>>0,{name:_,fromWireType:function(O){return!!O},toWireType:function(O,P){return P?b:k},argPackAdvance:8,readValueFromPointer:function(O){return this.fromWireType(ae[O>>>0])},bb:null})},J:function(p){return $t(p>>>0,Mo)},B:function(p,_,b){_=It(_>>>0),$t(p>>>0,{name:_,fromWireType:k=>k,toWireType:(k,O)=>O,argPackAdvance:8,readValueFromPointer:$i(_,b>>>0),bb:null})},s:function(p,_,b,k,O){if(p>>>=0,b>>>=0,_=It(_>>>0),O===-1&&(O=4294967295),O=Y=>Y,k===0){var P=32-8*b;O=Y=>Y<<P>>>P}var G=_.includes("unsigned")?function(Y,ie){return ie>>>0}:function(Y,ie){return ie};$t(p,{name:_,fromWireType:O,toWireType:G,argPackAdvance:8,readValueFromPointer:hn(_,b,k!==0),bb:null})},o:function(p,_,b){function k(P){return new O(se.buffer,R[P+4>>>2>>>0],R[P>>>2>>>0])}var O=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][_];b=It(b>>>0),$t(p>>>0,{name:b,fromWireType:k,argPackAdvance:8,readValueFromPointer:k},{nb:!0})},D:function(p,_){_=It(_>>>0);var b=_==="std::string";$t(p>>>0,{name:_,fromWireType:function(k){var O=R[k>>>2>>>0],P=k+4;if(b)for(var G=P,Y=0;Y<=O;++Y){var ie=P+Y;if(Y==O||ae[ie>>>0]==0){if(G=qe(G,ie-G),ee===void 0)var ee=G;else ee+="\0",ee+=G;G=ie+1}}else{for(ee=Array(O),Y=0;Y<O;++Y)ee[Y]=String.fromCharCode(ae[P+Y>>>0]);ee=ee.join("")}return wt(k),ee},toWireType:function(k,O){O instanceof ArrayBuffer&&(O=new Uint8Array(O));var P=typeof O=="string";if(!(P||O instanceof Uint8Array||O instanceof Uint8ClampedArray||O instanceof Int8Array))throw new ir("Cannot pass non-string to std::string");var G=b&&P?cn(O):O.length,Y=xr(4+G+1),ie=Y+4;if(R[Y>>>2>>>0]=G,b&&P)Ft(O,ae,ie,G+1);else if(P)for(P=0;P<G;++P){var ee=O.charCodeAt(P);if(255<ee)throw wt(ie),new ir("String has UTF-16 code units that do not fit in 8 bits");ae[ie+P>>>0]=ee}else for(P=0;P<G;++P)ae[ie+P>>>0]=O[P];return k!==null&&k.push(wt,Y),Y},argPackAdvance:8,readValueFromPointer:Gr,bb(k){wt(k)}})},x:function(p,_,b){if(_>>>=0,b>>>=0,b=It(b),_===2)var k=ye,O=mn,P=Si,G=Y=>ue[Y>>>1>>>0];else _===4&&(k=zo,O=ki,P=Ei,G=Y=>R[Y>>>2>>>0]);$t(p>>>0,{name:b,fromWireType:Y=>{for(var ie=R[Y>>>2>>>0],ee,pe=Y+4,Re=0;Re<=ie;++Re){var De=Y+4+Re*_;(Re==ie||G(De)==0)&&(pe=k(pe,De-pe),ee===void 0?ee=pe:(ee+="\0",ee+=pe),pe=De+_)}return wt(Y),ee},toWireType:(Y,ie)=>{if(typeof ie!="string")throw new ir(`Cannot pass non-string to C++ string type ${b}`);var ee=P(ie),pe=xr(4+ee+_);return R[pe>>>2>>>0]=ee/_,O(ie,pe+4,ee+_),Y!==null&&Y.push(wt,pe),pe},argPackAdvance:8,readValueFromPointer:Gr,bb(Y){wt(Y)}})},L:function(p,_){_=It(_>>>0),$t(p>>>0,{ob:!0,name:_,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(p,_,b){return _>>>=0,b>>>=0,p=Ae(p>>>0),_=gn(_,"emval::as"),ha(_,b,p)},w:function(p){return p>>>=0,_a(()=>(p=Ae(p),p.then(xt)))},n:function(p,_,b,k){return b>>>=0,k>>>=0,p=qr[p>>>0],_=Ae(_>>>0),p(null,_,b,k)},j:function(p,_,b,k,O){return b>>>=0,k>>>=0,O>>>=0,p=qr[p>>>0],_=Ae(_>>>0),b=yn(b),p(_,_[b],k,O)},b:pa,A:function(p,_){return _>>>=0,p=Ae(p>>>0),_=Ae(_),p==_},m:function(p){return p>>>=0,p===0?xt(At()):(p=yn(p),xt(At()[p]))},i:function(p,_,b){_=wa(p,_>>>0);var k=_.shift();p--;var O=`return function (obj, func, destructorsRef, args) {
`,P=0,G=[];b===0&&G.push("obj");for(var Y=["retType"],ie=[k],ee=0;ee<p;++ee)G.push("arg"+ee),Y.push("argType"+ee),ie.push(_[ee]),O+=`  var arg${ee} = argType${ee}.readValueFromPointer(args${P?"+"+P:""});
`,P+=_[ee].argPackAdvance;return O+=`  var rv = ${b===1?"new func":"func.call"}(${G.join(", ")});
`,k.ob||(Y.push("emval_returnValue"),ie.push(ha),O+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Y.push(O+`};
`),p=Ro(Y)(...ie),b=`methodCaller<(${_.map(pe=>pe.name).join(", ")}) => ${k.name}>`,ya(Jt(b,p))},r:function(p,_){return _>>>=0,p=Ae(p>>>0),_=Ae(_),xt(p[_])},e:function(p){p>>>=0,9<p&&(st[p+1]+=1)},t:function(){return xt([])},l:function(p){p=Ae(p>>>0);for(var _=Array(p.length),b=0;b<p.length;b++)_[b]=p[b];return xt(_)},f:function(p){return xt(yn(p>>>0))},k:function(){return xt({})},h:function(p){p>>>=0;for(var _=Ae(p);_.length;){var b=_.pop();_.pop()(b)}pa(p)},g:function(p,_,b){_>>>=0,b>>>=0,p=Ae(p>>>0),_=Ae(_),b=Ae(b),p[_]=b},c:function(p,_){return _>>>=0,p=gn(p>>>0,"_emval_take_value"),p=p.readValueFromPointer(_),xt(p)},W:function(p,_){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),_>>>=0,p=new Date(1e3*p),A[_>>>2>>>0]=p.getUTCSeconds(),A[_+4>>>2>>>0]=p.getUTCMinutes(),A[_+8>>>2>>>0]=p.getUTCHours(),A[_+12>>>2>>>0]=p.getUTCDate(),A[_+16>>>2>>>0]=p.getUTCMonth(),A[_+20>>>2>>>0]=p.getUTCFullYear()-1900,A[_+24>>>2>>>0]=p.getUTCDay(),A[_+28>>>2>>>0]=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(p,_){p=-9007199254740992>p||9007199254740992<p?NaN:Number(p),_>>>=0,p=new Date(1e3*p),A[_>>>2>>>0]=p.getSeconds(),A[_+4>>>2>>>0]=p.getMinutes(),A[_+8>>>2>>>0]=p.getHours(),A[_+12>>>2>>>0]=p.getDate(),A[_+16>>>2>>>0]=p.getMonth(),A[_+20>>>2>>>0]=p.getFullYear()-1900,A[_+24>>>2>>>0]=p.getDay(),A[_+28>>>2>>>0]=(ht(p.getFullYear())?ba:wn)[p.getMonth()]+p.getDate()-1|0,A[_+36>>>2>>>0]=-(60*p.getTimezoneOffset());var b=new Date(p.getFullYear(),6,1).getTimezoneOffset(),k=new Date(p.getFullYear(),0,1).getTimezoneOffset();A[_+32>>>2>>>0]=(b!=k&&p.getTimezoneOffset()==Math.min(k,b))|0},Y:function(p){p>>>=0;var _=new Date(A[p+20>>>2>>>0]+1900,A[p+16>>>2>>>0],A[p+12>>>2>>>0],A[p+8>>>2>>>0],A[p+4>>>2>>>0],A[p>>>2>>>0],0),b=A[p+32>>>2>>>0],k=_.getTimezoneOffset(),O=new Date(_.getFullYear(),6,1).getTimezoneOffset(),P=new Date(_.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(P,O);return 0>b?A[p+32>>>2>>>0]=+(O!=P&&G==k):0<b!=(G==k)&&(O=Math.max(P,O),_.setTime(_.getTime()+6e4*((0<b?G:O)-k))),A[p+24>>>2>>>0]=_.getDay(),A[p+28>>>2>>>0]=(ht(_.getFullYear())?ba:wn)[_.getMonth()]+_.getDate()-1|0,A[p>>>2>>>0]=_.getSeconds(),A[p+4>>>2>>>0]=_.getMinutes(),A[p+8>>>2>>>0]=_.getHours(),A[p+12>>>2>>>0]=_.getDate(),A[p+16>>>2>>>0]=_.getMonth(),A[p+20>>>2>>>0]=_.getYear(),p=_.getTime(),BigInt(isNaN(p)?-1:p/1e3)},U:function(){return-52},V:function(){},N:function(p,_,b,k){b>>>=0,k>>>=0;var O=new Date().getFullYear(),P=new Date(O,0,1),G=new Date(O,6,1);O=P.getTimezoneOffset();var Y=G.getTimezoneOffset();R[p>>>0>>>2>>>0]=60*Math.max(O,Y),A[_>>>0>>>2>>>0]=+(O!=Y),p=ie=>ie.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],P=p(P),G=p(G),Y<O?(Ft(P,ae,b,17),Ft(G,ae,k,17)):(Ft(P,ae,k,17),Ft(G,ae,b,17))},v:()=>{pt("")},d:function(p,_,b){return p>>>=0,_=bn(_>>>0,b>>>0),dn[p](..._)},I:function(p,_,b){return p>>>=0,_=bn(_>>>0,b>>>0),dn[p](..._)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(p){p>>>=0;var _=ae.length;if(4294901760<p)return!1;for(var b=1;4>=b;b*=2){var k=_*(1+.2/b);k=Math.min(k,p+100663296);var O=Math;k=Math.max(p,k);e:{O=(O.min.call(O,4294901760,k+(65536-k%65536)%65536)-D.buffer.byteLength+65535)/65536;try{D.grow(O),V();var P=1;break e}catch{}P=void 0}if(P)return!0}return!1},$:function(p,_){p>>>=0,_>>>=0;var b=0;return kt().forEach((k,O)=>{var P=_+b;for(O=R[p+4*O>>>2>>>0]=P,P=0;P<k.length;++P)se[O++>>>0]=k.charCodeAt(P);se[O>>>0]=0,b+=k.length+1}),0},aa:function(p,_){p>>>=0,_>>>=0;var b=kt();R[p>>>2>>>0]=b.length;var k=0;return b.forEach(O=>k+=O.length+1),R[_>>>2>>>0]=k,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(p,_,b,k){_>>>=0,b>>>=0,k>>>=0;for(var O=0,P=0;P<b;P++){var G=R[_>>>2>>>0],Y=R[_+4>>>2>>>0];_+=8;for(var ie=0;ie<Y;ie++){var ee=ae[G+ie>>>0],pe=Po[p];ee===0||ee===10?((p===1?U:B)(la(pe,0)),pe.length=0):pe.push(ee)}O+=Y}return R[k>>>2>>>0]=O,0},fa:Pi,p:function(p,_,b,k){return Pi(p>>>0,_>>>0,b>>>0,k>>>0)}},_e=function(){function p(b){return _e=b.exports,_e=Ci(),_e=Ni(),D=_e.ja,V(),fe.unshift(_e.ka),Ue--,Ue==0&&it&&(b=it,it=null,b()),_e}var _={a:Do};if(Ue++,i.instantiateWasm)try{return i.instantiateWasm(_,p)}catch(b){B(`Module.instantiateWasm callback failed with error: ${b}`),o(b)}return vi(_,function(b){p(b.instance)}).catch(o),{}}(),$a=p=>($a=_e.la)(p);i._OrtInit=(p,_)=>(i._OrtInit=_e.ma)(p,_),i._OrtGetLastError=(p,_)=>(i._OrtGetLastError=_e.na)(p,_),i._OrtCreateSessionOptions=(p,_,b,k,O,P,G,Y,ie,ee)=>(i._OrtCreateSessionOptions=_e.oa)(p,_,b,k,O,P,G,Y,ie,ee),i._OrtAppendExecutionProvider=(p,_)=>(i._OrtAppendExecutionProvider=_e.pa)(p,_),i._OrtAddFreeDimensionOverride=(p,_,b)=>(i._OrtAddFreeDimensionOverride=_e.qa)(p,_,b),i._OrtAddSessionConfigEntry=(p,_,b)=>(i._OrtAddSessionConfigEntry=_e.ra)(p,_,b),i._OrtReleaseSessionOptions=p=>(i._OrtReleaseSessionOptions=_e.sa)(p),i._OrtCreateSession=(p,_,b)=>(i._OrtCreateSession=_e.ta)(p,_,b),i._OrtReleaseSession=p=>(i._OrtReleaseSession=_e.ua)(p),i._OrtGetInputOutputCount=(p,_,b)=>(i._OrtGetInputOutputCount=_e.va)(p,_,b),i._OrtGetInputName=(p,_)=>(i._OrtGetInputName=_e.wa)(p,_),i._OrtGetOutputName=(p,_)=>(i._OrtGetOutputName=_e.xa)(p,_),i._OrtFree=p=>(i._OrtFree=_e.ya)(p),i._OrtCreateTensor=(p,_,b,k,O,P)=>(i._OrtCreateTensor=_e.za)(p,_,b,k,O,P),i._OrtGetTensorData=(p,_,b,k,O)=>(i._OrtGetTensorData=_e.Aa)(p,_,b,k,O),i._OrtReleaseTensor=p=>(i._OrtReleaseTensor=_e.Ba)(p),i._OrtCreateRunOptions=(p,_,b,k)=>(i._OrtCreateRunOptions=_e.Ca)(p,_,b,k),i._OrtAddRunConfigEntry=(p,_,b)=>(i._OrtAddRunConfigEntry=_e.Da)(p,_,b),i._OrtReleaseRunOptions=p=>(i._OrtReleaseRunOptions=_e.Ea)(p),i._OrtCreateBinding=p=>(i._OrtCreateBinding=_e.Fa)(p),i._OrtBindInput=(p,_,b)=>(i._OrtBindInput=_e.Ga)(p,_,b),i._OrtBindOutput=(p,_,b,k)=>(i._OrtBindOutput=_e.Ha)(p,_,b,k),i._OrtClearBoundOutputs=p=>(i._OrtClearBoundOutputs=_e.Ia)(p),i._OrtReleaseBinding=p=>(i._OrtReleaseBinding=_e.Ja)(p),i._OrtRunWithBinding=(p,_,b,k,O)=>(i._OrtRunWithBinding=_e.Ka)(p,_,b,k,O),i._OrtRun=(p,_,b,k,O,P,G,Y)=>(i._OrtRun=_e.La)(p,_,b,k,O,P,G,Y),i._OrtEndProfiling=p=>(i._OrtEndProfiling=_e.Ma)(p),i._JsepOutput=(p,_,b)=>(i._JsepOutput=_e.Na)(p,_,b),i._JsepGetNodeName=p=>(i._JsepGetNodeName=_e.Oa)(p);var xr=i._malloc=p=>(xr=i._malloc=_e.Pa)(p),wt=i._free=p=>(wt=i._free=_e.Qa)(p),$n=p=>($n=_e.Sa)(p),xn=p=>(xn=_e.Ta)(p),xa=()=>(xa=_e.Ua)(),Kr=p=>(Kr=_e.Wa)(p),Di=()=>(Di=_e.Xa)(),Zt=p=>(Zt=_e.Ya)(p),Mt=()=>(Mt=_e.Za)();i.___start_em_js=837952,i.___stop_em_js=838113;function Ni(){var p=_e;p=Object.assign({},p);var _=b=>k=>b(k)>>>0;return p.la=_(p.la),p.Pa=_(p.Pa),p.Ta=_(p.Ta),p.Ua=(b=>()=>b()>>>0)(p.Ua),p}i.stackSave=()=>xa(),i.stackRestore=p=>$n(p),i.stackAlloc=p=>xn(p),i.UTF8ToString=qe,i.stringToUTF8=(p,_,b)=>Ft(p,ae,_,b),i.lengthBytesUTF8=cn;var hr;it=function p(){hr||Sa(),hr||(it=p)};function Sa(){if(!(0<Ue)){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;){var p=i.preRun.shift();re.unshift(p)}for(;0<re.length;)re.shift()(i);if(!(0<Ue||hr||(hr=!0,i.calledRun=!0,Q))){for(;0<fe.length;)fe.shift()(i);for(s(i);0<ze.length;)ze.shift()(i)}}}return Sa(),d}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),L0=Xr(()=>{}),U0=Xr(()=>{}),xu={};Qr(xu,{cpus:()=>Su});var Su,W0=X(()=>{Su=void 0}),V0=Xr((t,e)=>{var r=(()=>{var n=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(n||=__filename),function(a={}){function i(){return oe.buffer!=ze.buffer&&yt(),ze}function s(){return oe.buffer!=ze.buffer&&yt(),Ue}function o(){return oe.buffer!=ze.buffer&&yt(),it}function d(){return oe.buffer!=ze.buffer&&yt(),pt}function l(){return oe.buffer!=ze.buffer&&yt(),Je}function h(){return oe.buffer!=ze.buffer&&yt(),ar}function m(){return oe.buffer!=ze.buffer&&yt(),Ke}function g(){return oe.buffer!=ze.buffer&&yt(),Wr}var c=a,w,v,S=new Promise((u,f)=>{w=u,v=f});c.mountExternalData=(u,f)=>{(c.Db||(c.Db=new Map)).set(u,f)},c.unmountExternalData=()=>{delete c.Db};let E=()=>{let u=(y,$,C)=>(...z)=>{let W=Mt,q=$?.();z=y(...z);let le=$?.();return q!==le&&(y=le,C(q),$=C=null),Mt!=W?O():z},f=y=>async(...$)=>{try{if(c.Cb)throw Error("Session already started");let C=c.Cb={ec:$[0],errors:[]},z=await y(...$);if(c.Cb!==C)throw Error("Session mismatch");c.Kb?.flush();let W=C.errors;if(0<W.length){let q=await Promise.all(W);if(q=q.filter(le=>le),0<q.length)throw Error(q.join(`
`))}return z}finally{c.Cb=null}};c._OrtCreateSession=u(c._OrtCreateSession,()=>c._OrtCreateSession,y=>c._OrtCreateSession=y),c._OrtRun=f(u(c._OrtRun,()=>c._OrtRun,y=>c._OrtRun=y)),c._OrtRunWithBinding=f(u(c._OrtRunWithBinding,()=>c._OrtRunWithBinding,y=>c._OrtRunWithBinding=y)),c._OrtBindInput=u(c._OrtBindInput,()=>c._OrtBindInput,y=>c._OrtBindInput=y),E=void 0};c.jsepInit=(u,f)=>{if(E?.(),u==="webgpu"){[c.Kb,c.Wb,c.$b,c.Lb,c.Zb,c.ob,c.ac,c.cc,c.Xb,c.Yb,c.bc]=f;let y=c.Kb;c.jsepRegisterBuffer=($,C,z,W)=>y.registerBuffer($,C,z,W),c.jsepGetBuffer=$=>y.getBuffer($),c.jsepCreateDownloader=($,C,z)=>y.createDownloader($,C,z),c.jsepOnReleaseSession=$=>{y.onReleaseSession($)},c.jsepOnRunStart=$=>y.onRunStart($)}};var x=Object.assign({},c),I="./this.program",T=(u,f)=>{throw f},M=typeof window=="object",U=typeof importScripts=="function",B=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",D=c.ENVIRONMENT_IS_PTHREAD||!1,Q="";function J(u){return c.locateFile?c.locateFile(u,Q):Q+u}var se,ae,ce;if(B){var ue=(bu(),Cr(ss)),A=($u(),Cr(os));Q=U?A.dirname(Q)+"/":__dirname+"/",se=(u,f)=>(u=Ft(u)?new URL(u):A.normalize(u),ue.readFileSync(u,f?void 0:"utf8")),ce=u=>(u=se(u,!0),u.buffer||(u=new Uint8Array(u)),u),ae=(u,f,y,$=!0)=>{u=Ft(u)?new URL(u):A.normalize(u),ue.readFile(u,$?void 0:"utf8",(C,z)=>{C?y(C):f($?z.buffer:z)})},!c.thisProgram&&1<process.argv.length&&(I=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),T=(u,f)=>{throw process.exitCode=u,f},global.Worker=L0().Worker}else(M||U)&&(U?Q=self.location.href:typeof document<"u"&&document.currentScript&&(Q=document.currentScript.src),typeof n<"u"&&n&&(Q=n),Q.startsWith("blob:")?Q="":Q=Q.substr(0,Q.replace(/[?#].*/,"").lastIndexOf("/")+1),B||(se=u=>{var f=new XMLHttpRequest;return f.open("GET",u,!1),f.send(null),f.responseText},U&&(ce=u=>{var f=new XMLHttpRequest;return f.open("GET",u,!1),f.responseType="arraybuffer",f.send(null),new Uint8Array(f.response)}),ae=(u,f,y)=>{var $=new XMLHttpRequest;$.open("GET",u,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?f($.response):y()},$.onerror=y,$.send(null)}));B&&typeof performance>"u"&&(global.performance=U0().performance);var R=console.log.bind(console),Z=console.error.bind(console);B&&(R=(...u)=>ue.writeSync(1,u.join(" ")+`
`),Z=(...u)=>ue.writeSync(2,u.join(" ")+`
`));var ve=R,te=Z;Object.assign(c,x),x=null;var oe,V,re=!1,fe,ze,Ue,it,pt,Je,ar,Ke,He,Nt,Wr;function yt(){var u=oe.buffer;c.HEAP8=ze=new Int8Array(u),c.HEAP16=it=new Int16Array(u),c.HEAPU8=Ue=new Uint8Array(u),c.HEAPU16=pt=new Uint16Array(u),c.HEAP32=Je=new Int32Array(u),c.HEAPU32=ar=new Uint32Array(u),c.HEAPF32=Ke=new Float32Array(u),c.HEAPF64=Wr=new Float64Array(u),c.HEAP64=He=new BigInt64Array(u),c.HEAPU64=Nt=new BigUint64Array(u)}var vi=16777216;if(D)oe=c.wasmMemory;else if(c.wasmMemory)oe=c.wasmMemory;else if(oe=new WebAssembly.Memory({initial:vi/65536,maximum:65536,shared:!0}),!(oe.buffer instanceof SharedArrayBuffer))throw te("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),B&&te("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");yt(),vi=oe.buffer.byteLength;var dn=[],Vr=[],Oo=[],pr=0,vr=null;function la(){if(pr--,pr==0&&vr){var u=vr;vr=null,u()}}function qe(u){throw u="Aborted("+u+")",te(u),re=!0,fe=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),v(u),u}var cn=u=>u.startsWith("data:application/octet-stream;base64,"),Ft=u=>u.startsWith("file://"),$r;$r="ort-wasm-simd-threaded.wasm",cn($r)||($r=J($r));function It(u){if(ce)return ce(u);throw"both async and sync fetching of the wasm failed"}function da(u){if(M||U){if(typeof fetch=="function"&&!Ft(u))return fetch(u,{credentials:"same-origin"}).then(f=>{if(!f.ok)throw`failed to load wasm binary file at '${u}'`;return f.arrayBuffer()}).catch(()=>It(u));if(ae)return new Promise((f,y)=>{ae(u,$=>f(new Uint8Array($)),y)})}return Promise.resolve().then(()=>It(u))}function pn(u,f,y){return da(u).then($=>WebAssembly.instantiate($,f)).then(y,$=>{te(`failed to asynchronously prepare wasm: ${$}`),qe($)})}function ir(u,f){var y=$r;return typeof WebAssembly.instantiateStreaming!="function"||cn(y)||Ft(y)||B||typeof fetch!="function"?pn(y,u,f):fetch(y,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,u).then(f,function(C){return te(`wasm streaming compile failed: ${C}`),te("falling back to ArrayBuffer instantiation"),pn(y,u,f)}))}var ca={826468:(u,f,y,$)=>{if(typeof c>"u"||!c.Db)return 1;if(u=rt(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=c.Db.get(u),!u)return 2;if(f>>>=0,y>>>=0,$>>>=0,f+y>u.byteLength)return 3;try{return s().set(u.subarray(f,f+y),$>>>0),0}catch{return 4}},826969:()=>{c.Xb()},827e3:()=>{c.Yb()},827029:()=>{c.bc()},827054:u=>c.Wb(u),827087:u=>c.$b(u),827119:(u,f,y)=>{c.Lb(u,f,y,!0)},827158:(u,f,y)=>{c.Lb(u,f,y)},827191:u=>{c.ob("Abs",u,void 0)},827242:u=>{c.ob("Neg",u,void 0)},827293:u=>{c.ob("Floor",u,void 0)},827346:u=>{c.ob("Ceil",u,void 0)},827398:u=>{c.ob("Reciprocal",u,void 0)},827456:u=>{c.ob("Sqrt",u,void 0)},827508:u=>{c.ob("Exp",u,void 0)},827559:u=>{c.ob("Erf",u,void 0)},827610:u=>{c.ob("Sigmoid",u,void 0)},827665:(u,f,y)=>{c.ob("HardSigmoid",u,{alpha:f,beta:y})},827744:u=>{c.ob("Log",u,void 0)},827795:u=>{c.ob("Sin",u,void 0)},827846:u=>{c.ob("Cos",u,void 0)},827897:u=>{c.ob("Tan",u,void 0)},827948:u=>{c.ob("Asin",u,void 0)},828e3:u=>{c.ob("Acos",u,void 0)},828052:u=>{c.ob("Atan",u,void 0)},828104:u=>{c.ob("Sinh",u,void 0)},828156:u=>{c.ob("Cosh",u,void 0)},828208:u=>{c.ob("Asinh",u,void 0)},828261:u=>{c.ob("Acosh",u,void 0)},828314:u=>{c.ob("Atanh",u,void 0)},828367:u=>{c.ob("Tanh",u,void 0)},828419:u=>{c.ob("Not",u,void 0)},828470:(u,f,y)=>{c.ob("Clip",u,{min:f,max:y})},828539:u=>{c.ob("Clip",u,void 0)},828591:(u,f)=>{c.ob("Elu",u,{alpha:f})},828649:u=>{c.ob("Relu",u,void 0)},828701:(u,f)=>{c.ob("LeakyRelu",u,{alpha:f})},828765:(u,f)=>{c.ob("ThresholdedRelu",u,{alpha:f})},828835:(u,f)=>{c.ob("Cast",u,{to:f})},828893:u=>{c.ob("Add",u,void 0)},828944:u=>{c.ob("Sub",u,void 0)},828995:u=>{c.ob("Mul",u,void 0)},829046:u=>{c.ob("Div",u,void 0)},829097:u=>{c.ob("Pow",u,void 0)},829148:u=>{c.ob("Equal",u,void 0)},829201:u=>{c.ob("Greater",u,void 0)},829256:u=>{c.ob("GreaterOrEqual",u,void 0)},829318:u=>{c.ob("Less",u,void 0)},829370:u=>{c.ob("LessOrEqual",u,void 0)},829429:(u,f,y,$,C)=>{c.ob("ReduceMean",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},829588:(u,f,y,$,C)=>{c.ob("ReduceMax",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},829746:(u,f,y,$,C)=>{c.ob("ReduceMin",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},829904:(u,f,y,$,C)=>{c.ob("ReduceProd",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830063:(u,f,y,$,C)=>{c.ob("ReduceSum",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830221:(u,f,y,$,C)=>{c.ob("ReduceL1",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830378:(u,f,y,$,C)=>{c.ob("ReduceL2",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830535:(u,f,y,$,C)=>{c.ob("ReduceLogSum",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830696:(u,f,y,$,C)=>{c.ob("ReduceSumSquare",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},830860:(u,f,y,$,C)=>{c.ob("ReduceLogSumExp",u,{keepDims:!!f,noopWithEmptyAxes:!!y,axes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},831024:u=>{c.ob("Where",u,void 0)},831077:(u,f,y)=>{c.ob("Transpose",u,{perm:f?Array.from(l().subarray(f>>>0,y>>>0)):[]})},831185:(u,f,y,$)=>{c.ob("DepthToSpace",u,{blocksize:f,mode:rt(y),format:$?"NHWC":"NCHW"})},831318:(u,f,y,$)=>{c.ob("DepthToSpace",u,{blocksize:f,mode:rt(y),format:$?"NHWC":"NCHW"})},831451:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee)=>{c.ob("ConvTranspose",u,{format:le?"NHWC":"NCHW",autoPad:f,dilations:[y],group:$,kernelShape:[C],pads:[z,W],strides:[q],wIsConst:()=>!!i()[ne>>>0],outputPadding:me?Array.from(l().subarray(me>>>0,Ne>>>0)):[],outputShape:Le?Array.from(l().subarray(Le>>>0,L>>>0)):[],activation:rt(Ee)})},831852:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L)=>{c.ob("ConvTranspose",u,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(l().subarray(y>>>0,(y>>>0)+2>>>0)),group:$,kernelShape:Array.from(l().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(l().subarray(z>>>0,(z>>>0)+4>>>0)),strides:Array.from(l().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!i()[le>>>0],outputPadding:ne?Array.from(l().subarray(ne>>>0,me>>>0)):[],outputShape:Ne?Array.from(l().subarray(Ne>>>0,Le>>>0)):[],activation:rt(L)})},832417:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee)=>{c.ob("ConvTranspose",u,{format:le?"NHWC":"NCHW",autoPad:f,dilations:[y],group:$,kernelShape:[C],pads:[z,W],strides:[q],wIsConst:()=>!!i()[ne>>>0],outputPadding:me?Array.from(l().subarray(me>>>0,Ne>>>0)):[],outputShape:Le?Array.from(l().subarray(Le>>>0,L>>>0)):[],activation:rt(Ee)})},832818:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L)=>{c.ob("ConvTranspose",u,{format:q?"NHWC":"NCHW",autoPad:f,dilations:Array.from(l().subarray(y>>>0,(y>>>0)+2>>>0)),group:$,kernelShape:Array.from(l().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(l().subarray(z>>>0,(z>>>0)+4>>>0)),strides:Array.from(l().subarray(W>>>0,(W>>>0)+2>>>0)),wIsConst:()=>!!i()[le>>>0],outputPadding:ne?Array.from(l().subarray(ne>>>0,me>>>0)):[],outputShape:Ne?Array.from(l().subarray(Ne>>>0,Le>>>0)):[],activation:rt(L)})},833383:(u,f)=>{c.ob("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},833474:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee,Be)=>{c.ob("AveragePool",u,{format:Be?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[z,W],kernel_shape:[q,le],pads:[ne,me,Ne,Le],strides:[L,Ee]})},833758:(u,f)=>{c.ob("GlobalAveragePool",u,{format:f?"NHWC":"NCHW"})},833849:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee,Be)=>{c.ob("AveragePool",u,{format:Be?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[z,W],kernel_shape:[q,le],pads:[ne,me,Ne,Le],strides:[L,Ee]})},834133:(u,f)=>{c.ob("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},834220:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee,Be)=>{c.ob("MaxPool",u,{format:Be?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[z,W],kernel_shape:[q,le],pads:[ne,me,Ne,Le],strides:[L,Ee]})},834500:(u,f)=>{c.ob("GlobalMaxPool",u,{format:f?"NHWC":"NCHW"})},834587:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee,Be)=>{c.ob("MaxPool",u,{format:Be?"NHWC":"NCHW",auto_pad:f,ceil_mode:y,count_include_pad:$,storage_order:C,dilations:[z,W],kernel_shape:[q,le],pads:[ne,me,Ne,Le],strides:[L,Ee]})},834867:(u,f,y,$,C)=>{c.ob("Gemm",u,{alpha:f,beta:y,transA:$,transB:C})},834971:u=>{c.ob("MatMul",u,void 0)},835025:(u,f,y,$)=>{c.ob("ArgMax",u,{keepDims:!!f,selectLastIndex:!!y,axis:$})},835133:(u,f,y,$)=>{c.ob("ArgMin",u,{keepDims:!!f,selectLastIndex:!!y,axis:$})},835241:(u,f)=>{c.ob("Softmax",u,{axis:f})},835304:(u,f)=>{c.ob("Concat",u,{axis:f})},835364:(u,f,y,$,C)=>{c.ob("Split",u,{axis:f,numOutputs:y,splitSizes:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},835504:u=>{c.ob("Expand",u,void 0)},835558:(u,f)=>{c.ob("Gather",u,{axis:Number(f)})},835629:(u,f)=>{c.ob("GatherElements",u,{axis:Number(f)})},835708:(u,f,y,$,C,z,W,q,le,ne,me)=>{c.ob("Resize",u,{antialias:f,axes:y?Array.from(l().subarray(y>>>0,$>>>0)):[],coordinateTransformMode:rt(C),cubicCoeffA:z,excludeOutside:W,extrapolationValue:q,keepAspectRatioPolicy:rt(le),mode:rt(ne),nearestMode:rt(me)})},836054:(u,f,y,$,C,z,W)=>{c.ob("Slice",u,{starts:f?Array.from(l().subarray(f>>>0,y>>>0)):[],ends:$?Array.from(l().subarray($>>>0,C>>>0)):[],axes:z?Array.from(l().subarray(z>>>0,W>>>0)):[]})},836270:u=>{c.ob("Tile",u,void 0)},836322:(u,f,y,$)=>{c.ob("LayerNormalization",u,{axis:f,epsilon:y,simplified:!!$})},836433:(u,f,y)=>{c.ob("InstanceNormalization",u,{epsilon:f,format:y?"NHWC":"NCHW"})},836547:(u,f,y)=>{c.ob("InstanceNormalization",u,{epsilon:f,format:y?"NHWC":"NCHW"})},836661:u=>{c.ob("Range",u,void 0)},836714:(u,f)=>{c.ob("Einsum",u,{equation:rt(f)})},836795:(u,f,y,$,C)=>{c.ob("Pad",u,{mode:f,value:y,pads:$?Array.from(l().subarray($>>>0,C>>>0)):[]})},836922:(u,f,y,$,C,z)=>{c.ob("BatchNormalization",u,{epsilon:f,momentum:y,spatial:!!C,trainingMode:!!$,format:z?"NHWC":"NCHW"})},837091:(u,f,y,$,C,z)=>{c.ob("BatchNormalization",u,{epsilon:f,momentum:y,spatial:!!C,trainingMode:!!$,format:z?"NHWC":"NCHW"})},837260:(u,f,y)=>{c.ob("CumSum",u,{exclusive:Number(f),reverse:Number(y)})},837357:(u,f,y,$,C,z,W,q,le)=>{c.ob("Attention",u,{numHeads:f,isUnidirectional:y,maskFilterValue:$,scale:C,doRotary:z,qkvHiddenSizes:W?Array.from(l().subarray(Number(q)>>>0,Number(q)+W>>>0)):[],pastPresentShareBuffer:!!le})},837629:u=>{c.ob("BiasAdd",u,void 0)},837684:u=>{c.ob("BiasSplitGelu",u,void 0)},837745:u=>{c.ob("FastGelu",u,void 0)},837801:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le)=>{c.ob("Conv",u,{format:le?"NHWC":"NCHW",auto_pad:f,dilations:[y],group:$,kernel_shape:[C],pads:z?Array.from(l().subarray(z>>>0,W>>>0)):[],strides:[q],w_is_const:()=>!!i()[ne>>>0],activation:rt(me),activation_params:Ne?Array.from(m().subarray(Ne>>>0,Le>>>0)):[]})},838171:(u,f,y,$,C,z,W,q,le,ne,me,Ne,Le,L,Ee,Be)=>{c.ob("Conv",u,{format:Ne?"NHWC":"NCHW",auto_pad:f,dilations:[y,$],group:C,kernel_shape:[z,W],pads:q?Array.from(l().subarray(q>>>0,le>>>0)):[],strides:[ne,me],w_is_const:()=>!!i()[Le>>>0],activation:rt(L),activation_params:Ee?Array.from(m().subarray(Ee>>>0,Be>>>0)):[]})},838562:u=>{c.ob("Gelu",u,void 0)},838614:(u,f,y,$,C,z)=>{c.ob("MatMulNBits",u,{k:f,n:y,accuracyLevel:$,bits:C,blockSize:z})},838741:(u,f,y,$,C,z)=>{c.ob("MultiHeadAttention",u,{numHeads:f,isUnidirectional:y,maskFilterValue:$,scale:C,doRotary:z})},838900:(u,f,y,$,C)=>{c.ob("RotaryEmbedding",u,{interleaved:!!f,numHeads:y,rotaryEmbeddingDim:$,scale:C})},839039:(u,f,y)=>{c.ob("SkipLayerNormalization",u,{epsilon:f,simplified:!!y})},839141:(u,f,y)=>{c.ob("SkipLayerNormalization",u,{epsilon:f,simplified:!!y})},839243:(u,f,y,$)=>{c.ob("LayerNormalization",u,{axis:f,epsilon:y,simplified:!!$})},839354:u=>{c.ac(u)},839388:(u,f)=>c.cc(u,f,c.Cb.ec,c.Cb.errors)};function $t(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}var hn=u=>{u.terminate(),u.onmessage=()=>{}},fn=u=>{ye.xb.length==0&&($i(),ye.Mb(ye.xb[0]));var f=ye.xb.pop();if(!f)return 6;ye.yb.push(f),ye.ub[u.wb]=f,f.wb=u.wb;var y={cmd:"run",start_routine:u.fc,arg:u.Rb,pthread_ptr:u.wb};return B&&f.unref(),f.postMessage(y,u.mc),0},st=0,pa=u=>{var f=Go();return u=u(),Wi(f),u},Ae=(u,f,...y)=>pa(()=>{for(var $=2*y.length,C=Vo(8*$),z=C>>>3,W=0;W<y.length;W++){var q=y[W];typeof q=="bigint"?(He[z+2*W]=1n,He[z+2*W+1]=q):(He[z+2*W]=0n,g()[z+2*W+1>>>0]=q)}return Gg(u,0,$,C,f)});function xt(u){if(D)return Ae(0,1,u);fe=u,0<st||(ye.hc(),c.onExit?.(u),re=!0),T(u,new $t(u))}var Gr=u=>{if(fe=u,D)throw Si(u),"unwind";xt(u)};function Mo(){for(var u=c.numThreads;u--;)$i();dn.unshift(()=>{pr++,xi(()=>la())})}function $i(){var u=J("ort-wasm-simd-threaded.worker.js");u=new Worker(u),ye.xb.push(u)}function xi(u){D?u():Promise.all(ye.xb.map(ye.Mb)).then(u)}var ye={xb:[],yb:[],Qb:[],ub:{},Gb(){D?(ye.receiveObjectTransfer=ye.dc,ye.threadInitTLS=ye.Pb,ye.setExitStatus=ye.Ob):Mo()},Ob:u=>fe=u,pc:["$terminateWorker"],hc:()=>{for(var u of ye.yb)hn(u);for(u of ye.xb)hn(u);ye.xb=[],ye.yb=[],ye.ub=[]},Nb:u=>{var f=u.wb;delete ye.ub[f],ye.xb.push(u),ye.yb.splice(ye.yb.indexOf(u),1),u.wb=0,Uo(f)},dc(){},Pb(){ye.Qb.forEach(u=>u())},Mb:u=>new Promise(f=>{u.onmessage=z=>{z=z.data;var W=z.cmd;if(z.targetThread&&z.targetThread!=Li()){var q=ye.ub[z.targetThread];q?q.postMessage(z,z.transferList):te(`Internal error! Worker sent a message "${W}" to target pthread ${z.targetThread}, but that thread no longer exists!`)}else W==="checkMailbox"?wt():W==="spawnThread"?fn(z):W==="cleanupThread"?ye.Nb(ye.ub[z.thread]):W==="killThread"?(z=z.thread,W=ye.ub[z],delete ye.ub[z],hn(W),Uo(z),ye.yb.splice(ye.yb.indexOf(W),1),W.wb=0):W==="cancelThread"?ye.ub[z.thread].postMessage({cmd:"cancel"}):W==="loaded"?(u.loaded=!0,B&&!u.wb&&u.unref(),f(u)):W==="alert"?alert(`Thread ${z.threadId}: ${z.text}`):z.target==="setimmediate"?u.postMessage(z):W==="callHandler"?c[z.handler](...z.args):W&&te(`worker sent an unknown command ${W}`)},u.onerror=z=>{throw te(`worker sent an error! ${z.filename}:${z.lineno}: ${z.message}`),z},B&&(u.on("message",z=>u.onmessage({data:z})),u.on("error",z=>u.onerror(z)));var y=[],$=["onExit"],C;for(C of $)c.hasOwnProperty(C)&&y.push(C);u.postMessage({cmd:"load",handlers:y,urlOrBlob:c.mainScriptUrlOrBlob||n,wasmMemory:oe,wasmModule:V})})};c.PThread=ye;var mn=u=>{for(;0<u.length;)u.shift()(c)};c.establishStackSpace=()=>{var u=Li(),f=h()[u+52>>>2>>>0];u=h()[u+56>>>2>>>0],qg(f,f-u),Wi(f)};function Si(u){if(D)return Ae(1,0,u);Gr(u)}c.invokeEntryPoint=(u,f)=>{st=0,u=jg(u,f),0<st?ye.Ob(u):Wo(u)};class zo{constructor(f){this.Ib=f-24}Gb(f,y){h()[this.Ib+16>>>2>>>0]=0,h()[this.Ib+4>>>2>>>0]=f,h()[this.Ib+8>>>2>>>0]=y}}var ki=0;function Ei(u,f,y,$){return D?Ae(2,1,u,f,y,$):gn(u,f,y,$)}function gn(u,f,y,$){if(u>>>=0,f>>>=0,y>>>=0,$>>>=0,typeof SharedArrayBuffer>"u")return te("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return D&&C.length===0?Ei(u,f,y,$):(u={fc:y,wb:u,Rb:$,mc:C},D?(u.oc="spawnThread",postMessage(u,C),0):fn(u))}var ha=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Hr=(u,f,y)=>{f>>>=0;var $=f+y;for(y=f;u[y]&&!(y>=$);)++y;if(16<y-f&&u.buffer&&ha)return ha.decode(u.buffer instanceof SharedArrayBuffer?u.slice(f,y):u.subarray(f,y));for($="";f<y;){var C=u[f++];if(C&128){var z=u[f++]&63;if((C&224)==192)$+=String.fromCharCode((C&31)<<6|z);else{var W=u[f++]&63;C=(C&240)==224?(C&15)<<12|z<<6|W:(C&7)<<18|z<<12|W<<6|u[f++]&63,65536>C?$+=String.fromCharCode(C):(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else $+=String.fromCharCode(C)}return $},rt=(u,f)=>(u>>>=0)?Hr(s(),u,f):"";function Ci(u,f,y){return D?Ae(3,1,u,f,y):0}function Xt(u,f){if(D)return Ae(4,1,u,f)}var St=u=>{for(var f=0,y=0;y<u.length;++y){var $=u.charCodeAt(y);127>=$?f++:2047>=$?f+=2:55296<=$&&57343>=$?(f+=4,++y):f+=3}return f},fa=(u,f,y,$)=>{if(y>>>=0,!(0<$))return 0;var C=y;$=y+$-1;for(var z=0;z<u.length;++z){var W=u.charCodeAt(z);if(55296<=W&&57343>=W){var q=u.charCodeAt(++z);W=65536+((W&1023)<<10)|q&1023}if(127>=W){if(y>=$)break;f[y++>>>0]=W}else{if(2047>=W){if(y+1>=$)break;f[y++>>>0]=192|W>>6}else{if(65535>=W){if(y+2>=$)break;f[y++>>>0]=224|W>>12}else{if(y+3>=$)break;f[y++>>>0]=240|W>>18,f[y++>>>0]=128|W>>12&63}f[y++>>>0]=128|W>>6&63}f[y++>>>0]=128|W&63}}return f[y>>>0]=0,y-C},Qt=(u,f,y)=>fa(u,s(),f,y);function ma(u,f){if(D)return Ae(5,1,u,f)}function ga(u,f,y){if(D)return Ae(6,1,u,f,y)}function Ti(u,f,y){return D?Ae(7,1,u,f,y):0}function _n(u,f){if(D)return Ae(8,1,u,f)}function Ii(u,f,y){if(D)return Ae(9,1,u,f,y)}function Ai(u,f,y,$){if(D)return Ae(10,1,u,f,y,$)}function Oi(u,f,y,$){if(D)return Ae(11,1,u,f,y,$)}function Mi(u,f,y,$){if(D)return Ae(12,1,u,f,y,$)}function _a(u){if(D)return Ae(13,1,u)}function qr(u,f){if(D)return Ae(14,1,u,f)}function zi(u,f,y){if(D)return Ae(15,1,u,f,y)}var yn,At=u=>{for(var f="";s()[u>>>0];)f+=yn[s()[u++>>>0]];return f},ya={},wa={},Jt;function Ro(u,f,y={}){var $=f.name;if(!u)throw new Jt(`type "${$}" must have a positive integer typeid pointer`);if(wa.hasOwnProperty(u)){if(y.Ub)return;throw new Jt(`Cannot register type '${$}' twice`)}wa[u]=f,ya.hasOwnProperty(u)&&(f=ya[u],delete ya[u],f.forEach(C=>C()))}function ht(u,f,y={}){if(!("argPackAdvance"in f))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Ro(u,f,y)}var ba=(u,f,y)=>{switch(f){case 1:return y?$=>i()[$>>>0]:$=>s()[$>>>0];case 2:return y?$=>o()[$>>>1>>>0]:$=>d()[$>>>1>>>0];case 4:return y?$=>l()[$>>>2>>>0]:$=>h()[$>>>2>>>0];case 8:return y?$=>He[$>>>3]:$=>Nt[$>>>3];default:throw new TypeError(`invalid integer width (${f}): ${u}`)}},wn=[],Ot=[];function bn(u){u>>>=0,9<u&&--Ot[u+1]===0&&(Ot[u]=void 0,wn.push(u))}var ot=u=>{if(!u)throw new Jt("Cannot use deleted val. handle = "+u);return Ot[u]},kt=u=>{switch(u){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let f=wn.pop()||Ot.length;return Ot[f]=u,Ot[f+1]=1,f}};function jr(u){return this.fromWireType(h()[u>>>2>>>0])}var Po={name:"emscripten::val",fromWireType:u=>{var f=ot(u);return bn(u),f},toWireType:(u,f)=>kt(f),argPackAdvance:8,readValueFromPointer:jr,Bb:null},Ri=(u,f)=>{switch(f){case 4:return function(y){return this.fromWireType(m()[y>>>2>>>0])};case 8:return function(y){return this.fromWireType(g()[y>>>3>>>0])};default:throw new TypeError(`invalid float width (${f}): ${u}`)}},va=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Bo=(u,f)=>{for(var y=u>>1,$=y+f/2;!(y>=$)&&d()[y>>>0];)++y;if(y<<=1,32<y-u&&va)return va.decode(s().slice(u,y));for(y="",$=0;!($>=f/2);++$){var C=o()[u+2*$>>>1>>>0];if(C==0)break;y+=String.fromCharCode(C)}return y},Pi=(u,f,y)=>{if(y??=2147483647,2>y)return 0;y-=2;var $=f;y=y<2*u.length?y/2:u.length;for(var C=0;C<y;++C){var z=u.charCodeAt(C);o()[f>>>1>>>0]=z,f+=2}return o()[f>>>1>>>0]=0,f-$},Bi=u=>2*u.length,vn=(u,f)=>{for(var y=0,$="";!(y>=f/4);){var C=l()[u+4*y>>>2>>>0];if(C==0)break;++y,65536<=C?(C-=65536,$+=String.fromCharCode(55296|C>>10,56320|C&1023)):$+=String.fromCharCode(C)}return $},Do=(u,f,y)=>{if(f>>>=0,y??=2147483647,4>y)return 0;var $=f;y=$+y-4;for(var C=0;C<u.length;++C){var z=u.charCodeAt(C);if(55296<=z&&57343>=z){var W=u.charCodeAt(++C);z=65536+((z&1023)<<10)|W&1023}if(l()[f>>>2>>>0]=z,f+=4,f+4>y)break}return l()[f>>>2>>>0]=0,f-$},_e=u=>{for(var f=0,y=0;y<u.length;++y){var $=u.charCodeAt(y);55296<=$&&57343>=$&&++y,f+=4}return f},$a=u=>{if(!re)try{if(u(),!(0<st))try{D?Wo(fe):Gr(fe)}catch(f){f instanceof $t||f=="unwind"||T(1,f)}}catch(f){f instanceof $t||f=="unwind"||T(1,f)}};function xr(u){u>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(l(),u>>>2,u).value.then(wt),u+=128,Atomics.store(l(),u>>>2,1))}c.__emscripten_thread_mailbox_await=xr;var wt=()=>{var u=Li();u&&(xr(u),$a(Hg))};c.checkMailbox=wt;var $n=[],xn=(u,f)=>{var y=wa[u];if(y===void 0)throw u=Wg(u),y=At(u),sr(u),new Jt(`${f} has unknown type ${y}`);return y},xa=(u,f,y)=>{var $=[];return u=u.toWireType($,y),$.length&&(h()[f>>>2>>>0]=kt($)),u},Kr=u=>{try{u()}catch(f){qe(f)}};function Di(){var u=de,f={};for(let[y,$]of Object.entries(u))f[y]=typeof $=="function"?(...C)=>{hr.push(y);try{return $(...C)}finally{re||(hr.pop(),Mt&&Zt===1&&hr.length===0&&(Zt=0,st+=1,Kr(Yg),typeof Fibers<"u"&&Fibers.rc()))}}:$;return f}var Zt=0,Mt=null,Ni=0,hr=[],Sa={},p={},_=0,b=null,k=[];function O(){return new Promise((u,f)=>{b={resolve:u,reject:f}})}function P(){var u=Ui(65548),f=u+12;h()[u>>>2>>>0]=f,h()[u+4>>>2>>>0]=f+65536,f=hr[0];var y=Sa[f];return y===void 0&&(y=_++,Sa[f]=y,p[y]=f),f=y,l()[u+8>>>2>>>0]=f,u}function G(){var u=l()[Mt+8>>>2>>>0];return u=de[p[u]],--st,u()}function Y(u){if(!re){if(Zt===0){var f=!1,y=!1;u(($=0)=>{if(!re&&(Ni=$,f=!0,y)){Zt=2,Kr(()=>Xg(Mt)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),$=!1;try{var C=G()}catch(q){C=q,$=!0}var z=!1;if(!Mt){var W=b;W&&(b=null,($?W.reject:W.resolve)(C),z=!0)}if($&&!z)throw C}}),y=!0,f||(Zt=1,Mt=P(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Kr(()=>Kg(Mt)))}else Zt===2?(Zt=0,Kr(Qg),sr(Mt),Mt=null,k.forEach($a)):qe(`invalid state: ${Zt}`);return Ni}}function ie(u){return Y(f=>{u().then(f)})}var ee=[],pe={},Re=u=>{var f=pe[u];return f===void 0?At(u):f},De=()=>typeof globalThis=="object"?globalThis:Function("return this")(),N=u=>{var f=ee.length;return ee.push(u),f},xe=(u,f)=>{for(var y=Array(u),$=0;$<u;++$)y[$]=xn(h()[f+4*$>>>2>>>0],"parameter "+$);return y},Oe=(u,f)=>Object.defineProperty(f,"name",{value:u});function fr(u){var f=Function;if(!(f instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof f} which is not a function`);var y=Oe(f.name||"unknownFunctionName",function(){});return y.prototype=f.prototype,y=new y,u=f.apply(y,u),u instanceof Object?u:y}var mr=u=>u%4===0&&(u%100!==0||u%400===0),Eg=[0,31,60,91,121,152,182,213,244,274,305,335],Cg=[0,31,59,90,120,151,181,212,243,273,304,334];function Tg(u,f,y,$,C,z,W){return D?Ae(16,1,u,f,y,$,C,z,W):-52}function Ig(u,f,y,$,C,z){if(D)return Ae(17,1,u,f,y,$,C,z)}var No=[],Ag=(u,f)=>{No.length=0;for(var y;y=s()[u++>>>0];){var $=y!=105;$&=y!=112,f+=$&&f%8?4:0,No.push(y==112?h()[f>>>2>>>0]:y==106?He[f>>>3]:y==105?l()[f>>>2>>>0]:g()[f>>>3>>>0]),f+=$?8:4}return No},Fo={},Og=()=>{if(!Lo){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:I||"./this.program"},f;for(f in Fo)Fo[f]===void 0?delete u[f]:u[f]=Fo[f];var y=[];for(f in u)y.push(`${f}=${u[f]}`);Lo=y}return Lo},Lo;function Mg(u,f){if(D)return Ae(18,1,u,f);u>>>=0,f>>>=0;var y=0;return Og().forEach(($,C)=>{var z=f+y;for(C=h()[u+4*C>>>2>>>0]=z,z=0;z<$.length;++z)i()[C++>>>0]=$.charCodeAt(z);i()[C>>>0]=0,y+=$.length+1}),0}function zg(u,f){if(D)return Ae(19,1,u,f);u>>>=0,f>>>=0;var y=Og();h()[u>>>2>>>0]=y.length;var $=0;return y.forEach(C=>$+=C.length+1),h()[f>>>2>>>0]=$,0}function Rg(u){return D?Ae(20,1,u):52}function Pg(u,f,y,$){return D?Ae(21,1,u,f,y,$):52}function Bg(u,f,y,$){return D?Ae(22,1,u,f,y,$):70}var oS=[null,[],[]];function Dg(u,f,y,$){if(D)return Ae(23,1,u,f,y,$);f>>>=0,y>>>=0,$>>>=0;for(var C=0,z=0;z<y;z++){var W=h()[f>>>2>>>0],q=h()[f+4>>>2>>>0];f+=8;for(var le=0;le<q;le++){var ne=s()[W+le>>>0],me=oS[u];ne===0||ne===10?((u===1?ve:te)(Hr(me,0)),me.length=0):me.push(ne)}C+=q}return h()[$>>>2>>>0]=C,0}var Ng=[31,29,31,30,31,30,31,31,30,31,30,31],Fg=[31,28,31,30,31,30,31,31,30,31,30,31];function uS(u){var f=Array(St(u)+1);return fa(u,f,0,f.length),f}var lS=(u,f)=>{i().set(u,f>>>0)};function Lg(u,f,y,$){function C(L,Ee,Be){for(L=typeof L=="number"?L.toString():L||"";L.length<Ee;)L=Be[0]+L;return L}function z(L,Ee){return C(L,Ee,"0")}function W(L,Ee){function Be(Zg){return 0>Zg?-1:0<Zg?1:0}var Yr;return(Yr=Be(L.getFullYear()-Ee.getFullYear()))===0&&(Yr=Be(L.getMonth()-Ee.getMonth()))===0&&(Yr=Be(L.getDate()-Ee.getDate())),Yr}function q(L){switch(L.getDay()){case 0:return new Date(L.getFullYear()-1,11,29);case 1:return L;case 2:return new Date(L.getFullYear(),0,3);case 3:return new Date(L.getFullYear(),0,2);case 4:return new Date(L.getFullYear(),0,1);case 5:return new Date(L.getFullYear()-1,11,31);case 6:return new Date(L.getFullYear()-1,11,30)}}function le(L){var Ee=L.zb;for(L=new Date(new Date(L.Ab+1900,0,1).getTime());0<Ee;){var Be=L.getMonth(),Yr=(mr(L.getFullYear())?Ng:Fg)[Be];if(Ee>Yr-L.getDate())Ee-=Yr-L.getDate()+1,L.setDate(1),11>Be?L.setMonth(Be+1):(L.setMonth(0),L.setFullYear(L.getFullYear()+1));else{L.setDate(L.getDate()+Ee);break}}return Be=new Date(L.getFullYear()+1,0,4),Ee=q(new Date(L.getFullYear(),0,4)),Be=q(Be),0>=W(Ee,L)?0>=W(Be,L)?L.getFullYear()+1:L.getFullYear():L.getFullYear()-1}u>>>=0,f>>>=0,y>>>=0,$>>>=0;var ne=h()[$+40>>>2>>>0];$={kc:l()[$>>>2>>>0],jc:l()[$+4>>>2>>>0],Eb:l()[$+8>>>2>>>0],Jb:l()[$+12>>>2>>>0],Fb:l()[$+16>>>2>>>0],Ab:l()[$+20>>>2>>>0],vb:l()[$+24>>>2>>>0],zb:l()[$+28>>>2>>>0],qc:l()[$+32>>>2>>>0],ic:l()[$+36>>>2>>>0],lc:ne?rt(ne):""},y=rt(y),ne={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in ne)y=y.replace(new RegExp(me,"g"),ne[me]);var Ne="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Le="January February March April May June July August September October November December".split(" ");ne={"%a":L=>Ne[L.vb].substring(0,3),"%A":L=>Ne[L.vb],"%b":L=>Le[L.Fb].substring(0,3),"%B":L=>Le[L.Fb],"%C":L=>z((L.Ab+1900)/100|0,2),"%d":L=>z(L.Jb,2),"%e":L=>C(L.Jb,2," "),"%g":L=>le(L).toString().substring(2),"%G":le,"%H":L=>z(L.Eb,2),"%I":L=>(L=L.Eb,L==0?L=12:12<L&&(L-=12),z(L,2)),"%j":L=>{for(var Ee=0,Be=0;Be<=L.Fb-1;Ee+=(mr(L.Ab+1900)?Ng:Fg)[Be++]);return z(L.Jb+Ee,3)},"%m":L=>z(L.Fb+1,2),"%M":L=>z(L.jc,2),"%n":()=>`
`,"%p":L=>0<=L.Eb&&12>L.Eb?"AM":"PM","%S":L=>z(L.kc,2),"%t":()=>"	","%u":L=>L.vb||7,"%U":L=>z(Math.floor((L.zb+7-L.vb)/7),2),"%V":L=>{var Ee=Math.floor((L.zb+7-(L.vb+6)%7)/7);if(2>=(L.vb+371-L.zb-2)%7&&Ee++,Ee)Ee==53&&(Be=(L.vb+371-L.zb)%7,Be==4||Be==3&&mr(L.Ab)||(Ee=1));else{Ee=52;var Be=(L.vb+7-L.zb-1)%7;(Be==4||Be==5&&mr(L.Ab%400-1))&&Ee++}return z(Ee,2)},"%w":L=>L.vb,"%W":L=>z(Math.floor((L.zb+7-(L.vb+6)%7)/7),2),"%y":L=>(L.Ab+1900).toString().substring(2),"%Y":L=>L.Ab+1900,"%z":L=>{L=L.ic;var Ee=0<=L;return L=Math.abs(L)/60,(Ee?"+":"-")+("0000"+(L/60*100+L%60)).slice(-4)},"%Z":L=>L.lc,"%%":()=>"%"},y=y.replace(/%%/g,"\0\0");for(me in ne)y.includes(me)&&(y=y.replace(new RegExp(me,"g"),ne[me]($)));return y=y.replace(/\0\0/g,"%"),me=uS(y),me.length>f?0:(lS(me,u),me.length-1)}ye.Gb();for(var Ug=Array(256),Fi=0;256>Fi;++Fi)Ug[Fi]=String.fromCharCode(Fi);yn=Ug,Jt=c.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},c.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Ot.push(0,1,void 0,1,null,1,!0,1,!1,1),c.count_emval_handles=()=>Ot.length/2-5-wn.length;var dS=[xt,Si,Ei,Ci,Xt,ma,ga,Ti,_n,Ii,Ai,Oi,Mi,_a,qr,zi,Tg,Ig,Mg,zg,Rg,Pg,Bg,Dg],cS={ua:function(u,f,y){return ie(async()=>{await c.Zb(u,f,y)})},b:function(u,f,y){throw u>>>=0,new zo(u).Gb(f>>>0,y>>>0),ki=u,ki},ia:function(u){Vg(u>>>0,!U,1,!M,131072,!1),ye.Pb()},G:function(u){u>>>=0,D?postMessage({cmd:"cleanupThread",thread:u}):ye.Nb(ye.ub[u])},_:gn,A:Ci,pa:Xt,W:ma,Y:ga,qa:Ti,na:_n,fa:Ii,ma:Ai,K:Oi,X:Mi,U:_a,oa:qr,V:zi,E:function(u,f,y){u>>>=0,y>>>=0,f=At(f>>>0),ht(u,{name:f,fromWireType:$=>$,toWireType:function($,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":($=typeof C,C=$==="object"||$==="array"||$==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:ba(f,y,f.indexOf("u")==-1),Bb:null})},O:function(u,f,y,$){u>>>=0,f=At(f>>>0),ht(u,{name:f,fromWireType:function(C){return!!C},toWireType:function(C,z){return z?y:$},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(s()[C>>>0])},Bb:null})},N:function(u){return ht(u>>>0,Po)},D:function(u,f,y){u>>>=0,y>>>=0,f=At(f>>>0),ht(u,{name:f,fromWireType:$=>$,toWireType:($,C)=>C,argPackAdvance:8,readValueFromPointer:Ri(f,y),Bb:null})},t:function(u,f,y,$,C){if(u>>>=0,y>>>=0,f=At(f>>>0),C===-1&&(C=4294967295),C=q=>q,$===0){var z=32-8*y;C=q=>q<<z>>>z}var W=f.includes("unsigned")?function(q,le){return le>>>0}:function(q,le){return le};ht(u,{name:f,fromWireType:C,toWireType:W,argPackAdvance:8,readValueFromPointer:ba(f,y,$!==0),Bb:null})},p:function(u,f,y){function $(z){var W=h()[z>>>2>>>0];return z=h()[z+4>>>2>>>0],new C(i().buffer,z,W)}u>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][f];y=At(y>>>0),ht(u,{name:y,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{Ub:!0})},F:function(u,f){u>>>=0,f=At(f>>>0);var y=f==="std::string";ht(u,{name:f,fromWireType:function($){var C=h()[$>>>2>>>0],z=$+4;if(y)for(var W=z,q=0;q<=C;++q){var le=z+q;if(q==C||s()[le>>>0]==0){if(W=rt(W,le-W),ne===void 0)var ne=W;else ne+="\0",ne+=W;W=le+1}}else{for(ne=Array(C),q=0;q<C;++q)ne[q]=String.fromCharCode(s()[z+q>>>0]);ne=ne.join("")}return sr($),ne},toWireType:function($,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var z=typeof C=="string";if(!(z||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new Jt("Cannot pass non-string to std::string");var W=y&&z?St(C):C.length,q=Ui(4+W+1),le=q+4;if(h()[q>>>2>>>0]=W,y&&z)Qt(C,le,W+1);else if(z)for(z=0;z<W;++z){var ne=C.charCodeAt(z);if(255<ne)throw sr(le),new Jt("String has UTF-16 code units that do not fit in 8 bits");s()[le+z>>>0]=ne}else for(z=0;z<W;++z)s()[le+z>>>0]=C[z];return $!==null&&$.push(sr,q),q},argPackAdvance:8,readValueFromPointer:jr,Bb($){sr($)}})},z:function(u,f,y){if(u>>>=0,f>>>=0,y>>>=0,y=At(y),f===2)var $=Bo,C=Pi,z=Bi,W=q=>d()[q>>>1>>>0];else f===4&&($=vn,C=Do,z=_e,W=q=>h()[q>>>2>>>0]);ht(u,{name:y,fromWireType:q=>{for(var le=h()[q>>>2>>>0],ne,me=q+4,Ne=0;Ne<=le;++Ne){var Le=q+4+Ne*f;(Ne==le||W(Le)==0)&&(me=$(me,Le-me),ne===void 0?ne=me:(ne+="\0",ne+=me),me=Le+f)}return sr(q),ne},toWireType:(q,le)=>{if(typeof le!="string")throw new Jt(`Cannot pass non-string to C++ string type ${y}`);var ne=z(le),me=Ui(4+ne+f);return h()[me>>>2>>>0]=ne/f,C(le,me+4,ne+f),q!==null&&q.push(sr,me),me},argPackAdvance:8,readValueFromPointer:jr,Bb(q){sr(q)}})},P:function(u,f){u>>>=0,f=At(f>>>0),ht(u,{Vb:!0,name:f,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(u,f){u>>>=0,u==f>>>0?setTimeout(wt):D?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=ye.ub[u])&&u.postMessage({cmd:"checkMailbox"})},$:function(u,f,y,$,C){f>>>=0,y>>>=0,$/=2,$n.length=$,C=C>>>0>>>3;for(var z=0;z<$;z++)$n[z]=He[C+2*z]?He[C+2*z+1]:g()[C+2*z+1>>>0];return u=f?ca[f]:dS[u],ye.Sb=y,y=u(...$n),ye.Sb=0,y},ha:xr,sa:function(u){B&&ye.ub[u>>>0].ref()},w:function(u,f,y){return f>>>=0,y>>>=0,u=ot(u>>>0),f=xn(f,"emval::as"),xa(f,y,u)},y:function(u){return u>>>=0,ie(()=>(u=ot(u),u.then(kt)))},o:function(u,f,y,$){return y>>>=0,$>>>=0,u=ee[u>>>0],f=ot(f>>>0),u(null,f,y,$)},k:function(u,f,y,$,C){return y>>>=0,$>>>=0,C>>>=0,u=ee[u>>>0],f=ot(f>>>0),y=Re(y),u(f,f[y],$,C)},c:bn,C:function(u,f){return f>>>=0,u=ot(u>>>0),f=ot(f),u==f},n:function(u){return u>>>=0,u===0?kt(De()):(u=Re(u),kt(De()[u]))},j:function(u,f,y){f=xe(u,f>>>0);var $=f.shift();u--;var C=`return function (obj, func, destructorsRef, args) {
`,z=0,W=[];y===0&&W.push("obj");for(var q=["retType"],le=[$],ne=0;ne<u;++ne)W.push("arg"+ne),q.push("argType"+ne),le.push(f[ne]),C+=`  var arg${ne} = argType${ne}.readValueFromPointer(args${z?"+"+z:""});
`,z+=f[ne].argPackAdvance;return C+=`  var rv = ${y===1?"new func":"func.call"}(${W.join(", ")});
`,$.Vb||(q.push("emval_returnValue"),le.push(xa),C+=`  return emval_returnValue(retType, destructorsRef, rv);
`),q.push(C+`};
`),u=fr(q)(...le),y=`methodCaller<(${f.map(me=>me.name).join(", ")}) => ${$.name}>`,N(Oe(y,u))},s:function(u,f){return f>>>=0,u=ot(u>>>0),f=ot(f),kt(u[f])},d:function(u){u>>>=0,9<u&&(Ot[u+1]+=1)},v:function(){return kt([])},m:function(u){u=ot(u>>>0);for(var f=Array(u.length),y=0;y<u.length;y++)f[y]=u[y];return kt(f)},g:function(u){return kt(Re(u>>>0))},l:function(){return kt({})},i:function(u){u>>>=0;for(var f=ot(u);f.length;){var y=f.pop();f.pop()(y)}bn(u)},h:function(u,f,y){f>>>=0,y>>>=0,u=ot(u>>>0),f=ot(f),y=ot(y),u[f]=y},e:function(u,f){return f>>>=0,u=xn(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(f),kt(u)},ca:function(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),l()[f>>>2>>>0]=u.getUTCSeconds(),l()[f+4>>>2>>>0]=u.getUTCMinutes(),l()[f+8>>>2>>>0]=u.getUTCHours(),l()[f+12>>>2>>>0]=u.getUTCDate(),l()[f+16>>>2>>>0]=u.getUTCMonth(),l()[f+20>>>2>>>0]=u.getUTCFullYear()-1900,l()[f+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[f+28>>>2>>>0]=u},da:function(u,f){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),f>>>=0,u=new Date(1e3*u),l()[f>>>2>>>0]=u.getSeconds(),l()[f+4>>>2>>>0]=u.getMinutes(),l()[f+8>>>2>>>0]=u.getHours(),l()[f+12>>>2>>>0]=u.getDate(),l()[f+16>>>2>>>0]=u.getMonth(),l()[f+20>>>2>>>0]=u.getFullYear()-1900,l()[f+24>>>2>>>0]=u.getDay();var y=(mr(u.getFullYear())?Eg:Cg)[u.getMonth()]+u.getDate()-1|0;l()[f+28>>>2>>>0]=y,l()[f+36>>>2>>>0]=-(60*u.getTimezoneOffset()),y=new Date(u.getFullYear(),6,1).getTimezoneOffset();var $=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=(y!=$&&u.getTimezoneOffset()==Math.min($,y))|0,l()[f+32>>>2>>>0]=u},ea:function(u){u>>>=0;var f=new Date(l()[u+20>>>2>>>0]+1900,l()[u+16>>>2>>>0],l()[u+12>>>2>>>0],l()[u+8>>>2>>>0],l()[u+4>>>2>>>0],l()[u>>>2>>>0],0),y=l()[u+32>>>2>>>0],$=f.getTimezoneOffset(),C=new Date(f.getFullYear(),6,1).getTimezoneOffset(),z=new Date(f.getFullYear(),0,1).getTimezoneOffset(),W=Math.min(z,C);return 0>y?l()[u+32>>>2>>>0]=+(C!=z&&W==$):0<y!=(W==$)&&(C=Math.max(z,C),f.setTime(f.getTime()+6e4*((0<y?W:C)-$))),l()[u+24>>>2>>>0]=f.getDay(),y=(mr(f.getFullYear())?Eg:Cg)[f.getMonth()]+f.getDate()-1|0,l()[u+28>>>2>>>0]=y,l()[u>>>2>>>0]=f.getSeconds(),l()[u+4>>>2>>>0]=f.getMinutes(),l()[u+8>>>2>>>0]=f.getHours(),l()[u+12>>>2>>>0]=f.getDate(),l()[u+16>>>2>>>0]=f.getMonth(),l()[u+20>>>2>>>0]=f.getYear(),u=f.getTime(),BigInt(isNaN(u)?-1:u/1e3)},aa:Tg,ba:Ig,R:function(u,f,y,$){u>>>=0,f>>>=0,y>>>=0,$>>>=0;var C=new Date().getFullYear(),z=new Date(C,0,1),W=new Date(C,6,1);C=z.getTimezoneOffset();var q=W.getTimezoneOffset(),le=Math.max(C,q);h()[u>>>2>>>0]=60*le,l()[f>>>2>>>0]=+(C!=q),u=ne=>ne.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],z=u(z),W=u(W),q<C?(Qt(z,y,17),Qt(W,$,17)):(Qt(z,$,17),Qt(W,y,17))},q:()=>{qe("")},f:function(u,f,y){return u>>>=0,f=Ag(f>>>0,y>>>0),ca[u](...f)},M:function(u,f,y){return u>>>=0,f=Ag(f>>>0,y>>>0),ca[u](...f)},H:()=>{},L:()=>Date.now(),ra:()=>{throw st+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>B?(W0(),Cr(xu)).cpus().length:navigator.hardwareConcurrency,Q:function(u){u>>>=0;var f=s().length;if(u<=f||4294901760<u)return!1;for(var y=1;4>=y;y*=2){var $=f*(1+.2/y);$=Math.min($,u+100663296);var C=Math;$=Math.max(u,$);e:{C=(C.min.call(C,4294901760,$+(65536-$%65536)%65536)-oe.buffer.byteLength+65535)/65536;try{oe.grow(C),yt();var z=1;break e}catch{}z=void 0}if(z)return!0}return!1},ja:Mg,la:zg,Z:Gr,B:Rg,J:Pg,ga:Bg,I:Dg,a:oe||c.wasmMemory,ka:Lg,r:function(u,f,y,$){return Lg(u>>>0,f>>>0,y>>>0,$>>>0)}},de=function(){function u(y,$){return de=y.exports,de=Di(),de=pS(),ye.Qb.push(de.cb),Vr.unshift(de.va),V=$,la(),de}var f={a:cS};if(pr++,c.instantiateWasm)try{return c.instantiateWasm(f,u)}catch(y){te(`Module.instantiateWasm callback failed with error: ${y}`),v(y)}return ir(f,function(y){u(y.instance,y.module)}).catch(v),{}}(),Wg=u=>(Wg=de.wa)(u);c.__embind_initialize_bindings=()=>(c.__embind_initialize_bindings=de.xa)(),c._OrtInit=(u,f)=>(c._OrtInit=de.ya)(u,f),c._OrtGetLastError=(u,f)=>(c._OrtGetLastError=de.za)(u,f),c._OrtCreateSessionOptions=(u,f,y,$,C,z,W,q,le,ne)=>(c._OrtCreateSessionOptions=de.Aa)(u,f,y,$,C,z,W,q,le,ne),c._OrtAppendExecutionProvider=(u,f)=>(c._OrtAppendExecutionProvider=de.Ba)(u,f),c._OrtAddFreeDimensionOverride=(u,f,y)=>(c._OrtAddFreeDimensionOverride=de.Ca)(u,f,y),c._OrtAddSessionConfigEntry=(u,f,y)=>(c._OrtAddSessionConfigEntry=de.Da)(u,f,y),c._OrtReleaseSessionOptions=u=>(c._OrtReleaseSessionOptions=de.Ea)(u),c._OrtCreateSession=(u,f,y)=>(c._OrtCreateSession=de.Fa)(u,f,y),c._OrtReleaseSession=u=>(c._OrtReleaseSession=de.Ga)(u),c._OrtGetInputOutputCount=(u,f,y)=>(c._OrtGetInputOutputCount=de.Ha)(u,f,y),c._OrtGetInputName=(u,f)=>(c._OrtGetInputName=de.Ia)(u,f),c._OrtGetOutputName=(u,f)=>(c._OrtGetOutputName=de.Ja)(u,f),c._OrtFree=u=>(c._OrtFree=de.Ka)(u),c._OrtCreateTensor=(u,f,y,$,C,z)=>(c._OrtCreateTensor=de.La)(u,f,y,$,C,z),c._OrtGetTensorData=(u,f,y,$,C)=>(c._OrtGetTensorData=de.Ma)(u,f,y,$,C),c._OrtReleaseTensor=u=>(c._OrtReleaseTensor=de.Na)(u),c._OrtCreateRunOptions=(u,f,y,$)=>(c._OrtCreateRunOptions=de.Oa)(u,f,y,$),c._OrtAddRunConfigEntry=(u,f,y)=>(c._OrtAddRunConfigEntry=de.Pa)(u,f,y),c._OrtReleaseRunOptions=u=>(c._OrtReleaseRunOptions=de.Qa)(u),c._OrtCreateBinding=u=>(c._OrtCreateBinding=de.Ra)(u),c._OrtBindInput=(u,f,y)=>(c._OrtBindInput=de.Sa)(u,f,y),c._OrtBindOutput=(u,f,y,$)=>(c._OrtBindOutput=de.Ta)(u,f,y,$),c._OrtClearBoundOutputs=u=>(c._OrtClearBoundOutputs=de.Ua)(u),c._OrtReleaseBinding=u=>(c._OrtReleaseBinding=de.Va)(u),c._OrtRunWithBinding=(u,f,y,$,C)=>(c._OrtRunWithBinding=de.Wa)(u,f,y,$,C),c._OrtRun=(u,f,y,$,C,z,W,q)=>(c._OrtRun=de.Xa)(u,f,y,$,C,z,W,q),c._OrtEndProfiling=u=>(c._OrtEndProfiling=de.Ya)(u),c._JsepOutput=(u,f,y)=>(c._JsepOutput=de.Za)(u,f,y),c._JsepGetNodeName=u=>(c._JsepGetNodeName=de._a)(u);var Li=c._pthread_self=()=>(Li=c._pthread_self=de.$a)(),Ui=c._malloc=u=>(Ui=c._malloc=de.ab)(u),sr=c._free=u=>(sr=c._free=de.bb)(u);c.__emscripten_tls_init=()=>(c.__emscripten_tls_init=de.cb)();var Vg=c.__emscripten_thread_init=(u,f,y,$,C,z)=>(Vg=c.__emscripten_thread_init=de.eb)(u,f,y,$,C,z);c.__emscripten_thread_crashed=()=>(c.__emscripten_thread_crashed=de.fb)();var Gg=(u,f,y,$,C)=>(Gg=de.gb)(u,f,y,$,C),Uo=u=>(Uo=de.hb)(u),Wo=c.__emscripten_thread_exit=u=>(Wo=c.__emscripten_thread_exit=de.ib)(u),Hg=()=>(Hg=de.jb)(),qg=(u,f)=>(qg=de.kb)(u,f),Wi=u=>(Wi=de.lb)(u),Vo=u=>(Vo=de.mb)(u),Go=()=>(Go=de.nb)(),jg=c.dynCall_ii=(u,f)=>(jg=c.dynCall_ii=de.pb)(u,f),Kg=u=>(Kg=de.qb)(u),Yg=()=>(Yg=de.rb)(),Xg=u=>(Xg=de.sb)(u),Qg=()=>(Qg=de.tb)();c.___start_em_js=839500,c.___stop_em_js=839661;function pS(){var u=de;u=Object.assign({},u);var f=$=>C=>$(C)>>>0,y=$=>()=>$()>>>0;return u.wa=f(u.wa),u.$a=y(u.$a),u.ab=f(u.ab),u.emscripten_main_runtime_thread_id=y(u.emscripten_main_runtime_thread_id),u.mb=f(u.mb),u.nb=y(u.nb),u}c.wasmMemory=oe,c.stackSave=()=>Go(),c.stackRestore=u=>Wi(u),c.stackAlloc=u=>Vo(u),c.keepRuntimeAlive=()=>0<st,c.UTF8ToString=rt,c.stringToUTF8=Qt,c.lengthBytesUTF8=St,c.ExitStatus=$t,c.PThread=ye;var Vi;vr=function u(){Vi||Jg(),Vi||(vr=u)};function Jg(){if(!(0<pr))if(D)w(c),D||mn(Vr),startWorker(c);else{if(c.preRun)for(typeof c.preRun=="function"&&(c.preRun=[c.preRun]);c.preRun.length;)dn.unshift(c.preRun.shift());mn(dn),0<pr||Vi||(Vi=!0,c.calledRun=!0,re||(D||mn(Vr),w(c),D||mn(Oo)))}}return Jg(),S}})();typeof t=="object"&&typeof e=="object"?e.exports=r:typeof define=="function"&&define.amd&&define([],()=>r)}),G0=Xr((t,e)=>{e.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'}),ku,Eu,us,za,Tn,ls,Cu,Tu,Iu,Au,et,In=X(()=>{ku=F0(),Eu=V0(),za=!1,Tn=!1,ls=!1,Cu=t=>{if(t===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+t+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Tu=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Iu=(t,e)=>t?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Au=async t=>{if(za)return Promise.resolve();if(Tn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ls)throw new Error("previous call to 'initializeWebAssembly()' failed.");Tn=!0;let e=t.initTimeout,r=t.numThreads,n=t.simd,a=Cu(r),i=n&&Tu(),s=t.wasmPaths,o=typeof s=="string"?s:void 0,d=Iu(i,a),l=typeof s=="object"?s[d]:void 0,h=!1,m=[];if(e>0&&m.push(new Promise(g=>{setTimeout(()=>{h=!0,g()},e)})),m.push(new Promise((g,c)=>{let w=a?Eu:ku,v={locateFile:(S,E)=>{if(a&&S.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([G0()],{type:"text/javascript"}));if(S.endsWith(".wasm")){if(l)return l;let x=o??E;return d==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":d==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+d}return E+S}};if(a)if(v.numThreads=r,typeof Blob>"u")v.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let S=`var ortWasmThreaded=${w.toString()};`;v.mainScriptUrlOrBlob=new Blob([S],{type:"text/javascript"})}w(v).then(S=>{Tn=!1,za=!0,us=S,g()},S=>{Tn=!1,ls=!0,c(S)})})),await Promise.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},et=()=>{if(za&&us)return us;throw new Error("WebAssembly is not initialized yet.")}}),Ye,Ra,We,ds=X(()=>{In(),Ye=(t,e)=>{let r=et(),n=r.lengthBytesUTF8(t)+1,a=r._malloc(n);return r.stringToUTF8(t,a,n),e.push(a),a},Ra=(t,e,r,n)=>{if(typeof t=="object"&&t!==null){if(r.has(t))throw new Error("Circular reference in options");r.add(t)}Object.entries(t).forEach(([a,i])=>{let s=e?e+a:a;if(typeof i=="object")Ra(i,s+".",r,n);else if(typeof i=="string"||typeof i=="number")n(s,i.toString());else if(typeof i=="boolean")n(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},We=t=>{let e=et(),r=e.stackSave();try{let n=e.stackAlloc(8);e._OrtGetLastError(n,n+4);let a=e.HEAP32[n/4],i=e.HEAPU32[n/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${t} ERROR_CODE: ${a}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(r)}}}),Ou,H0=X(()=>{In(),ds(),Ou=t=>{let e=et(),r=0,n=[],a=t||{};try{if(t?.logSeverityLevel===void 0)a.logSeverityLevel=2;else if(typeof t.logSeverityLevel!="number"||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(t?.logVerbosityLevel===void 0)a.logVerbosityLevel=0;else if(typeof t.logVerbosityLevel!="number"||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);t?.terminate===void 0&&(a.terminate=!1);let i=0;return t?.tag!==void 0&&(i=Ye(t.tag,n)),r=e._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,i),r===0&&We("Can't create run options."),t?.extra!==void 0&&Ra(t.extra,"",new WeakSet,(s,o)=>{let d=Ye(s,n),l=Ye(o,n);e._OrtAddRunConfigEntry(r,d,l)!==0&&We(`Can't set a run config entry: ${s} - ${o}.`)}),[r,n]}catch(i){throw r!==0&&e._OrtReleaseRunOptions(r),n.forEach(s=>e._free(s)),i}}}),Mu,zu,Ru,Pu,Bu,q0=X(()=>{In(),ds(),Mu=t=>{switch(t){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}},zu=t=>{switch(t){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}},Ru=t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});let e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),t.executionProviders&&t.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(t.enableMemPattern=!1)},Pu=(t,e,r)=>{for(let n of e){let a=typeof n=="string"?n:n.name;switch(a){case"webnn":if(a="WEBNN",typeof n!="string"){let s=n;if(s?.deviceType){let o=Ye("deviceType",r),d=Ye(s.deviceType,r);et()._OrtAddSessionConfigEntry(t,o,d)!==0&&We(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let o=s.numThreads;(typeof o!="number"||!Number.isInteger(o)||o<0)&&(o=0);let d=Ye("numThreads",r),l=Ye(o.toString(),r);et()._OrtAddSessionConfigEntry(t,d,l)!==0&&We(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let o=Ye("powerPreference",r),d=Ye(s.powerPreference,r);et()._OrtAddSessionConfigEntry(t,o,d)!==0&&We(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(a="JS",typeof n!="string"){let s=n;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let o=Ye("preferredLayout",r),d=Ye(s.preferredLayout,r);et()._OrtAddSessionConfigEntry(t,o,d)!==0&&We(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${a}`)}let i=Ye(a,r);et()._OrtAppendExecutionProvider(t,i)!==0&&We(`Can't append execution provider: ${a}.`)}},Bu=t=>{let e=et(),r=0,n=[],a=t||{};Ru(a);try{let i=Mu(a.graphOptimizationLevel??"all"),s=zu(a.executionMode??"sequential"),o=typeof a.logId=="string"?Ye(a.logId,n):0,d=a.logSeverityLevel??2;if(!Number.isInteger(d)||d<0||d>4)throw new Error(`log serverity level is not valid: ${d}`);let l=a.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let h=typeof a.optimizedModelFilePath=="string"?Ye(a.optimizedModelFilePath,n):0;if(r=e._OrtCreateSessionOptions(i,!!a.enableCpuMemArena,!!a.enableMemPattern,s,!!a.enableProfiling,0,o,d,l,h),r===0&&We("Can't create session options."),a.executionProviders&&Pu(r,a.executionProviders,n),a.enableGraphCapture!==void 0){if(typeof a.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let m=Ye("enableGraphCapture",n),g=Ye(a.enableGraphCapture.toString(),n);e._OrtAddSessionConfigEntry(r,m,g)!==0&&We(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[m,g]of Object.entries(a.freeDimensionOverrides)){if(typeof m!="string")throw new Error(`free dimension override name must be a string: ${m}`);if(typeof g!="number"||!Number.isInteger(g)||g<0)throw new Error(`free dimension override value must be a non-negative integer: ${g}`);let c=Ye(m,n);e._OrtAddFreeDimensionOverride(r,c,g)!==0&&We(`Can't set a free dimension override: ${m} - ${g}.`)}return a.extra!==void 0&&Ra(a.extra,"",new WeakSet,(m,g)=>{let c=Ye(m,n),w=Ye(g,n);e._OrtAddSessionConfigEntry(r,c,w)!==0&&We(`Can't set a session config entry: ${m} - ${g}.`)}),[r,n]}catch(i){throw r!==0&&e._OrtReleaseSessionOptions(r),n.forEach(s=>e._free(s)),i}}}),cs,Ar,An,ps,Pa,hs,fs,be=X(()=>{cs=t=>{switch(t){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${t}`)}},Ar=t=>{switch(t){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${t}`)}},An=t=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][t],ps=t=>{switch(t){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}},Pa=t=>{switch(t){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${t}`)}},hs=t=>t==="float32"||t==="float16"||t==="int32"||t==="int64"||t==="uint32"||t==="uint8"||t==="bool",fs=t=>{switch(t){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${t}`)}}}),Ba,Du=X(()=>{Ba=async t=>{if(typeof t=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(t))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(t),n=[];for await(let a of r)n.push(a);return new Uint8Array(Buffer.concat(n))}throw e}else{let e=await fetch(t);if(!e.ok)throw new Error(`failed to load external data file: ${t}`);let r=e.headers.get("Content-Length"),n=r?parseInt(r,10):0;if(n<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${t}, no response body.`);let a=e.body.getReader(),i;try{i=new ArrayBuffer(n)}catch(o){if(o instanceof RangeError){let d=Math.ceil(n/65536);i=new WebAssembly.Memory({initial:d,maximum:d}).buffer}else throw o}let s=0;for(;;){let{done:o,value:d}=await a.read();if(o)break;let l=d.byteLength;new Uint8Array(i,s,l).set(d),s+=l}return new Uint8Array(i,0,n)}}else return t instanceof Blob?new Uint8Array(await t.arrayBuffer()):t instanceof Uint8Array?t:new Uint8Array(t)}}),Nu,Fu,Lu,Uu,Wu,Vu,Xe,Or=X(()=>{be(),Nu=["V","I","W","E","F"],Fu=(t,e)=>{console.log(`[${Nu[t]},${new Date().toISOString()}]${e}`)},Wu=(t,e)=>{Lu=t,Uu=e},Vu=(t,e)=>{let r=Pa(t),n=Pa(Lu);r>=n&&Fu(r,typeof e=="function"?e():e)},Xe=(...t)=>{Uu&&Vu(...t)}}),Gu,j0=X(()=>{be(),Gu=(t,e)=>new(ps(e))(t)}),ms=X(()=>{}),gs,Da,Na,Hu,qu,_s,ys,ju,Ku,K0=X(()=>{Or(),ms(),gs=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Da=[],Na=t=>Math.ceil(t/16)*16,Hu=t=>{for(let e=0;e<Da.length;e++){let r=Da[e];if(t<=r)return r}return Math.ceil(t/16)*16},qu=1,_s=()=>qu++,ys=async(t,e,r,n)=>{let a=Na(r),i=t.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=t.getCommandEncoder();t.endComputePass(),s.copyBufferToBuffer(e,0,i,0,a),t.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(n){let d=n();return d.set(new Uint8Array(o,0,r)),d}else return new Uint8Array(o.slice(0,r))}finally{i.destroy()}},ju=class{constructor(t){this.backend=t,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[e]of gs)Da.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(t,e){let r=e.buffer,n=e.byteOffset,a=e.byteLength,i=Na(a),s=this.storageCache.get(t);if(!s)throw new Error("gpu data for uploading does not exist");if(s.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${s.originalSize}, data size=${a}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),d=o.getMappedRange();new Uint8Array(d).set(new Uint8Array(r,n,a)),o.unmap();let l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(o,0,s.gpuData.buffer,0,i),Xe("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(o)}memcpy(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(e);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let a=Na(r.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(r.gpuData.buffer,0,n.gpuData.buffer,0,a)}registerExternalBuffer(t,e,r){let n;if(r){if(n=this.externalBuffers.get(r),n===void 0)throw new Error("previous buffer is not registered");if(t===r)return Xe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(r)}else n=_s();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:e}),this.externalBuffers.set(t,n),Xe("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${e}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let e=this.externalBuffers.get(t);e!==void 0&&(this.storageCache.delete(e),this.externalBuffers.delete(t),Xe("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(t,e=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r=Hu(t),n,a=(e&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(e&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||i){let o=(a?this.freeBuffers:this.freeUniformBuffers).get(r);o?o.length>0?n=o.pop():n=this.backend.device.createBuffer({size:r,usage:e}):n=this.backend.device.createBuffer({size:r,usage:e})}else n=this.backend.device.createBuffer({size:r,usage:e});let s={id:_s(),type:0,buffer:n};return this.storageCache.set(s.id,{gpuData:s,originalSize:t}),Xe("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${s.id}`),s}get(t){return this.storageCache.get(t)?.gpuData}release(t){let e=this.storageCache.get(t);if(!e)throw new Error("releasing data does not exist");return Xe("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${e.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(e.gpuData.buffer),e.originalSize}async download(t,e){let r=this.storageCache.get(t);if(!r)throw new Error("data does not exist");await ys(this.backend,r.gpuData.buffer,r.originalSize,e)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let e=gs.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(t.size)||[];e===void 0||r.length>=e?t.destroy():r.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let e of this.buffersPending)t.push(e);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let e=this.capturedPendingBuffers.get(t);e&&(e.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(t))}},Ku=(...t)=>new ju(...t)}),Yu,Ve,at=X(()=>{Yu=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Ve=t=>new Yu(t)}),Xu,Jr,H,Fa,Qu,ws,bs,Ie=X(()=>{Xu=class{static calcMatMulShape(t,e){return t[1]!==e[0]?void 0:[t[0],e[1]]}},Jr=class{static calcShape(t,e,r=!1){let n=t.length,a=e.length;if(n===0)return e;if(a===0)return t;let i=Math.max(t.length,e.length),s=new Array(i);if(r){if(n<2||a<2)return;let o=Xu.calcMatMulShape([t[n-2],t[n-1]],[e[a-2],e[a-1]]);if(o===void 0)return;[s[i-2],s[i-1]]=o}for(let o=r?3:1;o<=i;o++){let d=n-o<0?1:t[n-o],l=a-o<0?1:e[a-o];if(d!==l&&d>1&&l>1)return;let h=Math.max(d,l);if(d&&l)s[i-o]=Math.max(d,l);else{if(h>1)return;s[i-o]=0}}return s}static isValidBroadcast(t,e){let r=t.length,n=e.length;if(r>n)return!1;for(let a=1;a<=r;a++)if(t[r-a]!==1&&t[r-a]!==e[n-a])return!1;return!0}},H=class Gi{static size(e){return Gi.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,r=4){let n=e.length;if(n===0)return[];let a=new Array(n),i=n-1;for(;i>=0;){if(e[i]%r===0){a[i]=e[i]/r;break}if(r%e[i]!==0)throw new Error("cannot convert shape");a[i]=1,r/=e[i],i--}for(i--;i>=0;i--)a[i]=e[i];return a}static sizeFromDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return Gi.getSizeFromDimensionRange(e,r,e.length)}static sizeToDimension(e,r){if(r<0||r>e.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${e.length} dimensions.`);return Gi.getSizeFromDimensionRange(e,0,r)}static getSizeFromDimensionRange(e,r,n){let a=1;for(let i=r;i<n;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");a*=e[i]}return a}static computeStrides(e){let r=e.length;if(r===0)return[];if(r===1)return[1];let n=new Array(r);n[r-1]=1,n[r-2]=e[r-1];for(let a=r-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}static normalizeAxis(e,r){if(e<-r&&e>=r)throw new Error("unsupported axis for this operation.");return e<0?e+r:e}static normalizeAxes(e,r){return e.map(n=>this.normalizeAxis(n,r??e.length))}static sortBasedOnPerm(e,r){return r?r.map(n=>e[n]):e.slice().reverse()}static padShape(e,r){let n=e.length;return e.map((a,i)=>a+r[i]+r[i+n])}static areEqual(e,r){return e.length!==r.length?!1:e.every((n,a)=>n===r[a])}},Fa=class ka{static adjustPoolAttributes(e,r,n,a,i,s){if(!e&&n.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let o=0;o<r.length-2;o++)o>=n.length?n.push(r[o+2]):n[o]=r[o+2];for(let o=0;o<n.length;o++)if(o<a.length){if(a[o]<0)throw new Error("strides should be greater than or equal to 1")}else a.push(1);for(let o=0;o<n.length;o++)if(o<i.length){if(i[o]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let o=0;o<n.length*2;o++)if(o<s.length){if(s[o]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let o=0;o<n.length;o++){if(n[o]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[o]>=n[o]||s[o+n.length]>=n[o])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,r,n,a,i,s,o){if(o){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(a.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let d=0;d<e.length-2;d++)ka.adjustPadAndReturnShape(e[d+(s?1:2)],r[d],n[d],a[d],i,d,d+e.length-2,o)}}static computePoolOutputShape(e,r,n,a,i,s,o){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let d=[r[0],r[1]];return ka.computeShapeHelper(e,r,d,n,a,i,s,o),d}static computeConvOutputShape(e,r,n,a,i,s,o){if(e.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let d=[e[0],r[0]];return ka.computeShapeHelper(!1,e,d,n,a,i,s,o),d}static computeShapeHelper(e,r,n,a,i,s,o,d){if(e)for(let l=0;l<r.length-2;l++)n.push(1);else for(let l=0;l<r.length-2;l++)n.push(ka.adjustPadAndReturnShape(r[l+2],a[l],i[l],s[l],o,l,l+r.length-2,d))}static adjustPadAndReturnShape(e,r,n,a,i,s,o,d){let l=n*(a-1)+1;if(d&&d!=="NOTSET")switch(d){case"VALID":return i[s]=0,i[o]=0,Math.floor((e-l)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(n!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((e+r-1)/r-1)*r+a-e;return i[s]=Math.floor(d==="SAME_LOWER"?(h+1)/2:h/2),i[o]=h-i[s],Math.floor((e+h-a)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[o]-l)/r+1)}},Qu=class{static getShapeOfGemmResult(t,e,r,n,a){if(t.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let i,s,o;e?(i=t[1],s=t[0]):(i=t[0],s=t[1]);let d=-1;if(n?(o=r[0],d=1):(o=r[1],d=0),r[d]!==s)throw new Error("dimension mismatch");if(i<=0||o<=0||s<=0)throw new Error("invalid shape specified");if(a&&!Jr.isValidBroadcast(a,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,s]}},ws=-34028234663852886e22,bs=34028234663852886e22}),Zr,La,ut,bt,ge,tt,or,en,_r,$e,Ua,j,he,vs,Ju,Zu,On,Ce=X(()=>{be(),Ie(),Zr=64,La=(t,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(t){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${t}`)}},ut=(t,e=1)=>{let r=La(t,e);return typeof r=="string"?r:r[0]},bt=(t,e=1)=>{let r=La(t,e);return typeof r=="string"?r:r[1]},ge=(...t)=>{let e=[];return t.forEach(r=>{r.length!==0&&e.push({type:12,data:r},{type:12,data:H.computeStrides(r)})}),e},tt=t=>t%4===0?4:t%2===0?2:1,or=(t="f32",e,r="0")=>!e||e===1?`${t}(${r})`:`vec${e}<${t}>(${r})`,en=(t,e,r)=>t==="f32"?r:e===1?`f32(${r})`:`vec${e}<f32>(${r})`,_r=(t,e)=>e===4?`(${t}.x + ${t}.y + ${t}.z + ${t}.w)`:e===2?`(${t}.x + ${t}.y)`:e===3?`(${t}.x + ${t}.y + ${t}.z)`:t,$e=(t,e,r,n)=>t.startsWith("uniforms.")&&r>4?typeof e=="string"?n==="f16"?`${t}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${t}[(${e}) / 4][(${e}) % 4]`:n==="f16"?`${t}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${t}[${Math.floor(e/4)}][${e%4}]`:r>1?`${t}[${e}]`:t,Ua=(t,e,r,n,a)=>{let i=typeof r=="number",s=i?r:r.length,o=[...new Array(s).keys()],d=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=La(e,a),h=typeof l=="string"?l:l[1],m=typeof l=="string"?l:l[0],g={indices:d,value:h,storage:m,tensor:e},c=V=>typeof V=="string"?V:`${V}u`,w={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},v=i?"uniforms.":"",S=`${v}${t}_shape`,E=`${v}${t}_strides`,x="";for(let V=0;V<s-1;V++)x+=`
    let dim${V} = current / ${$e(E,V,s)};
    let rest${V} = current % ${$e(E,V,s)};
    indices[${V}] = dim${V};
    current = rest${V};
    `;x+=`indices[${s-1}] = current;`;let I=s<2?"":`
  fn o2i_${t}(offset: u32) -> ${g.indices} {
    var indices: ${g.indices};
    var current = offset;
    ${x}
    return indices;
  }`,T=V=>(w.offsetToIndices=!0,s<2?V:`o2i_${t}(${V})`),M=[];if(s>=2)for(let V=s-1;V>=0;V--)M.push(`${$e(E,V,s)} * (indices[${V}])`);let U=s<2?"":`
  fn i2o_${t}(indices: ${g.indices}) -> u32 {
    return ${M.join("+")};
  }`,B=V=>(w.indicesToOffset=!0,s<2?V:`i2o_${t}(${V})`),D=(...V)=>s===0?"0u":`${g.indices}(${V.map(c).join(",")})`,Q=(V,re)=>s<2?`${V}`:`${$e(V,re,s)}`,J=(V,re,fe)=>s<2?`${V}=${fe};`:`${$e(V,re,s)}=${fe};`,se={},ae=(V,re)=>{w.broadcastedIndicesToOffset=!0;let fe=`${re.name}broadcastedIndicesTo${t}Offset`;if(fe in se)return`${fe}(${V})`;let ze=[];for(let Ue=s-1;Ue>=0;Ue--){let it=re.indicesGet("outputIndices",Ue+re.rank-s);ze.push(`${Q(E,Ue)} * (${it} % ${Q(S,Ue)})`)}return se[fe]=`fn ${fe}(outputIndices: ${re.type.indices}) -> u32 {
             return ${ze.length>0?ze.join("+"):"0u"};
           }`,`${fe}(${V})`},ce=(V,re)=>(()=>{if(g.storage===g.value)return`${t}[${V}]=${re};`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`${t}[${V}]=vec2<u32>(u32(${re}), select(0u, 0xFFFFFFFFu, ${re} < 0));`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`${t}[${V}]=vec2<u32>(u32(${re}), 0u);`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`${t}[${V}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${re}));`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),ue=V=>(()=>{if(g.storage===g.value)return`${t}[${V}]`;if(g.storage==="vec2<u32>"&&g.value==="i32")return`i32(${t}[${V}].x)`;if(g.storage==="vec2<u32>"&&g.value==="u32")return`u32(${t}[${V}].x)`;if(g.storage==="u32"&&g.value==="vec4<bool>")return`vec4<bool>(bool(${t}[${V}] & 0xFFu), bool(${t}[${V}] & 0xFF00u), bool(${t}[${V}] & 0xFF0000u), bool(${t}[${V}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${g.storage} and value type ${g.value} yet`)})(),A=s<2?"":`
  fn get_${t}ByIndices(indices: ${g.indices}) -> ${h} {
    return ${ue(`i2o_${t}(indices)`)};
  }`,R=s<2?"":(()=>{let V=o.map(fe=>`d${fe}: u32`).join(", "),re=o.map(fe=>`d${fe}`).join(", ");return`
  fn get_${t}(${V}) -> ${h} {
    return get_${t}ByIndices(${D(re)});
  }`})(),Z=(...V)=>{if(V.length!==s)throw new Error(`indices length must be ${s}`);let re=V.map(c).join(",");return s===0?ue("0u"):s===1?ue(re[0]):(w.get=!0,w.getByIndices=!0,w.indicesToOffset=!0,`get_${t}(${re})`)},ve=V=>s<2?ue(V):(w.getByIndices=!0,w.indicesToOffset=!0,`get_${t}ByIndices(${V})`),te=s<2?"":`
  fn set_${t}ByIndices(indices: ${g.indices}, value: ${h}) {
    ${ce(`i2o_${t}(indices)`,"value")}
  }`,oe=s<2?"":(()=>{let V=o.map(fe=>`d${fe}: u32`).join(", "),re=o.map(fe=>`d${fe}`).join(", ");return`
  fn set_${t}(${V}, value: ${h}) {
    set_${t}ByIndices(${D(re)}, value);
  }`})();return{impl:()=>{let V=[],re=!1;return w.offsetToIndices&&(V.push(I),re=!0),w.indicesToOffset&&(V.push(U),re=!0),w.broadcastedIndicesToOffset&&(Object.values(se).forEach(fe=>V.push(fe)),re=!0),w.set&&(V.push(oe),re=!0),w.setByIndices&&(V.push(te),re=!0),w.get&&(V.push(R),re=!0),w.getByIndices&&(V.push(A),re=!0),!i&&re&&V.unshift(`const ${S} = ${g.indices}(${r.join(",")});`,`const ${E} = ${g.indices}(${H.computeStrides(r).join(",")});`),V.join(`
`)},type:g,offsetToIndices:T,indicesToOffset:B,broadcastedIndicesToOffset:ae,indices:D,indicesGet:Q,indicesSet:J,set:(...V)=>{if(V.length!==s+1)throw new Error(`indices length must be ${s}`);let re=V[s];if(typeof re!="string")throw new Error("value must be string");let fe=V.slice(0,s).map(c).join(",");return s===0?ce("0u",re):s===1?ce(fe[0],re):(w.set=!0,w.setByIndices=!0,w.indicesToOffset=!0,`set_${t}(${fe}, ${re})`)},setByOffset:ce,setByIndices:(V,re)=>s<2?ce(V,re):(w.setByIndices=!0,w.indicesToOffset=!0,`set_${t}ByIndices(${V}, ${re});`),get:Z,getByOffset:ue,getByIndices:ve,usage:n,name:t,strides:E,shape:S,rank:s}},j=(t,e,r,n=1)=>Ua(t,e,r,"input",n),he=(t,e,r,n=1)=>Ua(t,e,r,"output",n),vs=(t,e,r,n=1)=>Ua(t,e,r,"internal",n),Ju=class{constructor(t,e){this.normalizedDispatchGroup=t,this.limits=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Zr){let e=typeof t=="number"?t:t[0],r=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2];if(e>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(e*r*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${e}, ${r}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,i=a?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,s=a?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${e*r*n}u + local_idx;`;return`@compute @workgroup_size(${e}, ${r}, ${n})
  fn main(${i}) {
    ${s}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,e){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let r=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${e}) var<storage, ${r}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(e=>this.declareVariable(e,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(t,e,r=1){return this.uniforms.push({name:t,type:e,length:r}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:e,type:r,length:n}of this.uniforms)if(n&&n>4)r==="f16"?t.push(`@align(16) ${e}:array<mat2x4<${r}>, ${Math.ceil(n/8)}>`):t.push(`${e}:array<vec4<${r}>, ${Math.ceil(n/4)}>`);else{let a=n==null||n===1?r:`vec${n}<${r}>`;t.push(`${e}:${a}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(e=>[t(e.type),e.length??1])}},Zu=(t,e)=>new Ju(t,e),On=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;a++){let i=r-1-a,s=t[i]||1;(e[e.length-1-a]||1)>1&&s===1&&n.unshift(i)}return n}}),el,$s,tl,rl,ur,nl,al,Mn=X(()=>{be(),Ie(),at(),Ce(),el=t=>{if(!t||t.length!==1)throw new Error("Transpose requires 1 input.")},$s=(t,e)=>e&&e.length!==t?[...new Array(t).keys()].reverse():e,tl=(t,e)=>H.sortBasedOnPerm(t,$s(t.length,e)),rl=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let i=0;i<e;++i)a.push(r.indicesSet("a",t[i],`i[${i}]`));return a.push("return a;}"),a.join(`
`)},ur=(t,e)=>{let r=t.dataType,n=t.dims.length,a=$s(n,e),i=tl(t.dims,a),s=he("output",r,i.length),o=j("a",r,n),d=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(o,s)}

  ${rl(a,n,o,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",o.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let h=H.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...ge(l[0].dims,i)]}},getShaderSource:d}},nl=(t,e)=>{el(t.inputs),t.compute(ur(t.inputs[0],e.perm))},al=t=>Ve({perm:t.perm})}),il,sl,ol,ul,ll,dl,cl,pl,hl,fl,Vt,ml,gl,_l,yl,wl,bl,vl,$l,xl,Sl,Y0=X(()=>{be(),Ie(),Ce(),Ss(),Mn(),il={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},sl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ul={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ll=(t,e)=>{let r=[];for(let n=e-t;n<e;++n)r.push(n);return r},dl=(t,e)=>{let r=[],n=t.length;for(let i=0;i<n;i++)e.indexOf(i)===-1&&r.push(t[i]);let a=e.map(i=>t[i]);return[r,a]},cl=(t,e)=>{let r=t.length+e.length,n=[],a=0;for(let i=0;i<r;i++)e.indexOf(i)===-1?n.push(t[a++]):n.push(1);return n},pl=(t,e)=>{for(let r=0;r<t.length;++r)if(t[t.length-r-1]!==e-1-r)return!1;return!0},hl=(t,e)=>{let r=[];if(!pl(t,e)){for(let n=0;n<e;++n)t.indexOf(n)===-1&&r.push(n);t.forEach(n=>r.push(n))}return r},fl=(t,e,r,n,a,i,s)=>{let o=r[0].dims,d=H.size(i),l=H.size(s),h=j("_A",r[0].dataType,o),m=he("output",a,i),g=32,c=`
          var<workgroup> aBestValues : array<f32, ${g}>;
       `;return{name:t,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(h,m)}
        ${c}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(g)}

          let outputIndex = global_idx / ${g};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ol[n]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${g}) {
           let candidate = f32(${h.getByOffset("offset + k")});
           bestValue = ${il[n]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${g}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${sl[n]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${m.setByOffset("outputIndex",`${n==="mean"?`${m.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${m.type.storage}(${ul[n]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:d},programUniforms:[{type:12,data:l}]})}},Vt=(t,e,r,n)=>{let a=t.inputs.length===1?r:xs(t.inputs,r),i=a.axes;i.length===0&&!a.noopWithEmptyAxes&&(i=t.inputs[0].dims.map((c,w)=>w));let s=H.normalizeAxes(i,t.inputs[0].dims.length),o=s,d=t.inputs[0],l=hl(o,t.inputs[0].dims.length);l.length>0&&(d=t.compute(ur(t.inputs[0],l),{inputs:[0],outputs:[-1]})[0],o=ll(o.length,d.dims.length));let[h,m]=dl(d.dims,o),g=h;a.keepDims&&(g=cl(h,s)),t.compute(fl(e,{hint:a.cacheKey,inputDependencies:["type"]},[d],n,t.inputs[0].dataType,g,m),{inputs:[d]})},ml=(t,e)=>{Vt(t,"ReduceMeanShared",e,"mean")},gl=(t,e)=>{Vt(t,"ReduceL1Shared",e,"l1")},_l=(t,e)=>{Vt(t,"ReduceL2Shared",e,"l2")},yl=(t,e)=>{Vt(t,"ReduceLogSumExpShared",e,"logSumExp")},wl=(t,e)=>{Vt(t,"ReduceMaxShared",e,"max")},bl=(t,e)=>{Vt(t,"ReduceMinShared",e,"min")},vl=(t,e)=>{Vt(t,"ReduceProdShared",e,"prod")},$l=(t,e)=>{Vt(t,"ReduceSumShared",e,"sum")},xl=(t,e)=>{Vt(t,"ReduceSumSquareShared",e,"sumSquare")},Sl=(t,e)=>{Vt(t,"ReduceLogSumShared",e,"logSum")}}),Gt,kl,Wa,xs,Ht,El,Cl,Tl,Il,Al,Ol,Ml,zl,Rl,Pl,qt,Bl,Dl,Nl,Fl,Ll,Ul,Wl,Vl,Gl,Hl,Ss=X(()=>{be(),Ie(),at(),Ce(),Y0(),Gt=t=>{if(!t||t.length===0||t.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(t.length===2&&t[1].dims.length!==1)throw new Error("Invalid axes input dims.")},kl=t=>["","",`var value = ${t.getByIndices("input_indices")};`,""],Wa=(t,e,r,n,a,i,s=!1,o=!1)=>{let d=[],l=r[0].dims,h=l.length,m=H.normalizeAxes(a,h),g=!o&&m.length===0;l.forEach((v,S)=>{g||m.indexOf(S)>=0?s&&d.push(1):d.push(v)});let c=d.length,w=H.size(d);return{name:t,shaderCache:e,getShaderSource:v=>{let S=[],E=j("_A",r[0].dataType,h),x=he("output",i,c),I=n(E,x,m),T=I[2];for(let M=0,U=0;M<h;M++)g||m.indexOf(M)>=0?(s&&U++,T=`for(var j${M}: u32 = 0; j${M} < ${l[M]}; j${M}++) {
                  ${I[2].includes("last_index")?`let last_index = j${M};`:""}
                  ${E.indicesSet("input_indices",M,`j${M}`)}
                  ${T}
                }`):(S.push(`${E.indicesSet("input_indices",M,x.indicesGet("output_indices",U))};`),U++);return`

        ${v.registerUniform("output_size","u32").declareVariables(E,x)}

        ${v.mainStart()}
          ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${E.type.indices};
          let output_indices = ${x.offsetToIndices("global_idx")};

          ${S.join(`
`)}
          ${I[0]}       // init ops for reduce max/min
          ${I[1]}
          ${T}
          ${I[3]}
          ${I.length===4?x.setByOffset("global_idx","value"):I.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:d,dataType:i}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},...ge(l,d)]})}},xs=(t,e)=>{let r=[];return t[1].dims[0]>0&&t[1].getBigInt64Array().forEach(n=>r.push(Number(n))),Ve({axes:r,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Ht=(t,e,r,n)=>{let a=t.inputs,i=a.length===1?r:xs(a,r);t.compute(Wa(e,{hint:i.cacheKey,inputDependencies:["rank"]},[a[0]],i.noopWithEmptyAxes&&i.axes.length===0?kl:n,i.axes,a[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},El=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceLogSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},Cl=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceL1",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},Tl=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceL2",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Il=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceLogSumExp",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Al=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceMax",e,(r,n,a)=>{let i=[];for(let s=0;s<r.rank;s++)(a.indexOf(s)>=0||a.length===0)&&i.push(r.indicesSet("input_indices",s,0));return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Ol=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceMean",e,(r,n,a)=>{let i=1;for(let s=0;s<r.rank;s++)(a.indexOf(s)>=0||a.length===0)&&(i*=t.inputs[0].dims[s]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${i});`]})},Ml=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceMin",e,(r,n,a)=>{let i=[];for(let s=0;s<r.rank;s++)(a.indexOf(s)>=0||a.length===0)&&i.push(`input_indices[${s}] = 0;`);return[`${i.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},zl=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceProd",e,(r,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},Rl=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceSum",e,(r,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},Pl=(t,e)=>{Gt(t.inputs),Ht(t,"ReduceSumSquare",e,(r,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},qt=(t,e,r)=>{if(e.length===0)return r;let n=1,a=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?n*=t[i]:a*=t[i];return a<32&&n>1024},Bl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ol(t,e):ml(t,e)},Dl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Cl(t,e):gl(t,e)},Nl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Tl(t,e):_l(t,e)},Fl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Il(t,e):yl(t,e)},Ll=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Al(t,e):wl(t,e)},Ul=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Ml(t,e):bl(t,e)},Wl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?zl(t,e):vl(t,e)},Vl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Rl(t,e):$l(t,e)},Gl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?Pl(t,e):xl(t,e)},Hl=(t,e)=>{qt(t.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?El(t,e):Sl(t,e)}}),ks,ql,jl,Es,X0=X(()=>{be(),at(),Ss(),ks=t=>{if(!t||t.length===0||t.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(t[0].dataType!==1)throw new Error("Invalid input type.")},ql=(t,e)=>{ks(t.inputs);let r=(n,a,i)=>{let s=[];for(let o=0;o<n.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(Wa("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},jl=(t,e)=>{ks(t.inputs);let r=(n,a,i)=>{let s=[];for(let o=0;o<n.rank;o++)(i.indexOf(o)>=0||i.length===0)&&s.push(`input_indices[${o}] = 0;`);return[`${s.join(`
`)}`,`var value = ${n.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${n.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${n.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",a.setByOffset("global_idx","best_index")]};t.compute(Wa("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[t.inputs[0]],r,[e.axis],7,e.keepDims),{inputs:[0]})},Es=t=>Ve(t)}),Kl,Yl,Xl,Va,Ql,Jl,Zl=X(()=>{be(),Ie(),at(),Ce(),Kl=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");let r=0,n=t[r],a=n.dataType,i=n.dims.length;t.forEach((s,o)=>{if(o!==r){if(s.dataType!==a)throw new Error("input tensors should be one type");if(s.dims.length!==i)throw new Error("input tensors should have the same shape");s.dims.forEach((d,l)=>{if(l!==e&&d!==n.dims[l])throw new Error("non concat dimensions must match")})}})},Yl=(t,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${t}u>(${e});
    for (var i: u32 = 0u; i < ${t}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${t}u;
  }`,Xl=(t,e)=>{let r=t.length,n=[];for(let a=0;a<r;++a){let i=e.setByOffset("global_idx",t[a].getByIndices("indices"));r===1?n.push(i):a===0?n.push(`if (inputIndex == ${a}u) { ${i} }`):a===r-1?n.push(`else { ${i} }`):n.push(`else if (inputIndex == ${a}) { ${i} }`)}return n.join(`
`)},Va=(t,e,r,n)=>{let a=H.size(r),i=new Array(t.length),s=new Array(t.length),o=0,d=[],l=[],h=[{type:12,data:a}];for(let v=0;v<t.length;++v)o+=t[v].dims[e],i[v]=o,l.push(t[v].dims.length),s[v]=j(`input${v}`,n,l[v]),d.push("rank"),h.push({type:12,data:i[v]});for(let v=0;v<t.length;++v)h.push(...ge(t[v].dims));h.push(...ge(r));let m=he("output",n,r.length),g=m.indicesGet("indices",e),c=Array.from(Array(i.length).keys()).map(v=>`uniforms.sizeInConcatAxis${v}`).join(","),w=v=>`

  ${(()=>{v.registerUniform("outputSize","u32");for(let S=0;S<t.length;S++)v.registerUniform(`sizeInConcatAxis${S}`,"u32");return v.declareVariables(...s,m)})()}

  ${Yl(i.length,c)}

  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${m.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${g});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${c});
      ${g} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Xl(s,m)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:h}),getShaderSource:w}},Ql=(t,e)=>{let r=t.inputs,n=r[0].dims,a=H.normalizeAxis(e.axis,n.length);Kl(r,a);let i=n.slice();i[a]=r.reduce((o,d)=>o+(d.dims.length>a?d.dims[a]:0),0);let s=r.filter(o=>H.size(o.dims)>0);t.compute(Va(s,a,i,r[0].dataType),{inputs:s})},Jl=t=>Ve({axis:t.axis})}),ed,td,rd,nd,Ga,ad,id,sd=X(()=>{be(),ms(),Ce(),Zl(),ed=(t,e)=>{let r=t[0],n=t[1],a=t[2],i=t[3],s=t[4],o=t[5];if(s&&o)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let d=r.dims[0],l=r.dims[1],h=r.dims[2];if(a.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(n.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(n.dims[0]!==h)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==n.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let m=a.dims[0]/3,g=m,c=g;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let I of e.qkvHiddenSizes)if(I%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");m=e.qkvHiddenSizes[0],g=e.qkvHiddenSizes[1],c=e.qkvHiddenSizes[2]}let w=l;if(m!==g)throw new Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==m+g+c)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let v=0;if(s){if(g!==c)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==d)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==g/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(v=s.dims[3])}let S=w+v,E=-1,x=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");return{batchSize:d,sequenceLength:l,pastSequenceLength:v,kvSequenceLength:w,totalSequenceLength:S,maxSequenceLength:E,inputHiddenSize:h,hiddenSize:m,vHiddenSize:c,headSize:Math.floor(m/e.numHeads),vHeadSize:Math.floor(c/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:x,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},td=(t,e,r,n)=>{let a=tt(n),i=64,s=n/a;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let o=Math.ceil(n/a/i),d=[{type:e.dataType,data:1/n},{type:12,data:s},{type:12,data:o}],l=ut(e.dataType,a),h=bt(1,a),m=g=>{let c=he("x",e.dataType,e.dims,a),w=[{name:"d_inv",type:bt(e.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${i}>;
  var<workgroup> thread_sum: array<f32, ${i}>;
  ${g.registerUniforms(w).declareVariables(c)}
  ${g.mainStart([i,1,1])}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = workgroup_id.x * uniforms.d_comp + local_offset;

    var thread_max_vector = ${h}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      thread_max_vector = max(${h}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(a){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${i}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${h}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
      sum_vector += exp(${h}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(a){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${a}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        x[offset + i] = ${c.type.value}(uniforms.d_inv);
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {
        var f32input = ${h}(x[offset + i]);
        x[offset + i] = ${c.type.value}(exp(f32input - max_value) / sum);
      }
    }
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${l};${a}`},getShaderSource:m,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:d})}},rd=(t,e,r,n,a,i,s)=>{let o=s+a.kvSequenceLength,d=[a.batchSize,a.numHeads,a.sequenceLength,o],l=i.scale===0?1/Math.sqrt(a.headSize):i.scale,h=tt(a.headSize),m=a.headSize/h,g=12,c={x:Math.ceil(o/g),y:Math.ceil(a.sequenceLength/g),z:a.batchSize*a.numHeads},w=[{type:12,data:a.sequenceLength},{type:12,data:m},{type:12,data:o},{type:12,data:a.numHeads},{type:1,data:l}],v=n?["type","type","type"]:["type","type"],S=E=>{let x=j("q",e.dataType,e.dims,h),I=j("key",r.dataType,r.dims,h),T=[x,I];n&&T.push(j("relative_position_bias",n.dataType,n.dims));let M=he("output",e.dataType,d),U=bt(1,h),B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`
  const TILE_SIZE = ${g}u;

  var<workgroup> tileQ: array<${x.type.storage}, ${g*g}>;
  var<workgroup> tileK: array<${x.type.storage}, ${g*g}>;
  ${E.registerUniforms(B).declareVariables(...T,M)}
  ${E.mainStart([g,g,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;

    var value = ${U}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
        value += ${U}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(h){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${h}`)}})()};
        output[outputIdx] = ${M.type.value} (sum * uniforms.alpha) + ${n?"relative_position_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${h}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:d,dataType:e.dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:w}),getShaderSource:S}},nd=(t,e,r,n,a)=>{let i=a+n.kvSequenceLength,s=[n.batchSize,n.sequenceLength,n.vHiddenSize],o=12,d={x:Math.ceil(n.vHeadSize/o),y:Math.ceil(n.sequenceLength/o),z:n.batchSize*n.numHeads},l=[{type:12,data:n.sequenceLength},{type:12,data:i},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:l}),getShaderSource:h=>{let m=j("probs",e.dataType,e.dims),g=j("v",r.dataType,r.dims),c=he("output",e.dataType,s),w=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileQ: array<${m.type.value}, ${o*o}>;
  var<workgroup> tileK: array<${m.type.value}, ${o*o}>;
  ${h.registerUniforms(w).declareVariables(m,g,c)}
  ${h.mainStart([o,o,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${m.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},Ga=(t,e,r,n,a,i,s,o,d,l,h)=>{let m=t.outputCount>1,g=t.outputCount>2,c=m&&g?l.pastSequenceLength:0,w=c+l.kvSequenceLength,v=[l.batchSize,l.numHeads,w,l.headSize],S=s?[s,r]:[r],E=m?t.compute(Va(S,2,v,r.dataType),{inputs:S,outputs:[1]})[0]:r,x=[l.batchSize,l.numHeads,w,l.headSize],I=o?[o,n]:[n],T=g?t.compute(Va(I,2,x,n.dataType),{inputs:I,outputs:[2]})[0]:n,M=[e,E];d&&M.push(d);let U=t.compute(rd(t,e,E,d,l,h,c),{inputs:M,outputs:[-1]})[0];t.compute(td(t,U,l.batchSize*l.numHeads*l.sequenceLength,w),{inputs:[U],outputs:[]});let B=[U,T];t.compute(nd(t,U,T,l,c),{inputs:B,outputs:[0]})},ad=(t,e)=>{let r=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],n=e.sequenceLength,a=e.inputHiddenSize,i=e.headSize,s=12,o={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},d=[t.inputs[0],t.inputs[1],t.inputs[2]],l=[{type:12,data:n},{type:12,data:a},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],h=m=>{let g=he("output_q",d[0].dataType,r),c=he("output_k",d[0].dataType,r),w=he("output_v",d[0].dataType,r),v=j("input",d[0].dataType,d[0].dims),S=j("weight",d[1].dataType,d[1].dims),E=j("bias",d[2].dataType,d[2].dims),x=v.type.storage,I=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${x}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${x}, ${s*s}>;
  var<workgroup> tileWeightK: array<${x}, ${s*s}>;
  var<workgroup> tileWeightV: array<${x}, ${s*s}>;
  ${m.registerUniforms(I).declareVariables(v,S,E,g,c,w)}
  ${m.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${x}(0);
    var valueK = ${x}(0);
    var valueV = ${x}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return t.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:t.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:l}),getShaderSource:h},{inputs:d,outputs:[-1,-1,-1]})},id=(t,e)=>{let r=ed(t.inputs,e),[n,a,i]=ad(t,r);return Ga(t,n,a,i,t.inputs[4],void 0,void 0,void 0,t.inputs[5],r,e)}}),od,ud,ld,dd,Q0=X(()=>{Wt(),be(),Ie(),at(),Ce(),od=(t,e)=>{if(!t||t.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(n,a,i)=>{let s=a.length;if(s!==n.length)throw new Error(`${i}: num dimensions != ${s}`);a.forEach((o,d)=>{if(o!==n[d])throw new Error(`${i}: dim[${d}] do not match`)})};if(t[0].dims.length>1){let n=e.format==="NHWC"?e.spatial?t[0].dims.slice(-1):t[0].dims.slice(-1).concat(t[0].dims.slice(1,t[0].dims.length-1)):t[0].dims.slice(1,e.spatial?2:void 0);r(t[1].dims,n,"Invalid input scale"),r(t[2].dims,n,"Invalid input B"),r(t[3].dims,n,"Invalid input mean"),r(t[4].dims,n,"Invalid input var")}else r(t[1].dims,[1],"Invalid input scale"),r(t[2].dims,[1],"Invalid input B"),r(t[3].dims,[1],"Invalid input mean"),r(t[4].dims,[1],"Invalid input var")},ud=(t,e)=>{let{epsilon:r,spatial:n,format:a}=e,i=t[0].dims,s=n?tt(i[i.length-1]):1,o=a==="NHWC"&&i.length>1?s:1,d=H.size(i)/s,l=n,h=l?i.length:i,m=j("x",t[0].dataType,t[0].dims,s),g=j("scale",t[1].dataType,t[1].dims,o),c=j("bias",t[2].dataType,t[2].dims,o),w=j("inputMean",t[3].dataType,t[3].dims,o),v=j("inputVar",t[4].dataType,t[4].dims,o),S=he("y",t[0].dataType,h,s),E=()=>{let I="";if(n)I=`let cOffset = ${i.length===1?"0u":a==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(a==="NCHW")I=`
            ${S.indicesSet("outputIndices","0","0")}
            let cOffset = ${S.indicesToOffset("outputIndices")};`;else{I=`var cIndices = ${g.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let T=1;T<g.rank;T++)I+=`cIndices[${T}] = outputIndices[${T}];`;I+=`let cOffset = ${g.indicesToOffset("cIndices")};`}return I},x=I=>`
  const epsilon = ${r};
  ${I.registerUniform("outputSize","u32").declareVariables(m,g,c,w,v,S)}
  ${I.mainStart()}
  ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${S.offsetToIndices(`global_idx * ${s}`)};
    ${E()}
    let scale = ${g.getByOffset("cOffset")};
    let bias = ${c.getByOffset("cOffset")};
    let inputMean = ${w.getByOffset("cOffset")};
    let inputVar = ${v.getByOffset("cOffset")};
    let x = ${m.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${S.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${n}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:l?[{type:12,data:d},...ge(i)]:[{type:12,data:d}]})}},ld=t=>Ve(t),dd=(t,e)=>{let{inputs:r,outputCount:n}=t,a=ld({...e,outputCount:n});if(Fe.webgpu.validateInputContent&&od(r,a),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");t.compute(ud(r,a))}}),cd,pd,hd,J0=X(()=>{Ie(),Ce(),cd=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(t[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},pd=t=>{let e=t[0].dims,r=t[0].dims[2],n=H.size(e)/4,a=t[0].dataType,i=j("input",a,e,4),s=j("bias",a,[r],4),o=j("residual",a,e,4),d=he("output",a,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:l=>`
  const channels = ${r}u / 4;
  ${l.declareVariables(i,s,o,d)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};
    ${d.setByOffset("global_idx","value")}
  }`}},hd=t=>{cd(t.inputs),t.compute(pd(t.inputs))}}),fd,Pe,md,gd,_d,yd,wd,bd,vd,$d,xd,Sd,kd,Ed,Cd,Td,Ha,Id,qa,Ad,Od,Md,zd,Rd,Pd,Bd,Dd,Nd,Fd,Ld,Ud,Wd,Vd,Gd,Hd,Cs,qd,Ts,Is,jd,Kd,Yd,As=X(()=>{be(),Ie(),at(),Ce(),fd=(t,e,r,n,a,i)=>{let s=Math.ceil(e/4),o="";typeof a=="string"?o=`${a}(a)`:o=a("a");let d=j("inputData",r,[s],4),l=he("outputData",n,[s],4);return`
      ${t.registerUniform("vec_size","u32").declareVariables(d,l)}

  ${i??""}

  ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${d.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",o)}
  }`},Pe=(t,e,r,n,a,i=t.dataType)=>({name:e,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:s=>fd(s,H.size(t.dims),t.dataType,i,r,n),getRunData:s=>({outputs:[{dims:t.dims,dataType:i}],dispatchGroup:{x:Math.ceil(H.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(H.size(t.dims)/4)}]})}),md=t=>{t.compute(Pe(t.inputs[0],"Abs","abs"))},gd=t=>{t.compute(Pe(t.inputs[0],"Acos","acos"))},_d=t=>{t.compute(Pe(t.inputs[0],"Acosh","acosh"))},yd=t=>{t.compute(Pe(t.inputs[0],"Asin","asin"))},wd=t=>{t.compute(Pe(t.inputs[0],"Asinh","asinh"))},bd=t=>{t.compute(Pe(t.inputs[0],"Atan","atan"))},vd=t=>{t.compute(Pe(t.inputs[0],"Atanh","atanh"))},$d=t=>Ve(t),xd=(t,e)=>{let r;switch(e.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}t.compute(Pe(t.inputs[0],"Cast",r,void 0,e.cacheKey,e.to))},Sd=t=>{let e=t.length>=2&&t[1].data!==0?t[1].getFloat32Array()[0]:ws,r=t.length>=3&&t[2].data!==0?t[2].getFloat32Array()[0]:bs;return Ve({min:e,max:r})},kd=(t,e)=>{let r=t.inputs.length===1?e:Sd(t.inputs),n=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"Clip",a=>`clamp(${a}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${n}> = vec4(${n}(${r.min}));
    const clip_max_: vec4<${n}> = vec4(${n}(${r.max}));
`,r.cacheKey),{inputs:[0]})},Ed=t=>{t.compute(Pe(t.inputs[0],"Ceil","ceil"))},Cd=t=>{t.compute(Pe(t.inputs[0],"Cos","cos"))},Td=t=>{t.compute(Pe(t.inputs[0],"Cosh","cosh"))},Ha=t=>Ve(t),Id=(t,e)=>{let r=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"Elu",n=>`elu_vf32(${n})`,`
  const elu_alpha_ = ${r}(${e.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},qa=(t="f32")=>`
const r0: ${t} = 0.3275911;
const r1: ${t} = 0.254829592;
const r2: ${t} = -0.284496736;
const r3: ${t} = 1.421413741;
const r4: ${t} = -1.453152027;
const r5: ${t} = 1.061405429;

fn erf_vf32(v: vec4<${t}>) -> vec4<${t}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Ad=t=>{let e=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"Erf",r=>`erf_vf32(${r})`,qa(e)))},Od=t=>{t.compute(Pe(t.inputs[0],"Exp","exp"))},Md=t=>{t.compute(Pe(t.inputs[0],"Floor","floor"))},zd=t=>{let e=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,qa(e)))},Rd=(t,e)=>{let r=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"LeakyRelu",n=>`select(leaky_relu_alpha_ * ${n}, ${n}, ${n} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${e.alpha});`,e.cacheKey))},Pd=t=>{t.compute(Pe(t.inputs[0],"Not",e=>`!${e}`))},Bd=t=>{t.compute(Pe(t.inputs[0],"Neg",e=>`-${e}`))},Dd=t=>{t.compute(Pe(t.inputs[0],"Reciprocal",e=>`1.0/${e}`))},Nd=t=>{let e=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"Relu",r=>`select(vec4<${e}>(0.0), ${r}, ${r} > vec4<${e}>(0.0))`))},Fd=t=>{t.compute(Pe(t.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},Ld=t=>Ve(t),Ud=(t,e)=>{let r=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"HardSigmoid",n=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${e.alpha} * ${n} + vec4<${r}>(${e.beta})))`,void 0,e.cacheKey))},Wd=t=>{t.compute(Pe(t.inputs[0],"Sin","sin"))},Vd=t=>{t.compute(Pe(t.inputs[0],"Sinh","sinh"))},Gd=t=>{t.compute(Pe(t.inputs[0],"Sqrt","sqrt"))},Hd=t=>{t.compute(Pe(t.inputs[0],"Tan","tan"))},Cs=t=>`sign(${t}) * (1 - exp(-2 * abs(${t}))) / (1 + exp(-2 * abs(${t})))`,qd=t=>{t.compute(Pe(t.inputs[0],"Tanh",Cs))},Ts=(t="f32")=>`
const fast_gelu_a: ${t} = 0.5;
const fast_gelu_b: ${t} = 0.7978845608028654;
const fast_gelu_c: ${t} = 0.035677408136300125;

fn tanh_v(v: vec4<${t}>) -> vec4<${t}> {
  return ${Cs("v")};
}
`,Is=t=>`(fast_gelu_a + fast_gelu_a * tanh_v(${t} * (fast_gelu_c * ${t} * ${t} + fast_gelu_b))) * ${t}`,jd=t=>{let e=bt(t.inputs[0].dataType);t.compute(Pe(t.inputs[0],"FastGelu",Is,Ts(e),void 0,t.inputs[0].dataType))},Kd=(t,e)=>{let r=bt(t.inputs[0].dataType);return t.compute(Pe(t.inputs[0],"ThresholdedRelu",n=>`select(vec4<${r}>(0.0), ${n}, ${n} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${e.alpha});`,e.cacheKey)),0},Yd=t=>{t.compute(Pe(t.inputs[0],"Log","log"))}}),Xd,Qd,Jd,Z0=X(()=>{Ie(),Ce(),As(),Xd=t=>{if(t[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(t[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(t[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(t[0].dims[2]!==t[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Qd=t=>{let e=t[0].dims.slice();e[2]=e[2]/2;let r=j("input",t[0].dataType,t[0].dims,4),n=j("bias",t[0].dataType,[t[0].dims[2]],4),a=he("output",t[0].dataType,e,4),i=H.size(e)/4,s=ut(t[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:o=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${t[0].dims[2]/4/2}u;

  ${o.declareVariables(r,n,a)}

  ${qa(s)}

  ${o.mainStart()}
    ${o.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${a.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Jd=t=>{Xd(t.inputs),t.compute(Qd(t.inputs))}}),Zd,ec,jt,tc,rc,nc,ac,ic,sc,oc,uc,lc,dc,e_=X(()=>{be(),Ie(),Ce(),Zd=(t,e,r,n,a,i,s,o,d,l,h,m)=>{let g,c;typeof o=="string"?g=c=(x,I)=>`${o}((${x}),(${I}))`:typeof o=="function"?g=c=o:(g=o.scalar,c=o.vector);let w=he("outputData",h,n.length,4),v=j("aData",d,e.length,4),S=j("bData",l,r.length,4),E;if(a)if(i){let x=H.size(e)===1,I=H.size(r)===1,T=e.length>0&&e[e.length-1]%4===0,M=r.length>0&&r[r.length-1]%4===0;x||I?E=w.setByOffset("global_idx",c(x?`${v.type.value}(${v.getByOffset("0")}.x)`:v.getByOffset("global_idx"),I?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"))):E=`
            let outputIndices = ${w.offsetToIndices("global_idx * 4u")};
            let offsetA = ${v.broadcastedIndicesToOffset("outputIndices",w)};
            let offsetB = ${S.broadcastedIndicesToOffset("outputIndices",w)};
            ${w.setByOffset("global_idx",c(s||T?v.getByOffset("offsetA / 4u"):`${v.type.value}(${v.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||M?S.getByOffset("offsetB / 4u"):`${S.type.value}(${S.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else E=w.setByOffset("global_idx",c(v.getByOffset("global_idx"),S.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(I,T,M="")=>{let U=`aData[indexA${T}][componentA${T}]`,B=`bData[indexB${T}][componentB${T}]`;return`
            let outputIndices${T} = ${w.offsetToIndices(`global_idx * 4u + ${T}u`)};
            let offsetA${T} = ${v.broadcastedIndicesToOffset(`outputIndices${T}`,w)};
            let offsetB${T} = ${S.broadcastedIndicesToOffset(`outputIndices${T}`,w)};
            let indexA${T} = offsetA${T} / 4u;
            let indexB${T} = offsetB${T} / 4u;
            let componentA${T} = offsetA${T} % 4u;
            let componentB${T} = offsetB${T} % 4u;
            ${I}[${T}] = ${M}(${g(U,B)});
          `};h===9?E=`
            var data = vec4<u32>(0);
            ${x("data",0,"u32")}
            ${x("data",1,"u32")}
            ${x("data",2,"u32")}
            ${x("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:E=`
            ${x("outputData[global_idx]",0)}
            ${x("outputData[global_idx]",1)}
            ${x("outputData[global_idx]",2)}
            ${x("outputData[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(v,S,w)}

        ${m??""}

        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${E}
      }`},ec=(t,e,r,n,a,i,s=r.dataType)=>{let o=!H.areEqual(r.dims,n.dims),d=r.dims,l=H.size(r.dims),h=!1,m=!1,g=[o];if(o){let c=Jr.calcShape(r.dims,n.dims,!1);if(!c)throw new Error("Can't perform binary op on the given tensors");d=c,l=H.size(d);let w=H.size(r.dims)===1,v=H.size(n.dims)===1,S=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,E=n.dims.length>0&&n.dims[n.dims.length-1]%4===0;g.push(w),g.push(v),g.push(S),g.push(E);let x=1;for(let I=1;I<d.length;I++){let T=r.dims[r.dims.length-I]??1,M=n.dims[n.dims.length-I]??1;if(T===M)x*=T;else break}x%4===0?(m=!0,h=!0):(w||v||S||E)&&(h=!0)}else h=!0;return g.push(h),{name:t,shaderCache:{hint:e+g.map(c=>c.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:c=>Zd(c,r.dims,n.dims,d,h,o,m,a,r.dataType,n.dataType,s,i),getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(H.size(d)/4)},...ge(r.dims,n.dims,d)]})}},jt=(t,e,r,n,a,i)=>{t.compute(ec(e,a??"",t.inputs[0],t.inputs[1],r,n,i))},tc=t=>{jt(t,"Add",(e,r)=>`${e}+${r}`)},rc=t=>{jt(t,"Div",(e,r)=>`${e}/${r}`)},nc=t=>{jt(t,"Equal",{scalar:(e,r)=>`u32(${e}==${r})`,vector:(e,r)=>`vec4<u32>(${e}==${r})`},void 0,void 0,9)},ac=t=>{jt(t,"Mul",(e,r)=>`${e}*${r}`)},ic=t=>{let e=j("input",t.inputs[0].dataType,t.inputs[0].dims).type.value;jt(t,"Pow",{scalar:(r,n)=>`pow_custom(${r},${n})`,vector:(r,n)=>`pow_vector_custom(${r},${n})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},sc=t=>{jt(t,"Sub",(e,r)=>`${e}-${r}`)},oc=t=>{jt(t,"Greater",{scalar:(e,r)=>`u32(${e}>${r})`,vector:(e,r)=>`vec4<u32>(${e}>${r})`},void 0,void 0,9)},uc=t=>{jt(t,"Less",{scalar:(e,r)=>`u32(${e}<${r})`,vector:(e,r)=>`vec4<u32>(${e}<${r})`},void 0,void 0,9)},lc=t=>{jt(t,"GreaterOrEqual",{scalar:(e,r)=>`u32(${e}>=${r})`,vector:(e,r)=>`vec4<u32>(${e}>=${r})`},void 0,void 0,9)},dc=t=>{jt(t,"LessOrEqual",{scalar:(e,r)=>`u32(${e}<=${r})`,vector:(e,r)=>`vec4<u32>(${e}<=${r})`},void 0,void 0,9)}}),Mr,zr,Rr,Os,Pr=X(()=>{be(),Ie(),Mr=(t,e,r="f32")=>{switch(t.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${r}(uniforms.clip_min)), ${e}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${t.activation}`)}},zr=(t,e)=>{t.activation==="Clip"?e.push({type:1,data:t.clipMax},{type:1,data:t.clipMin}):t.activation==="HardSigmoid"?e.push({type:1,data:t.alpha},{type:1,data:t.beta}):t.activation==="LeakyRelu"&&e.push({type:1,data:t.alpha})},Rr=(t,e)=>{t.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):t.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):t.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},Os=t=>{let e=t?.activation||"";if(e==="HardSigmoid"){let[r,n]=t?.activation_params||[.2,.5];return{activation:e,alpha:r,beta:n}}else if(e==="Clip"){let[r,n]=t?.activation_params||[ws,bs];return{activation:e,clipMax:n,clipMin:r}}else if(e==="LeakyRelu"){let[r]=t?.activation_params||[.01];return{activation:e,alpha:r}}return{activation:e}}}),mt,Ms,zs=X(()=>{mt=(t,e)=>{switch(t){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component is not supported.`)}},Ms=t=>`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Rs,cc=X(()=>{Rs=t=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${t}.x), i32(${t}.y), i32(${t}.z), 1));
}
`}),pc,hc,ja,Ps,fc,Ka,mc,Bs,Ya=X(()=>{be(),Ie(),Ce(),Pr(),zs(),pc=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,hc=(t,e)=>t?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,ja=(t,e,r="f32",n,a=!1,i=32,s=!1,o=32)=>{let d=e[1]*t[1],l=e[0]*t[0],h=a?d:i,m=a?i:d,g=h/e[0],c=i/e[1];if(!((a&&g===4&&t[1]===4||!a&&(g===3||g===4))&&h%e[0]===0&&i%e[1]===0&&t[0]===4))throw new Error(`If transposeA ${a} is true, innerElementSize ${g} and workPerThread[1] ${t[1]} must be 4.
      Otherwise, innerElementSize ${g} must be 3 or 4.
  tileAWidth ${h} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${g}<${r}>, ${h/g}>, ${m}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${l/t[0]}>, ${i}>;

const rowPerThread = ${t[1]};
const colPerThread = ${t[0]};
const innerElementSize = ${g};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${d};

  let num_tiles = ${s?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${c};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${pc(a,n)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${n?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${g===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${hc(a,g)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Ps=(t,e)=>t?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,fc=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ka=(t,e,r="f32",n,a=!1,i=32,s=!1,o=32,d=!1)=>{let l=t[1]*e[1],h=t[0]*e[0],m=a?l:i,g=a?i:l;if(!(g%e[1]===0&&m%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${g} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${m} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let c=g/e[1],w=m/e[0],v=i/e[1],S=d?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${h};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${g}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${e[0]}) {
          ${Ps(a,n)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${n?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${c};
let tileColA = i32(localId.x) * ${w};
let tileRowB = i32(localId.y) * ${v};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${w}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Ps(a,n)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${n?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${fc(a)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${m}>, ${g}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${h}>, ${i}>;
  const rowPerThread = ${t[1]};
  const colPerThread = ${t[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${n?`let batchIndices = ${n.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${S}
  }
`},mc=(t,e,r,n,a,i=!1)=>{let[s,o,d]=a,[l,h,m,g]=n,c=On(s,d),w=On(o,d),v=ut(n[0].type.tensor),S=()=>{let x=h.rank,I=l.rank,T=`var aIndices: ${h.type.indices};`;for(let M=x-2-1,U=I-1;M>=0;M--,U--)T+=`
aIndices[${M}] = ${I>1?`batchIndices[${U}]`:"batchIndices"};`;return c.forEach(M=>{T+=`
aIndices[${M}] = 0;`}),T+=`
aIndices[${x-2}] = u32(row);
                   aIndices[${x-1}] = u32(colIn);`,T},E=()=>{let x=m.rank,I=l.rank,T=`var bIndices: ${m.type.indices};`;for(let M=x-2-1,U=I-1;M>=0;M--,U--)T+=`
bIndices[${M}] = ${I>1?`batchIndices[${U}]`:"batchIndices"};`;return w.forEach(M=>{T+=`
bIndices[${M}] = 0;`}),T+=`
bIndices[${x-2}] = u32(row);
                   bIndices[${x-1}] = u32(colIn);`,T};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${mt(t,v)} {
      var value = ${mt(t,v)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${S()}
        value = ${h.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${mt(t,v)} {
      var value = ${mt(t,v)}(0.0);
      let col = colIn * ${t};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${E()}
        value = ${m.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mt(t,v)}) {
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${mt(t,v)}(bias[row])`};`:""}
        ${r}
        ${g.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Bs=(t,e,r,n,a=!1)=>{let i=t[0].dims,s=t[1].dims,o=i.slice(0,-2),d=s.slice(0,-2),l=n?n.slice(0,-2):r.slice(0,-2),h=H.size(l),m=i[i.length-2],g=i[i.length-1],c=s[s.length-1],w=g%4===0&&c%4===0,v=m<=8?[4,1,1]:[4,4,1],S=[8,8,1],E=[Math.ceil(c/S[0]/v[0]),Math.ceil(m/S[1]/v[1]),Math.ceil(h/S[2]/v[2])],x=w?4:1,I=[...o,m,g/x],T=I.length,M=[...d,g,c/x],U=M.length,B=[h,m,c/x],D=[{type:6,data:m},{type:6,data:c},{type:6,data:g}];zr(e,D),D.push(...ge(l,I,M));let Q=["rank","rank"],J=t.length>2;J&&(D.push(...ge(t[2].dims)),Q.push("rank")),D.push(...ge(B));let se=ae=>{let ce=l.length,ue=vs("batchDims",t[0].dataType,ce,1),A=ut(t[0].dataType),R=j("a",t[0].dataType,T,x),Z=j("b",t[1].dataType,U,x),ve=he("result",t[0].dataType,B.length,x),te=[R,Z];if(J){let ze=a?x:1;te.push(j("bias",t[2].dataType,t[2].dims.length,ze))}let oe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Rr(e,oe);let V=ut(ve.type.tensor),re=Mr(e,ve.type.value,V),fe=mc(x,J,re,[ue,R,Z,ve],[o,d,l],a);return`
  ${ae.registerUniforms(oe).registerInternalVariables(ue).declareVariables(...te,ve)}
  ${fe}
  ${w?ja(v,S,A,ue):Ka(v,S,A,ue)}
                   `};return{name:"MatMul",shaderCache:{hint:`${v};${e.activation};${w};${a}`,inputDependencies:Q},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:D}),getShaderSource:se}}}),gc,_c,t_=X(()=>{be(),Or(),Ce(),Pr(),zs(),cc(),Ya(),gc=(t,e,r,n,a=!1,i,s=4,o=4,d=4,l="f32")=>{let h=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},m=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},g=t?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,c=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,w=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",v=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",S=t?"row":"col",E=t?"col":"row",x=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${S} / outWidth;
    let outCol = ${S} % outWidth;

    let WRow = ${E} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${E} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${E} % inChannels;
    var resData = ${mt(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${w} && xCol >= 0 && xCol < ${v}) {
      ${g}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${h(s)}
    }
    return resData;`,I=t?e&&n?`
    let col = colIn * ${s};
    ${x}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${x}
    }
    return ${mt(s,l)}(0.0);`:n&&r?`
    let col = colIn * ${s};
    ${x}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${x}
    }
    return ${mt(s,l)}(0.0);`,T=`${m(o)}`,M=mt(d,l),U=mt(t?s:o,l),B=mt(t?o:s,l),D=Mr(i,M,l);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${U} {
      ${t?I:T}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${B} {
      ${t?T:I}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${M}) {
      let col = colIn * ${d};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${c}
      ${Ms(a)}
      ${D}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},_c=(t,e,r,n,a,i,s,o)=>{let d=e.format==="NHWC",l=d?t[0].dims[3]:t[0].dims[1],h=r[0],m=d?r[2]:r[3],g=d?r[1]:r[2],c=d?r[3]:r[1],w=d&&(l%4===0||l%3===0)&&c%4===0,v=d?c:m*g,S=d?m*g:c,E=[8,8,1],x=n<=8?[4,1,1]:[4,4,1],I=[Math.ceil(v/E[0]/x[0]),Math.ceil(S/E[1]/x[1]),Math.ceil(h/E[2]/x[2])];Xe("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${I}`);let T=w?d&&l%4!==0?3:4:1,M=E[1]*x[1],U=E[0]*x[0],B=Math.max(E[0]*T,E[1]),D=n%M===0,Q=a%U===0,J=i%B===0,se=w?[T,4,4]:[1,1,1],ae=[{type:6,data:n},{type:6,data:a},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];zr(e,ae),ae.push(...ge(t[0].dims,t[1].dims));let ce=["rank","rank"];s&&(ae.push(...ge(t[2].dims)),ce.push("rank")),ae.push(...ge(r));let ue=A=>{let R=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Rr(e,R);let Z=w?4:1,ve=ut(t[0].dataType),te=`
      fn setOutputAtIndex(flatIndex : i32, value : ${w?`vec4<${ve}>`:ve}) {
        result[flatIndex] = ${w?`vec4<${ve}>`:ve}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${w?`vec4<${ve}>`:ve}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${w?"/ 4":""}, value);
      }`,oe=j("x",t[0].dataType,t[0].dims.length,T===3?1:T),V=j("w",t[1].dataType,t[1].dims.length,Z),re=[oe,V],fe=he("result",t[0].dataType,r.length,Z);if(s){let ze=j("bias",t[2].dataType,t[2].dims.length,Z);re.push(ze),te+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?`vec4<${ve}>`:ve} {
          return bias[coords.${d?"w":"y"}${w?"/ 4":""}];
        }`}return`
        ${Rs("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${A.registerUniforms(R).declareVariables(...re,fe)}
        ${te}
        ${gc(d,D,Q,J,s,e,se[0],se[1],se[2],ve)}
        ${w?ja(x,E,ve,void 0,!d,B):Ka(x,E,ve,void 0,!d,B,!1,void 0,o)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${T};${w};${D};${Q};${J};${M};${U};${B}`,inputDependencies:ce},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:ae}),getShaderSource:ue}}}),Ds,yc,r_=X(()=>{be(),Ie(),Ce(),kc(),Pr(),Ds=(t,e,r)=>{let n=t.length>2,a=n?"value += b[output_channel];":"",i=t[0].dims,s=t[1].dims,o=s[0]/e.group,d=e.format==="NHWC",l=Xa(i,s,e.dilations,e.pads,e.strides,d),h=H.size(l),m=[{type:12,data:h},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:o}];zr(e,m),m.push(...ge(i,s));let g=["rank","rank"];n&&(m.push(...ge(t[2].dims)),g.push("rank")),m.push(...ge(l));let c=w=>{let v=he("output",t[0].dataType,l.length),S=ut(v.type.tensor),E=Mr(e,v.type.value,S),x=j("x",t[0].dataType,i.length),I=j("w",t[1].dataType,s.length),T=[x,I];n&&T.push(j("b",t[2].dataType,t[2].dims.length));let M=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Rr(e,M),`
  ${w.registerUniforms(M).declareVariables(...T,v)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${v.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${d?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${d?1:2}], outputIndices[${d?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${v.type.value} = ${v.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${d?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${d?2:3}]) {
            continue;
          }

          let xVal = ${d?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${I.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${a}
    ${E}
    ${v.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:g},getRunData:()=>({outputs:[{dims:r?r(l):l,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:m}),getShaderSource:c}},yc=(t,e,r)=>{let n=t.length>2,a=tt(r[3]),i=tt(r[2]),s=H.size(r)/a/i,o=[t[0].dims[0],t[0].dims[1],t[0].dims[2],t[0].dims[3]/a],d=[t[1].dims[0],t[1].dims[1],t[1].dims[2],t[1].dims[3]/a],l=[r[0],r[1],r[2],r[3]/a],h=[{type:12,data:s},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];zr(e,h),h.push(...ge(o,d,l));let m=(i-1)*e.strides[1]+d[1],g=c=>{let w=he("output",t[0].dataType,l.length,a),v=ut(w.type.tensor),S=Mr(e,w.type.value,v),E=j("x",t[0].dataType,o.length,a),x=j("w",t[1].dataType,d.length,a),I=[E,x];n&&I.push(j("b",t[2].dataType,t[2].dims,a));let T=n?"value += b[output_channel];":"",M=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Rr(e,M),`
  ${c.registerUniforms(M).declareVariables(...I,w)}
  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${E.type.value}, ${m}>;
    var values: array<${w.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${m}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${E.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${E.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {
          let w_val = ${x.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${T}
      ${S}
      ${w.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${a};${i};${m};${d[0]};${d[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:h}),getShaderSource:g}}}),Ns,wc,bc,vc=X(()=>{be(),Ie(),Ya(),Ce(),Pr(),Ns=(t,e,r,n,a=!1)=>{let i=t[0].dims,s=t[1].dims,o=i[i.length-2],d=s[s.length-1],l=i[i.length-1],h=tt(d),m=tt(l),g=tt(o),c=H.size(r)/h/g,w=t.length>2,v=n?n.slice(0,-2):r.slice(0,-2),S=[H.size(v),o,d],E=[{type:12,data:c},{type:12,data:o},{type:12,data:d},{type:12,data:l}];zr(e,E),E.push(...ge(v,i,s)),w&&E.push(...ge(t[2].dims)),E.push(...ge(S));let x=I=>{let T=vs("batch_dims",t[0].dataType,v.length),M=j("a",t[0].dataType,i.length,m),U=j("b",t[1].dataType,s.length,h),B=he("output",t[0].dataType,S.length,h),D=ut(B.type.tensor),Q=Mr(e,B.type.value,D),J=[M,U],se="";if(w){let te=a?h:1;J.push(j("bias",t[2].dataType,t[2].dims.length,te)),se=`${a?`value += bias[col / ${te}];`:`value += ${B.type.value}(bias[row + i]);`}`}let ae=i.slice(0,-2),ce=s.slice(0,-2),ue=On(ae,v),A=On(ce,v),R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Rr(e,R);let Z=(te,oe)=>{let V=te.rank,re=te.name;if(V===2)return`var ${re}_indices = ${te.type.indices}(0u, 0u);`;let fe=T.rank,ze=`var ${re}_indices: ${te.type.indices};`;for(let Ue=V-2-1,it=fe-1;Ue>=0;Ue--,it--)ze+=`
${re}_indices[${Ue}] = ${fe>1?`batch_indices[${it}]`:"batch_indices"};`;return oe.forEach(Ue=>{ze+=`
${re}_indices[${Ue}] = 0;`}),ze+=`${re}_indices[${V-2}] = 0u;
                     ${re}_indices[${V-1}] = 0u;`,ze},ve=()=>{let te=`var a_data: ${M.type.value};`;for(let oe=0;oe<m;oe++)te+=`
              let b_data${oe} = b[(b_offset + (k + ${oe}) * uniforms.N + col) / ${h}];`;for(let oe=0;oe<g;oe++){te+=`a_data = a[(a_offset + (row + ${oe}) * uniforms.K + k) / ${m}];`;for(let V=0;V<m;V++)te+=`
            values[${oe}] = fma(${U.type.value}(a_data${m===1?"":`[${V}]`}), b_data${V}, values[${oe}]);
`}return te};return`
  ${I.registerUniforms(R).registerInternalVariables(T).declareVariables(...J,B)}
  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${h})) * ${h};
    var index1 = global_idx / (uniforms.N / ${h});
    let stride1 = uniforms.M / ${g};
    let row = (index1 % stride1) * ${g};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${T.offsetToIndices("batch")};`}
    ${Z(M,ue)}
    let a_offset = ${M.indicesToOffset("a_indices")};
    ${Z(U,A)}
    let b_offset = ${U.indicesToOffset("b_indices")};
    var values: array<${B.type.value}, ${g}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${m}) {
      ${ve()}
    }
    for (var i = 0u; i < ${g}u; i++) {
      var value = values[i];
      ${se}
      ${Q}
      let cur_indices = ${B.type.indices}(batch, row + i, col);
      let offset = ${B.indicesToOffset("cur_indices")};
      ${B.setByOffset(`offset / ${h}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${h};${m};${g};${a}`,inputDependencies:w?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:E}),getShaderSource:x}},wc=t=>{if(!t||t.length!==2)throw new Error("MatMul requires 2 inputs.");if(t[0].dims[t[0].dims.length-1]!==t[1].dims[t[1].dims.length-2])throw new Error("shared dimension does not match.")},bc=t=>{wc(t.inputs);let e=Jr.calcShape(t.inputs[0].dims,t.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let r=e[e.length-1],n=t.inputs[0].dims[t.inputs[0].dims.length-1];r<8&&n<8?t.compute(Ns(t.inputs,{activation:""},e)):t.compute(Bs(t.inputs,{activation:""},e))}}),Xa,Qa,$c,Fs,Ls,xc,Sc,Us,kc=X(()=>{Ie(),t_(),Ya(),r_(),Pr(),vc(),Mn(),Xa=(t,e,r,n,a,i)=>{let s=t[0],o=t.slice(i?1:2,i?3:4),d=o.length,l=e[0],h=e.slice(2).map((g,c)=>g+(g-1)*(r[c]-1)),m=o.map((g,c)=>g+n[c]+n[c+d]).map((g,c)=>Math.floor((g-h[c]+a[c])/a[c]));return m.splice(0,0,s),m.splice(i?3:1,0,l),m},Qa=[2,3,1,0],$c=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[1]*e.group;if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(t.length===3&&(t[2].dims.length!==1||t[1].dims[0]!==t[2].dims[0]))throw new Error("invalid bias");let a=t[0].dims.length-2;if(e.dilations.length!==a)throw new Error(`dilations should be ${a}D`);if(e.strides.length!==a)throw new Error(`strides should be ${a}D`);if(e.pads.length!==a*2)throw new Error(`pads should be ${a*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape")},Fs=(t,e)=>{let r=t.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)r[i-2]===0&&(r[i-2]=e[1].dims[i]);let n=t.pads.slice();Fa.adjustPadsBasedOnAutoPad(e[0].dims,t.strides,t.dilations,r,n,t.format==="NHWC",t.autoPad);let a=Object.assign({},t);return Object.assign(a,{kernelShape:r,pads:n}),a},Ls=t=>{let e=Os(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],a=t.dilations,i=t.group,s=t.kernel_shape,o=t.pads,d=t.strides,l=t.w_is_const();return{autoPad:n,format:r,dilations:a,group:i,kernelShape:s,pads:o,strides:d,wIsConst:l,...e,cacheKey:`${t.format};${e.activation};`}},xc=(t,e,r)=>{let n=Fs(r,e),a=r.format==="NHWC";if(r.group!==1){if(!t.adapterInfo.isArchitecture("ampere")&&a&&e[1].dims[0]===r.group&&e[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let U=Xa(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),B=t.kernelCustomData.wT??t.compute(ur(e[1],Qa),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=B);let D=[e[0],B];e.length===3&&D.push(e[2]),t.compute(yc(D,n,U),{inputs:D})}else t.compute(Ds(e,n));return}let i=e.length===3,s=e[0].dims[a?1:2],o=e[0].dims[a?2:3],d=e[0].dims[a?3:1],l=e[1].dims[2],h=e[1].dims[3],m=Xa(e[0].dims,e[1].dims,r.dilations,n.pads,r.strides,a),g=m[a?1:2],c=m[a?2:3],w=m[a?3:1],v=a&&l===s&&h===o&&r.pads[0]===0&&r.pads[1]===0;if(v||l===1&&h===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let U=m[0],B,D,Q,J=[];if(a){let ce=t.kernelCustomData.wT??t.compute(ur(e[1],Qa),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=ce),v){let ue=s*o*d;B=e[0].reshape([1,U,ue]),D=ce.reshape([1,ue,w]),Q=[1,U,w]}else B=e[0].reshape([U,s*o,d]),D=ce.reshape([1,d,w]),Q=[U,g*c,w];J.push(B),J.push(D)}else B=e[0].reshape([U,d,s*o]),D=e[1].reshape([1,w,d]),Q=[U,w,g*c],J.push(D),J.push(B);i&&J.push(e[2]);let se=Q[2],ae=J[0].dims[J[0].dims.length-1];se<8&&ae<8?t.compute(Ns(J,n,m,Q,a),{inputs:J}):t.compute(Bs(J,n,m,Q,a),{inputs:J});return}let S=!0,E=t.kernelCustomData.wT??t.compute(ur(e[1],Qa),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=E);let x=[e[0],E];i&&x.push(e[2]);let I=a?g*c:w,T=a?w:g*c,M=l*h*d;t.compute(_c(x,n,m,I,T,M,i,S),{inputs:x})},Sc=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),o=[1].concat(e.kernelShape),d=Fs({...e,pads:a,strides:i,dilations:s,kernelShape:o},n);t.compute(Ds(n,d,l=>r?[l[0],l[2],l[3]]:[]))},Us=(t,e)=>{$c(t.inputs,e),t.inputs[0].dims.length===3?Sc(t,e):xc(t,t.inputs,e)}}),Ec,Cc,n_=X(()=>{be(),Or(),Ce(),Pr(),zs(),cc(),Ya(),Ec=(t,e=!1,r,n,a=4)=>{let i=S=>{switch(S){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${n}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${S} is not supported.`)}},s=t?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,o=t?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,d=t?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=t?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",h=t?"row":"col",m=t?"col":"row",g=`
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${h} / outWidth;
      let outCol = ${h} % outWidth;

      let WRow = ${m} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${m} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${d}) || fract(xR) > 0.0) {
        return ${n}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${n}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${m} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,c=t?`
      let col = colIn * ${a};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${g}
      }
      return ${n}(0.0);`:`
      let col = colIn * ${a};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${g}
      }
      return ${n}(0.0);`,w=`
      let col = colIn * ${a};
      let inChannels = ${t?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${t?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(a)}
      }
      return ${n}(0.0);
      `,v=Mr(r,n);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?c:w}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {
    ${t?w:c}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${t?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${o}
      ${Ms(e)}
      ${v}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;
    }
  }`},Cc=(t,e,r,n,a,i,s,o)=>{let d=e.format==="NHWC",l=d?t[0].dims[3]:t[0].dims[1],h=r[0],m=d?r[2]:r[3],g=d?r[1]:r[2],c=d?r[3]:r[1],w=d&&l%4===0&&l%3&&c%4===0,v=d?c:m*g,S=d?m*g:c,E=[8,8,1],x=n<=8?[4,1,1]:[4,4,1],I=[Math.ceil(v/E[0]/x[0]),Math.ceil(S/E[1]/x[1]),Math.ceil(h/E[2]/x[2])];Xe("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${I}`);let T=w?4:1,M=Math.max(E[0]*T,E[1]),U=w?4:1,B=[e.kernelShape[d?1:2],e.kernelShape[d?2:3]],D=[B[0]+(e.dilations[0]<=1?0:(B[0]-1)*(e.dilations[0]-1)),B[1]+(e.dilations[1]<=1?0:(B[1]-1)*(e.dilations[1]-1))],Q=[D[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),D[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],J=[{type:6,data:n},{type:6,data:a},{type:6,data:i},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:B},{type:6,data:Q}];zr(e,J),J.push(...ge(t[0].dims,t[1].dims));let se=["rank","rank"];s&&(J.push(...ge(t[2].dims)),se.push("rank")),J.push(...ge(r));let ae=ce=>{let ue=j("x",t[0].dataType,t[0].dims.length,U),A=j("w",t[1].dataType,t[1].dims.length,1),R=he("result",t[0].dataType,r.length,U),Z=[ue,A],ve="";if(s){let V=j("bias",t[2].dataType,t[2].dims.length,U);Z.push(V),ve+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${V.type.value} {
            return bias[coords.${d?"w":"y"}${w?"/ 4":""}];
          }`}let te=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:B.length},{name:"pads",type:"i32",length:Q.length}];Rr(e,te);let oe=ut(t[0].dataType,1);if(oe!=="f16"&&oe!=="f32")throw new Error(`elemType ${oe} is not supported.`);return`
        ${Rs("uniforms.result_strides")}
        ${ce.registerUniforms(te).declareVariables(...Z,R)};
        ${ve}
        ${Ec(d,s,e,ue.type.value,T)}
        ${w?ja(x,E,oe,void 0,!d,M):Ka(x,E,oe,void 0,!d,M,!1,void 0,o)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${x};${E};${w}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:J}),getShaderSource:ae}}}),Tc,Ws,a_=X(()=>{be(),Or(),Ie(),Ce(),Tc=(t,e,r,n,a,i=!1,s,o,d=!1)=>{let l=d?1:2,h=d?2:3,m=d?3:1,g=i?2:1,c=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;n&&(c+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${d?"w":"y"}${i?"/ 4":""}];
    }`);let w=i?4:1,v=j("W",e[1].dataType,e[1].dims.length,w),S=j("Dy",e[0].dataType,e[0].dims.length,w),E=[S,v];n&&E.push(j("bias",e[2].dataType,[r[m]].length,w));let x=he("result",e[0].dataType,r.length,w),I=`{
        let batch: u32 = ${a?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${a?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${a?"global_id.y":"workgroup_id.y"} * ${g};
        let d1: u32 = ${a?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${g}>;
        for (var i = 0; i < ${g}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${S.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${m}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${S.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${g}; i = i + 1) {
          let value = dotProd[i] + ${n?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${x.set("batch","r","c + i","d1","value")};
        }
      }`,T=`
          let outputIndices = ${x.offsetToIndices("global_idx")};
          let batch = ${x.indicesGet("outputIndices",0)};
          let d1 = ${x.indicesGet("outputIndices",m)};
          let r = ${x.indicesGet("outputIndices",l)};
          let c = ${x.indicesGet("outputIndices",h)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${h}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${d?S.get("batch","idyR","idyC","inputChannel"):S.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${v.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${n?"bias[d1]":`${s}(0.0)`};
          ${x.setByOffset("global_idx","value")};
        `;return`
  ${t.registerUniforms(o).declareVariables(...E,x)}
  ${c}

    ${t.mainStart()}
    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?I:T}}`},Ws=(t,e,r)=>{let n=t.length>2,a=e.outputShape,i=H.size(a),s=[Math.ceil(i/64),1,1];Xe("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let o=e.format==="NHWC",d=["rank","rank"],l=[e.strides[0],e.strides[1]],h=[e.kernelShape[o?1:2],e.kernelShape[o?2:3]],m=[e.dilations[0],e.dilations[1]],g=[h[0]+(e.dilations[0]<=1?0:(e.kernelShape[o?1:2]-1)*(e.dilations[0]-1)),h[1]+(e.dilations[1]<=1?0:(e.kernelShape[o?2:3]-1)*(e.dilations[1]-1))],c=[g[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),g[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],w=!1,v=e.group,S=t[1].dims,E=S[0]/v,x=S[1],I=[{type:12,data:i},{type:12,data:l},{type:12,data:h},{type:12,data:m},{type:12,data:g},{type:6,data:c},{type:12,data:E},{type:12,data:x},...ge(t[0].dims,t[1].dims)];n&&(I.push(...ge(t[2].dims)),d.push("rank")),I.push(...ge(a));let T=s[1]===1&&s[2]===1,M=U=>{let B=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:h.length},{name:"dilations",type:"u32",length:h.length},{name:"effective_filter_dims",type:"u32",length:g.length},{name:"pads",type:"i32",length:c.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],D=ut(t[0].dataType);return`${Tc(U,t,a,n,T,w,D,B,o)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:d},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:r?r(a):a,dataType:t[0].dataType}],programUniforms:I}),getShaderSource:M}}}),Ic,Ac,Oc,Vs,Mc,zc,Rc,Pc,Bc,Dc,i_=X(()=>{n_(),a_(),Pr(),Mn(),Ic=(t,e,r,n,a,i)=>(t-1)*e+r+(n-1)*a+1-i,Ac=(t,e,r,n,a)=>{let i=Math.floor(t/2);e==="SAME_UPPER"?(r[n]=i,r[a]=t-i):e==="SAME_LOWER"&&(r[n]=t-i,r[a]=i)},Oc=(t,e,r,n,a,i,s,o,d,l)=>{let h=t.length-2,m=l.length===0;if(d.length===0)for(let w=0;w<h;++w)d.push(0);let g=t[0],c=e[o?3:1]*a;for(let w=0,v=t.length-h-(o?1:0);w<h;++w,++v){let S=t[v],E=m?S*s[w]:l[w],x=Ic(S,s[w],i[w],e[v],r[w],E);Ac(x,n,i,w,w+h),m&&l.push(s[w]*(S-1)+d[w]+(e[v]-1)*r[w]+1-i[w]-i[w+h])}l.splice(0,0,g),l.splice(o?3:1,0,c)},Vs=(t,e)=>{let r=t.kernelShape.slice();if(t.kernelShape.length===0||t.kernelShape.reduce((m,g)=>m*g,1)===0){r.length=0;for(let m=2;m<e[1].dims.length;++m)r.push(e[1].dims[m])}let n=t.format==="NHWC";r.splice(0,0,e[1].dims[0]),r.splice(n?3:1,0,e[1].dims[1]);let a=t.pads.slice(),i=t.outputShape.slice(),s=t.outputPadding.slice(),o=e[0].dims,d=t.dilations.slice();if(d.reduce((m,g)=>m+g,0)===0){let m=e[0].dims.length-2;d=new Array(m).fill(1)}let l=t.strides.slice();if(l.reduce((m,g)=>m+g,0)===0){let m=e[0].dims.length-2;l=new Array(m).fill(1)}Oc(o,r,d,t.autoPad,t.group,a,l,n,s,i);let h=Object.assign({},t);return Object.assign(h,{kernelShape:r,pads:a,outputPadding:s,outputShape:i,dilations:d,strides:l}),h},Mc=t=>{let e=Os(t),r=t.format,n=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof t.autoPad>"u"?0:t.autoPad],a=t.dilations,i=t.group,s=t.kernelShape,o=t.pads,d=t.strides,l=t.wIsConst(),h=t.outputPadding,m=t.outputShape;return{autoPad:n,format:r,dilations:a,group:i,kernelShape:s,outputPadding:h,outputShape:m,pads:o,strides:d,wIsConst:l,...e,cacheKey:`${t.format};${e.activation};`}},zc=(t,e)=>{if(!t||t.length!==2&&t.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(t[0].dims.length!==4&&t[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(t[0].dims.length!==t[1].dims.length)throw new Error("filter does not have same dimension as input");let r=t[0].dims[e.format==="NHWC"?t[0].dims.length-1:1],n=t[1].dims[0];if(r!==n)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let a=t[1].dims[1]*e.group;if(t.length===3&&(t[2].dims.length!==1||t[2].dims[0]!==a))throw new Error("invalid bias");let i=t[0].dims.length-2;if(e.dilations.reduce((s,o)=>s+o,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((s,o)=>s+o,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((s,o)=>s+o,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((s,o)=>s+o,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==t[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==t[0].dims.length-2)throw new Error("invalid output shape")},Rc=[2,3,1,0],Pc=(t,e,r)=>{let n=Vs(r,e),a=r.format==="NHWC",i=n.outputShape,s=i[a?3:1],o=e[0].dims[a?3:1];if(n.group!==1||s===1&&o===1){t.compute(Ws(e,n));return}let d=i[a?1:2],l=i[a?2:3],h=e[1].dims[2],m=e[1].dims[3],g=a?d*l:s,c=a?s:d*l,w=h*m*o,v=!0,S=t.kernelCustomData.wT??t.compute(ur(e[1],Rc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!t.kernelCustomData.wT&&(t.kernelCustomData.wT=S);let E=[e[0],S],x=e.length===3;x&&(!a&&e[2].dims.length===1?E.push(e[2].reshape([e[2].dims[0],1,1])):E.push(e[2])),t.compute(Cc(E,n,i,g,c,w,x,v),{inputs:E})},Bc=(t,e)=>{let r=e.format==="NHWC",n=[t.inputs[0].reshape(r?[t.inputs[0].dims[0],1,t.inputs[0].dims[1],t.inputs[0].dims[2]]:[t.inputs[0].dims[0],t.inputs[0].dims[1],1,t.inputs[0].dims[2]]),t.inputs[1].reshape([t.inputs[1].dims[0],t.inputs[1].dims[1],1,t.inputs[1].dims[2]])];t.inputs.length===3&&n.push(t.inputs[2]);let a=e.kernelShape;(a.length===0||a[0]===0)&&(a=[t.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let o=e.pads;o.length===0&&(o=[0,0]),o=[0,o[0],0,o[1]],s=[1].concat(s),i=[1].concat(i),a=[1].concat(a);let d=Vs({...e,pads:o,strides:s,dilations:i,kernelShape:a},n);t.compute(Ws(n,d,l=>r?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},Dc=(t,e)=>{zc(t.inputs,e),t.inputs[0].dims.length===3?Bc(t,e):Pc(t,t.inputs,e)}}),Nc,Fc,Lc,s_=X(()=>{be(),Ie(),at(),Ce(),Nc=(t,e,r,n)=>{let a=H.size(e),i=e.length,s=j("input",t,i),o=he("output",t,i),d=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),l=H.normalizeAxis(d,i),h=m=>{let g=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,c=$e("uniforms.input_shape","uniforms.axis",i),w=n.reverse?g+(n.exclusive?" + 1":""):"0",v=n.reverse?c:g+(n.exclusive?"":" + 1");return`
                ${m.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,o)}
                ${m.mainStart()}
                  ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${o.offsetToIndices("global_idx")};
                  var sum = ${o.type.value}(0);
                  let first : i32 = ${w};
                  let last : i32 = ${v};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${o.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:n.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:l},...ge(e,e)]}),getShaderSource:h}},Fc=(t,e)=>{let r=t.inputs[0].dims,n=t.inputs[0].dataType,a=t.inputs[1];t.compute(Nc(n,r,a,e),{inputs:[0]})},Lc=t=>{let e=t.exclusive===1,r=t.reverse===1;return Ve({exclusive:e,reverse:r})}}),Uc,Wc,Vc,Gc,Hc,o_=X(()=>{be(),Ie(),at(),Ce(),Uc=t=>{if(!t||t.length!==1)throw new Error("DepthToSpace requires 1 input.");if(t[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Wc=(t,e,r,n)=>{let a=[];a.push(`fn perm(i: ${n.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let i=0;i<e;++i)a.push(r.indicesSet("a",t[i],`i[${i}]`));return a.push("return a;}"),a.join(`
`)},Vc=(t,e)=>{let r,n,a,i,s,o,d=e.format==="NHWC",l=e.blocksize,h=e.mode==="DCR";d?([r,n,a,i]=t.dims,s=h?[r,n,a,l,l,i/l**2]:[r,n,a,i/l**2,l,l],o=h?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,n,a,i]=[t.dims[0],t.dims[2],t.dims[3],t.dims[1]],s=h?[r,l,l,i/l**2,n,a]:[r,i/l**2,l,l,n,a],o=h?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let m=t.reshape(s),g=m.dims.length,c=t.dataType,w=j("a",c,g),v=he("output",c,g),S=E=>`
  ${E.registerUniform("output_size","u32").declareVariables(w,v)}

  ${Wc(o,g,w,v)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${v.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${v.setByOffset("global_idx",w.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${t.dims};${e.blocksize};${e.mode}`,inputDependencies:["rank"]},getRunData:E=>{let x=d?[r,n*l,a*l,i/l**2]:[r,i/l**2,n*l,a*l],I=H.size(x),T=m.dims,M=H.sortBasedOnPerm(T,o);return{outputs:[{dims:x,dataType:E[0].dataType}],dispatchGroup:{x:Math.ceil(I/64)},programUniforms:[{type:12,data:I},...ge(T,M)]}},getShaderSource:S}},Gc=(t,e)=>{Uc(t.inputs),t.compute(Vc(t.inputs[0],e))},Hc=t=>Ve({blocksize:t.blocksize,mode:t.mode,format:t.format})}),Ja,zn,Gs,qc,jc,Kc,Yc,Hs,Xc,Qc,Jc,u_=X(()=>{be(),Ie(),at(),Ce(),Ja="[a-zA-Z]|\\.\\.\\.",zn="("+Ja+")+",Gs="^"+zn+"$",qc="("+zn+",)*"+zn,jc="^"+qc+"$",Kc=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,e){let r=this.symbolToIndices.get(t);r===void 0?r=[e]:r.push(e),this.symbolToIndices.set(t,r)}},Yc=class{constructor(t,e){this.equation=e,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,n]=e.includes("->")?e.split("->",2):[e,""];if(!r.match(RegExp(jc)))throw new Error("Invalid LHS term");if(r.split(",").forEach((a,i)=>{let s=t[i].dims.slice();if(!a.match(RegExp(Gs)))throw new Error("Invalid LHS term");let o=this.processTerm(a,!0,s,i);this.lhs.push(o)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([a,i])=>i.count===1||a==="...").map(([a])=>a).join("");else if(!n.match(RegExp(zn)))throw new Error("Invalid RHS");n.match(RegExp(Ja,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(a);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,e,r){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==e&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(r)}else n={count:1,dimValue:e,inputIndices:[r]};this.symbolToInfo.set(t,n)}processTerm(t,e,r,n=-1){let a=r.length,i=!1,s=[],o=0;if(!t.match(RegExp(Gs))&&!e&&t!=="")throw new Error("Invalid LHS term");let d=t.match(RegExp(Ja,"g")),l=new Kc(n);return d?.forEach((h,m)=>{if(h==="..."){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let g=a-d.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(s=r.slice(o,o+g),this.hasEllipsis){if(this.ellipsisDims.length!==s.length||this.ellipsisDims.toString()!==s.toString())throw new Error("Ellipsis dimensions mismatch")}else if(e)this.hasEllipsis=!0,this.ellipsisDims=s;else throw new Error("Ellipsis must be specified in the LHS");for(let c=0;c<s.length;c++){let w=String.fromCharCode(48+c);l.addSymbol(w,m+c),this.addSymbol(w,r[o++],n)}}else l.addSymbol(h,m+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,r[o++],n)}),l}},Hs=t=>t+"_max",Xc=(t,e,r,n)=>{let a=t.map(l=>l.length).map((l,h)=>j(`input${h}`,e,l)),i=H.size(n),s=he("output",e,n.length),o=[...r.symbolToInfo.keys()].filter(l=>!r.rhs.symbolToIndices.has(l)),d=l=>{let h=[],m="var prod = 1.0;",g="var sum = 0.0;",c="sum += prod;",w=[],v=[],S=[],E=[],x=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((T,M)=>{if(r.rhs.symbolToIndices.has(M)){let U=r.rhs.symbolToIndices.get(M)?.[0];U!==void 0&&r.lhs.forEach((B,D)=>{if(T.inputIndices.includes(D)){let Q=B.symbolToIndices.get(M);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(J=>{h.push(`${a[D].indicesSet(`input${D}Indices`,J,s.indicesGet("outputIndices",U))}`)})}})}else r.lhs.forEach((U,B)=>{if(T.inputIndices.includes(B)){let D=U.symbolToIndices.get(M);if(D===void 0)throw new Error("Invalid symbol error");D.forEach(Q=>{w.push(`${a[B].indicesSet(`input${B}Indices`,Q,`${M}`)}`)}),E.push(`prod *= ${a[B].getByIndices(`input${B}Indices`)};`)}}),v.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${Hs(M)}; ${M}++) {`),S.push("}")});let I=x?[...h,`let sum = ${a.map((T,M)=>T.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...h,g,...v,...w,m,...E,c,...S];return`
            ${l.registerUniforms(o.map(T=>({name:`${Hs(T)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...a,s)}

            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${s.offsetToIndices("global_idx")};
            ${a.map((T,M)=>`var input${M}Indices: ${a[M].type.indices};`).join(`
`)}
            ${I.join(`
`)};
            ${s.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:t.map(()=>"rank")},getRunData:()=>{let l=o.filter(m=>r.symbolToInfo.has(m)).map(m=>({type:12,data:r.symbolToInfo.get(m)?.dimValue||0}));l.push({type:12,data:i});let h=t.map((m,g)=>[...ge(m)]).reduce((m,g)=>m.concat(g),l);return h.push(...ge(n)),{outputs:[{dims:n,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:h}},getShaderSource:d}},Qc=(t,e)=>{let r=new Yc(t.inputs,e.equation),n=r.outputDims,a=t.inputs.map((i,s)=>i.dims);t.compute(Xc(a,t.inputs[0].dataType,r,n))},Jc=t=>{let e=t.equation.replace(/\s+/g,"");return Ve({equation:e})}}),Zc,qs,ep,tp,rp,l_=X(()=>{be(),Ie(),Ce(),Zc=t=>{if(!t||t.length!==2)throw new Error("Expand requires 2 input.");let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=r.length<e.length?0:r.length-e.length,a=e.length<r.length?0:e.length-r.length;for(;n<r.length&&a<e.length;++n,++a)if(r[n]!==e[a]&&r[n]!==1&&e[a]!==1)throw new Error("Expand requires shape to be broadcastable to input")},qs=(t,e)=>{let r=t.length-e.length,n=[];for(let a=0;a<r;++a)n.push(t[a]);for(let a=0;a<e.length;++a)n.push(e[a]===1?t[a+r]:e[a]);return n},ep=(t,e)=>t.length>e.length?qs(t,e):qs(e,t),tp=t=>{let e=t[0].dims,r=Array.from(t[1].getBigInt64Array(),Number),n=ep(e,r),a=t[0].dataType,i=a===9?4:1,s=Math.ceil(H.size(n)/i),o=l=>{let h=j("input",a,e.length,i),m=he("output",a,n.length,i),g;if(a===9){let c=(w,v,S="")=>`
          let outputIndices${v} = ${m.offsetToIndices(`outputOffset + ${v}u`)};
          let offset${v} = ${h.broadcastedIndicesToOffset(`outputIndices${v}`,m)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${w}[${v}] = ${S}(${h.getByOffset(`index${v}`)}[component${v}]);
        `;g=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${c("data",0,"u32")}
        ${c("data",1,"u32")}
        ${c("data",2,"u32")}
        ${c("data",3,"u32")}
        ${m.setByOffset("global_idx","data")}
      }`}else g=`
        let outputIndices = ${m.offsetToIndices("global_idx")};
        let inputOffset = ${h.broadcastedIndicesToOffset("outputIndices",m)};
        ${m.setByOffset("global_idx",h.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(h,m)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${g}`},d=[{type:12,data:s},...ge(e,n)];return{name:"Expand",shaderCache:{hint:`${n.length}`,inputDependencies:["rank"]},getShaderSource:o,getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},rp=t=>{Zc(t.inputs),t.compute(tp(t.inputs),{inputs:[0]})}}),np,ap,d_=X(()=>{be(),Ie(),Ce(),As(),np=t=>{let e=t[0].dataType,r=H.size(t[0].dims),n=H.size(t[1].dims),a=n%4===0,i=s=>{let o=j("x",e,[1],4),d=j("bias",e,[1],4),l=he("y",e,[1],4),h=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],m=c=>`
      let bias${c}_offset: u32 = (global_idx * 4 + ${c}) % uniforms.bias_size;
      let bias${c} = ${d.getByOffset(`bias${c}_offset / 4`)}[bias${c}_offset % 4];`,g=a?`
      let bias = ${d.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${m(0)}${m(1)}${m(2)}${m(3)}
      let bias = ${o.type.value}(bias0, bias1, bias2, bias3);`;return`${s.registerUniforms(h).declareVariables(o,d,l)}

    ${Ts(bt(e))}

    ${s.mainStart(Zr)}
      ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${o.getByOffset("global_idx")};
      ${g}
      let x_in = x + bias;
      ${l.setByOffset("global_idx",Is("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:s=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:n}],dispatchGroup:{x:Math.ceil(r/Zr/4)}})}},ap=t=>{t.inputs.length<2||H.size(t.inputs[1].dims)===0?jd(t):t.compute(np(t.inputs))}}),ip,sp,op,up,c_=X(()=>{be(),Ie(),at(),Ce(),ip=t=>{if(!t||t.length!==2)throw new Error("Gather requires 2 inputs.")},sp=(t,e)=>{let r=t[0].dims,n=t[1].dims,a=r.length,i=H.normalizeAxis(e.axis,a),s=r.slice(0);s.splice(i,1,...n);let o=r[i],d=t[0].dataType===9?4:1,l=Math.ceil(H.size(s)/d),h=[{type:12,data:l},{type:6,data:o},{type:12,data:i},...ge(t[0].dims,t[1].dims,s)],m=g=>{let c=j("data",t[0].dataType,t[0].dims.length,d),w=j("inputIndices",t[1].dataType,t[1].dims.length),v=he("output",t[0].dataType,s.length,d),S=x=>{let I=n.length,T=`var indicesIndices${x}  = ${w.type.indices}(0);`;for(let M=0;M<I;M++)T+=`${I>1?`indicesIndices${x}[${M}]`:`indicesIndices${x}`} = ${s.length>1?`outputIndices${x}[uniforms.axis + ${M}]`:`outputIndices${x}`};`;T+=`
          var idx${x} = ${w.getByIndices(`indicesIndices${x}`)};
          if (idx${x} < 0) {
            idx${x} = idx${x} + uniforms.axisDimLimit;
          }
          var dataIndices${x} : ${c.type.indices};
        `;for(let M=0,U=0;M<a;M++)M===i?(T+=`${a>1?`dataIndices${x}[${M}]`:`dataIndices${x}`} = u32(idx${x});`,U+=I):(T+=`${a>1?`dataIndices${x}[${M}]`:`dataIndices${x}`} = ${s.length>1?`outputIndices${x}[${U}]`:`outputIndices${x}`};`,U++);return T},E;if(t[0].dataType===9){let x=(I,T,M="")=>`
          let outputIndices${T} = ${v.offsetToIndices(`outputOffset + ${T}u`)};
          ${S(T)};
          let offset${T} = ${c.indicesToOffset(`dataIndices${T}`)};
          let index${T} = offset${T} / 4u;
          let component${T} = offset${T} % 4u;
          ${I}[${T}] = ${M}(${c.getByOffset(`index${T}`)}[component${T}]);
        `;E=`
        let outputOffset = global_idx * ${d};
        var value = vec4<u32>(0);
        ${x("value",0,"u32")}
        ${x("value",1,"u32")}
        ${x("value",2,"u32")}
        ${x("value",3,"u32")}
        ${v.setByOffset("global_idx","value")}
      `}else E=`
      let outputIndices = ${v.offsetToIndices("global_idx")};
      ${S("")};
      let value = ${c.getByIndices("dataIndices")};
      ${v.setByOffset("global_idx","value")};
      `;return`
      ${g.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,w,v)}
      ${g.mainStart()}
        ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${E}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:h}),getShaderSource:m}},op=t=>Ve({axis:t.axis}),up=(t,e)=>{let r=t.inputs;ip(r),t.compute(sp(t.inputs,e))}}),lp,dp,cp,pp,p_=X(()=>{be(),Ie(),at(),Ce(),lp=t=>{if(!t||t.length!==2)throw new Error("GatherElements requires 2 inputs.");if(t[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(t[0].dims.length!==t[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},dp=(t,e)=>{let r=t[0].dims,n=t[0].dataType,a=r.length,i=t[1].dims,s=t[1].dataType,o=H.normalizeAxis(e.axis,a),d=r[o],l=i.slice(0),h=H.size(l),m=j("input",n,a),g=j("indicesInput",s,i.length),c=he("output",n,l.length),w=[{type:12,data:h},{type:6,data:d},{type:12,data:o}];return w.push(...ge(r,i,l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:w}),getShaderSource:v=>`
      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(m,g,c)}
      ${v.mainStart()}
      ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${c.offsetToIndices("global_idx")};

      var idx = ${g.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${m.type.indices}(outputIndices);
      ${m.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${m.getByIndices("inputIndices")};

      ${c.setByOffset("global_idx","value")};
  }`}},cp=t=>Ve({axis:t.axis}),pp=(t,e)=>{let r=t.inputs;lp(r),t.compute(dp(t.inputs,e))}}),hp,fp,mp,gp,h_=X(()=>{be(),Ie(),Ce(),hp=t=>{if(!t)throw new Error("Input is missing");if(t.length<2||t.length>3)throw new Error("Invaid input number.");if(t.length===3&&t[2].dims.length>2)throw new Error("Invalid input shape of C");if(t[0].dataType!==t[1].dataType||t.length===3&&t[0].dataType!==t[2].dataType)throw new Error("Input types are mismatched")},fp=(t,e)=>{let r=t[0].dims.slice(),n=t[1].dims.slice(),[a,i,s]=Qu.getShapeOfGemmResult(r,e.transA,n,e.transB,t.length===3?t[2].dims:void 0),o=[a,i];if(!o)throw new Error("Can't use gemm on the given tensors");let d=H.size(o),l=[{type:12,data:d},{type:12,data:a},{type:12,data:i},{type:12,data:s},{type:1,data:e.alpha},{type:1,data:e.beta}],h=["type","type"];t.length===3&&(l.push(...ge(t[2].dims)),h.push("rank")),l.push(...ge(o));let m=g=>{let c="";e.transA&&e.transB?c="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?c="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?c="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(c="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let w=e.alpha===1?"":"value *= uniforms.alpha;",v=j("a",t[0].dataType,t[0].dims),S=j("b",t[1].dataType,t[1].dims),E=v.type.value,x=null,I=[v,S];t.length===3&&(x=j("c",t[2].dataType,t[2].dims.length),I.push(x));let T=he("output",t[0].dataType,o.length);I.push(T);let M=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(M).declareVariables(...I)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${E}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${c}
    }

    ${w}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${E}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:o,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:l}),getShaderSource:m}},mp=t=>{let e=t.transA,r=t.transB,n=t.alpha,a=t.beta;return{transA:e,transB:r,alpha:n,beta:a,cacheKey:`${t.transA};${t.transB};${t.alpha===1}`}},gp=(t,e)=>{hp(t.inputs),t.compute(fp(t.inputs,e))}}),_p,yp,wp,bp,f_=X(()=>{be(),Ie(),Ce(),_p=(t,e)=>{let r=t[0].dims,n=r,a=2,i=H.sizeToDimension(r,a),s=H.sizeFromDimension(r,a),o=tt(s),d=s/o,l=[r[0],r[1],d],h=["rank","type","type"],m=[{type:12,data:s},{type:12,data:d}];m.push(...ge(l,l));let g=c=>{let w=j("x",t[0].dataType,l.length,o),v=j("scale",t[1].dataType,t[1].dims),S=j("bias",t[2].dataType,t[2].dims),E=he("output",t[0].dataType,l.length,o),x=[w,v,S,E],I=w.type.value,T=o===1?"f32":`vec${o}<f32>`,M=64,U=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${T}, ${M}>;
  const workgroupSize = ${M}u;
  ${c.registerUniforms(U).declareVariables(...x)}
  ${c.mainStart(M)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${T}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${T}(${w.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${_r("workgroupShared[0]",o)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${T}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${T}(${w.get("batch","channel","h")}) - ${T}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${_r("workgroupShared[0]",o)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${v.getByOffset("channel")});
    let channelShift = f32(${S.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${w.get("batch","channel","h")} * ${I}(${T}(channelScale)) + ${I}(${T}(channelShift));
      ${E.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${o}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:i},programUniforms:m}),getShaderSource:g}},yp=(t,e,r,n,a,i,s,o)=>{let d=tt(s),l=64,h=d===1?"vec2f":`mat2x${d}f`,m=d===1?"f32":`vec${d}f`,g=(U,B)=>`${h}(${U}, ${B})`,c=a*s/d,w=Math.ceil(i/l),v=["type"],S=[{type:12,data:w},{type:12,data:i},{type:12,data:Math.floor(s/d)},{type:12,data:Math.floor(i*s/d)}],E=U=>{let B=j("input",e.dataType,e.dims,d);return`
  ${U.declareVariables(B)}
  @group(0) @binding(1) var<storage, read_write> output : array<${h}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${U.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${or("f32",d)};
    var squaredSum = ${or("f32",d)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${m}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${g("sum","squaredSum")};
  }`},x=t.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${d}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:[a,s,l,2],dataType:1}],dispatchGroup:{x:a*s/d},programUniforms:S}),getShaderSource:E},{inputs:[e],outputs:[-1]})[0],I=[{type:12,data:c},{type:12,data:i},{type:12,data:Math.floor(s/d)},{type:12,data:Math.floor(l*s/d)}],T=["type","type","type"],M=U=>{let B=j("scale",r.dataType,r.dims,d),D=j("bias",n.dataType,n.dims,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${h}>;
  @group(0) @binding(1) var<storage, read> scale : array<${B.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${D.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${h}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${U.mainStart()}
    ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${or("f32",d)};
    var squaredSum = ${or("f32",d)};
    for (var i: u32 = 0; i < min(${l}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${o}));
    let channelScale = invStdDev * ${m}(scale[currentChannelNumber]);
    let channelShift = ${m}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${g("channelScale","channelShift")};
  }`};return t.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${d};${o}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[a,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:I}),getShaderSource:M},{inputs:[x,r,n],outputs:[-1]})[0]},wp=(t,e,r)=>{let n=e[0].dims,a=n,i=n[0],s=n[n.length-1],o=H.sizeFromDimension(n,1)/s,d=tt(s),l=H.size(a)/d,h=[{type:12,data:o},{type:12,data:Math.floor(s/d)}],m=["type","type"],g=yp(t,e[0],e[1],e[2],i,o,s,r.epsilon),c=w=>{let v=ut(e[0].dataType),S=d===1?"vec2f":`mat2x${d}f`,E=d===1?v:`vec${d}<${v}>`,x=j("input",e[0].dataType,e[0].dims,d),I=he("output",e[0].dataType,a,d);return`
  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${S}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${I.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${w.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${E}(scale[0]), ${E}(scale[1]));
  }`};t.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${d}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:h}),getShaderSource:c},{inputs:[e[0],g]})},bp=(t,e)=>{e.format==="NHWC"?wp(t,t.inputs,e):t.compute(_p(t.inputs,e))}}),vp,$p,xp,m_=X(()=>{be(),Ie(),Ce(),vp=t=>{if(!t||t.length<2)throw new Error("layerNorm requires at least 2 inputs.")},$p=(t,e,r)=>{let n=e.simplified,a=t[0].dims,i=t[1],s=!n&&t[2],o=a,d=H.normalizeAxis(e.axis,a.length),l=H.sizeToDimension(a,d),h=H.sizeFromDimension(a,d),m=H.size(i.dims),g=s?H.size(s.dims):0;if(m!==h||s&&g!==h)throw new Error(`Size of X.shape()[axis:] == ${h}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${m} and bias size of ${g}`);let c=[];for(let M=0;M<a.length;++M)M<d?c.push(a[M]):c.push(1);let w=tt(h),v=["type","type"],S=[{type:12,data:l},{type:1,data:h},{type:12,data:Math.floor(h/w)},{type:1,data:e.epsilon}];s&&v.push("type");let E=r>1,x=r>2,I=M=>{let U=ut(t[0].dataType),B=[j("x",t[0].dataType,t[0].dims,w),j("scale",i.dataType,i.dims,w)];s&&B.push(j("bias",s.dataType,s.dims,w)),B.push(he("output",t[0].dataType,o,w)),E&&B.push(he("mean_data_output",1,c)),x&&B.push(he("inv_std_output",1,c));let D=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${M.registerUniforms(D).declareVariables(...B)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${or("f32",w)};
    var mean_square_vector = ${or("f32",w)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${en(U,w,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${_r("mean_vector",w)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${_r("mean_square_vector",w)} / uniforms.norm_size ${n?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${en(U,w,"x[j + offset]")};
      let f32scale = ${en(U,w,"scale[j]")};
      output[j + offset] = ${B[0].type.value}((f32input ${n?"":"- mean"}) * inv_std_dev * f32scale
        ${s?`+ ${en(U,w,"bias[j]")}`:""}
      );
    }

    ${E?"mean_data_output[global_idx] = mean":""};
    ${x?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},T=[{dims:o,dataType:t[0].dataType}];return E&&T.push({dims:c,dataType:1}),x&&T.push({dims:c,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${w};${r};${n}`,inputDependencies:v},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(l/64)},programUniforms:S}),getShaderSource:I}},xp=(t,e)=>{vp(t.inputs),t.compute($p(t.inputs,e,t.outputCount))}}),Sp,kp,Ep,Cp,g_=X(()=>{be(),Ie(),at(),Ce(),Sp=(t,e)=>{if(t.length<3||t.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=t[0],n=r.dims.length;if(r.dims[n-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let a=Math.floor((e.k+e.blockSize-1)/e.blockSize),i=e.blockSize/8*e.bits,s=t[1];if(!H.areEqual(s.dims,[e.n,a,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=t[2].dims;if(H.size(o)!==e.n*a)throw new Error("scales input size error.");if(t.length===4){let d=t[3].dims,l=e.bits>4?e.n*a:e.n*Math.floor((a+1)/2);if(H.size(d)!==l)throw new Error("zeroPoints input size error.")}},kp=(t,e,r,n)=>{let a=t[0].dims,i=a.length,s=Math.floor((e.k+e.blockSize-1)/e.blockSize),o=a[i-2],d=e.k,l=e.n,h=a.slice(0,i-2),m=H.size(h),g=e.blockSize/8*e.bits/4,c=t[0].dataType,w=tt(o),v=tt(e.k),S=tt(g),E=An(c),x=o*s*E,I=Math.floor(n/x),T=s<=r[0]&&I>0,M=!T||I>=4?tt(l):I>=2&&tt(l)>=2?2:1,U=h.concat([o,l]),B=H.size(U)/M/w,D=T?[]:[{type:12,data:B},{type:12,data:e.blockSize}],Q=[m,o,d/v],J=H.convertShape(t[1].dims).slice();J.splice(-1,1,g/S),D.push(...ge(Q)),D.push(...ge(J)),D.push(...ge(t[2].dims)),t.length===4&&D.push(...ge(H.convertShape(t[3].dims)));let se=[m,o,l/M];D.push(...ge(se));let ae=ce=>{let ue=Q.length,A=j("a",t[0].dataType,ue,v),R=j("b",12,J.length,S),Z=j("scales",t[2].dataType,t[2].dims.length),ve=[A,R,Z],te=t.length===4?j("zero_points",12,t[3].dims.length):void 0;te&&ve.push(te);let oe=se.length,V=he("output",t[0].dataType,oe,M),re=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],fe=ut(t[0].dataType),ze=(()=>{switch(v){case 1:return`array<${fe}, 8>`;case 2:return`mat4x2<${fe}>`;case 4:return`mat2x4<${fe}>`;default:throw new Error(`${v}-component is not supported.`)}})(),Ue=`
        for (var word: u32 = 0; word < ${g}; word += ${S}) {
          ${R.indicesSet("b_indices","2","word")};
          let b_data = ${R.getByIndices("b_indices")};
          for (var i: u32 = 0; i < ${S}; i++) {
            let b_value: u32 = ${S===1?"b_data":"b_data[word + i]"};
            let b_mask: u32 = 0x0F0F0F0Fu;
            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
            let b_quantized_values = ${ze}(${Array.from({length:4},(pt,Je)=>`${fe}(b_value_lower[${Je}]), ${fe}(b_value_upper[${Je}])`).join(", ")});
            let b_dequantized_values = ${v===1?`${ze}(${Array.from({length:8},(pt,Je)=>`(b_quantized_values[${Je}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ze}(${Array(8).fill("zero_point").join(",")})) * scale;`};
            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
            for (var m: u32 = 0; m < ${T?o:w}u; m++) {
              ${A.indicesSet("a_indices",ue-2,T?"m":`row * ${w} + m`)};
              ${A.indicesSet("a_indices",ue-1,"word_offset")};
              var input_offset = ${A.indicesToOffset("a_indices")};
              var a_data: ${ze};
              for (var j: u32 = 0; j < ${8/v}; j++) {
                a_data[j] = ${A.getByOffset("input_offset")};
                input_offset++;
              }
              ${T?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${M>1?"[c]":""} += ${Array.from({length:8/v},(pt,Je)=>`${v===1?`a_data[${Je}] * b_dequantized_values[${Je}]`:`dot(a_data[${Je}], b_dequantized_values[${Je}])`}`).join(" + ")};
            }
            word_offset += ${8/v};
          }
        }`,it=te?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${te.getByOffset("zero_point_index")};
          }`:"";return T?`
        var<workgroup> workgroup_shared: array<${V.type.value}, ${o*s}>;
        ${ce.declareVariables(...ve,V)}
        ${ce.mainStart([s,1,1])}
          var a_indices: ${A.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${A.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${M}; c++) {
            let col_times_components_plus_c = col * ${M} + c;
              ${te?`
            var zero_point_bytes_per_col: u32 = (${s} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${te.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${R.type.indices};
            ${R.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${s} + block;
            let scale = ${Z.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${fe}(${te?"(zero_point_word) & 0xFu":8});
            ${R.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${e.blockSize/v};
            var workgroup_shared_offset: u32 = block * ${o};
            ${Ue}
          }
          workgroupBarrier();
          if (local_id.x == 0u) {
            var output_indices: ${V.type.indices};
            ${V.indicesSet("output_indices","0","batch")};
            ${V.indicesSet("output_indices",oe-1,"col")};
            ${V.indicesSet("output_indices",oe-2,"0")};
            var output_offset = ${V.indicesToOffset("output_indices")};
            for (var m: u32 = 0u; m < ${o}u; m++) {
              var output_value: ${V.type.value} = ${V.type.value}(0);
              var workgroup_shared_offset: u32 = m;
              for (var b: u32 = 0u; b < ${s}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${o};
              }
              ${V.setByOffset("output_offset","output_value")};
              output_offset += ${l/M};
            }
          }
        }`:`
        ${ce.registerUniforms(re).declareVariables(...ve,V)}
        ${ce.mainStart()}
          ${ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${V.type.value}, ${w}>;
          var output_indices = ${V.offsetToIndices("global_idx")};
          var col = ${V.indicesGet("output_indices",oe-1)};
          var row = ${V.indicesGet("output_indices",oe-2)};
          var a_indices: ${A.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${te?`
          var zero_point_abs_offset = col * ${M} * ((${s} + 1) / 2);
          var zero_point_index: u32 = zero_point_abs_offset / 4;
          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}
          var scale_index = col * ${s*M};
          var b_indices: ${R.type.indices};
          for (var c: u32 = 0; c < ${M}; c++) {
            ${R.indicesSet("b_indices","0",`col * ${M} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${s}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${Z.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${fe}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${R.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              ${Ue}
              scale_index++;
              ${it}
              block_offset += uniforms.block_size / ${v};
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${te?`if (zero_point_offset % 8 > 0) {
                ${it}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${w}u; k++) {
              ${V.indicesSet("output_indices",oe-2,`${w} * row + k`)};
              ${V.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:T?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${o};${c};${t.length}`,inputDependencies:Array(t.length).fill("rank")},getRunData:()=>({outputs:[{dims:U,dataType:c}],name:T?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:T?{x:1,y:Math.ceil(l/M),z:m}:{x:Math.ceil(B/64)},programUniforms:D}),getShaderSource:ae}},Ep=(t,e)=>{Sp(t.inputs,e);let r=t.getMaxComputeWorkgroupSizes(),n=t.getMaxComputeWorkgroupStoragesize();t.compute(kp(t.inputs,e,r,n))},Cp=t=>Ve(t)}),gt,Tp,Ip,js,Ap,Za,Op,__=X(()=>{be(),Ie(),at(),ms(),sd(),Ce(),Mn(),gt=(t,e)=>t.length>e&&t[e].dims.length>0&&H.size(t[e].dims)>0?t[e]:void 0,Tp=(t,e)=>{let r=t[0],n=gt(t,1),a=gt(t,2),i=gt(t,3),s=gt(t,4),o=gt(t,5),d=gt(t,6),l=gt(t,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let h=!1,m=r.dims[0],g=r.dims[1],c=r.dims.length===3?h?r.dims[2]/3:r.dims[2]:e.numHeads*r.dims[4],w=g,v=0,S=0,E=Math.floor(c/e.numHeads);if(d&&l){if(d.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(d.dims[0]!==m||d.dims[1]!==e.numHeads||d.dims[3]!==E)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[0]!==m||l.dims[1]!==e.numHeads||l.dims[3]!==E)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[2]!==l.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');v=d.dims[2],S=d.dims[2]}else if(d||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let x;if(n){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(n.dims.length<3||n.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==n.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(n.dims.length===3){if(n.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');x=2,w=n.dims[1]}else if(n.dims.length===5){if(n.dims[2]!==e.numHeads||n.dims[3]!==2||n.dims[4]!==E)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');x=5,w=n.dims[1]}else{if(n.dims[1]!==e.numHeads||n.dims[3]!==E)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');x=0,w=n.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==e.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');x=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(a&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let I=0;if(s){I=8;let D=s.dims;throw D.length===1?D[0]===m?I=1:D[0]===3*m+2&&(I=3):D.length===2&&D[0]===m&&D[1]===w&&(I=5),I===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let T=!1,M=c;if(a){if(a.dims.length!==3&&a.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(a.dims.length===3){if(w!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');M=a.dims[2]}else{if(w!==a.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');M=a.dims[1]*a.dims[3],T=!0}}let U=v+w,B=!1;if(s)throw new Error("Key padding mask is not supported");if(o){if(o.dims.length!==4)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(o.dims[0]!==m&&o.dims[0]!==1||o.dims[1]!==e.numHeads||o.dims[2]!==g||o.dims[3]!==U)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:m,sequenceLength:g,pastSequenceLength:v,kvSequenceLength:w,totalSequenceLength:U,maxSequenceLength:S,inputHiddenSize:0,hiddenSize:c,vHiddenSize:M,headSize:E,vHeadSize:Math.floor(M/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:I,scale:e.scale,broadcastResPosBias:B,passPastInKv:T,qkvFormat:x}},Ip=t=>Ve({...t}),js=Ve({perm:[0,2,1,3]}),Ap=(t,e,r,n,a,i,s)=>{let o=[n,a,i],d=H.size(o),l=[{type:12,data:d},{type:12,data:s},{type:12,data:i}],h=m=>{let g=he("qkv_with_bias",e.dataType,o),c=j("qkv",e.dataType,o),w=j("bias",r.dataType,o),v=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${m.registerUniforms(v).declareVariables(c,w,g)}
  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return t.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:l}),getShaderSource:h},{inputs:[e,r],outputs:[-1]})[0]},Za=(t,e,r,n,a,i,s,o)=>{let d=i;if(s){if(n===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return d=Ap(t,i,s,e,n,r*a,o),d=d.reshape([e,n,r,a]),t.compute(ur(d,js.perm),{inputs:[d],outputs:[-1]})[0]}else return i.dims.length===3&&(d=i.reshape([e,n,r,a])),t.compute(ur(d,js.perm),{inputs:[d],outputs:[-1]})[0]},Op=(t,e)=>{let r=Tp(t.inputs,e),n=t.inputs[0],a=gt(t.inputs,1),i=gt(t.inputs,2),s=gt(t.inputs,3),o=gt(t.inputs,4),d=gt(t.inputs,5),l=gt(t.inputs,6),h=gt(t.inputs,7);if(n.dims.length===5)throw new Error("Packed QKV is not implemented");if(a?.dims.length===5)throw new Error("Packed KV is not implemented");let m=a&&i&&a.dims.length===4&&i.dims.length===4,g=Za(t,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,n,s,0);if(m)return Ga(t,g,a,i,o,void 0,l,h,d,r,e);if(!a||!i)throw new Error("key and value must be provided");let c=Za(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,a,s,r.hiddenSize),w=Za(t,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,i,s,2*r.hiddenSize);Ga(t,g,c,w,o,void 0,l,h,d,r,e)}}),Mp,zp,Rp,Pp,Bp,Dp,Np,Fp,Lp,y_=X(()=>{be(),Ie(),Ce(),Mp=t=>{if(!t||t.length<1)throw new Error("Too few inputs");if(t[0].dataType!==1&&t[0].dataType!==10)throw new Error("Input type must be float or float16.");if(t.length>=2){let e=t[0].dims.length*2===t[1].dims[0];if(t.length===4&&(e=t[3].dims[0]*2===t[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},zp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
            k = i32(${t.indicesGet("indices",a)}) - ${$e("uniforms.pads",a,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${$e("uniforms.x_shape",a,e)})) {
              break;
            }
            offset += k * i32(${$e("uniforms.x_strides",a,e)});
        `;return`
          value = ${t.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${n}
            value = x[offset];
          }
      `},Rp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${$e("uniforms.pads",a,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${$e("uniforms.x_shape",a,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${$e("uniforms.x_shape",a,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${$e("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Pp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${$e("uniforms.pads",a,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${$e("uniforms.x_shape",a,e)})) {
                  k = i32(${$e("uniforms.x_shape",a,e)}) - 1;
                }
                offset += k * i32(${$e("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Bp=(t,e,r)=>{let n="";for(let a=e-1;a>=0;--a)n+=`
                k = i32(${t.indicesGet("indices",a)}) - ${$e("uniforms.pads",a,r)};
                if (k < 0)  {
                  k += i32(${$e("uniforms.x_shape",a,e)}]);
                }
                if (k >= i32(${$e("uniforms.x_shape",a,e)})) {
                  k -= i32(${$e("uniforms.x_shape",a,e)});
                }
                offset += k * i32(${$e("uniforms.x_strides",a,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${n}
              value = x[offset];
          `},Dp=(t,e,r)=>{switch(r.mode){case 0:return zp(t,e,r.pads.length);case 1:return Rp(t,e,r.pads.length);case 2:return Pp(t,e,r.pads.length);case 3:return Bp(t,e,r.pads.length);default:throw new Error("Invalid mode")}},Np=(t,e)=>{let r=H.padShape(t[0].dims.slice(),e.pads),n=t[0].dims,a=H.size(r),i=[{type:12,data:a},{type:6,data:e.pads}];e.mode===0&&i.push({type:t[0].dataType,data:e.value}),i.push(...ge(t[0].dims,r));let s=["rank"],o=d=>{let l=he("output",t[0].dataType,r.length),h=j("x",t[0].dataType,n.length),m=h.type.value,g=Dp(l,n.length,e),c=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&c.push({name:"constant_value",type:m}),`
            ${d.registerUniforms(c).declareVariables(h,l)}
            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${m}(0);
            ${g}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:r,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(H.size(r)/64)},programUniforms:i}),getShaderSource:o}},Fp=(t,e)=>{if(t.length>1){let r=t[1].getBigInt64Array(),n=t.length>=3&&t[2].data?t[2].getFloat32Array()[0]:0,a=t[0].dims.length,i=new Int32Array(2*a).fill(0);if(t.length>=4){let o=t[3].getBigInt64Array();for(let d=0;d<o.length;d++)i[Number(o[d])]=Number(r[d]),i[Number(o[d])+a]=Number(r[d+o.length])}else r.forEach((o,d)=>i[Number(d)]=Number(o));let s=[];return i.forEach(o=>s.push(o)),{mode:e.mode,value:n,pads:s}}else return e},Lp=(t,e)=>{Mp(t.inputs);let r=Fp(t.inputs,e);t.compute(Np(t.inputs,r),{inputs:[0]})}}),Rn,Ks,Ys,Xs,Qs,Up,Wp,Js,Zs,Vp,Gp,eo,Hp,qp,to,jp,Kp,Yp,Xp,w_=X(()=>{Wt(),be(),Ie(),Ce(),Rn=t=>{if(Fe.webgpu.validateInputContent&&(!t||t.length!==1))throw new Error("Pool ops requires 1 input.")},Ks=(t,e,r)=>{let n=e.format==="NHWC",a=t.dims.slice();n&&a.splice(1,0,a.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),o=e.strides.slice(),d=i?e.dilations.slice():[],l=e.pads.slice();Fa.adjustPoolAttributes(r,a,s,o,d,l);let h=Fa.computePoolOutputShape(r,a,o,d,s,l,e.autoPad),m=Object.assign({},e);i?Object.assign(m,{kernelShape:s,strides:o,pads:l,dilations:d,cacheKey:e.cacheKey}):Object.assign(m,{kernelShape:s,strides:o,pads:l,cacheKey:e.cacheKey});let g=h.slice();return g.push(g.splice(1,1)[0]),[m,n?g:h]},Ys=(t,e)=>{let r=e.format==="NHWC",n=H.size(t),a=H.size(e.kernelShape),i=[{type:12,data:n},{type:12,data:a}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let o=e.kernelShape[e.kernelShape.length-1],d=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],h=e.pads[e.pads.length-1],m=!!(l+h);i.push({type:12,data:o},{type:12,data:d},{type:12,data:l},{type:12,data:h}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let g=!1;if(e.kernelShape.length===2){let c=e.kernelShape[e.kernelShape.length-2],w=e.strides[e.strides.length-2],v=e.pads[e.pads.length/2-2],S=e.pads[e.pads.length-2];g=!!(v+S),i.push({type:12,data:c},{type:12,data:w},{type:12,data:v},{type:12,data:S}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,m,g]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=H.computeStrides(e.kernelShape);i.push({type:12,data:o},{type:12,data:e.pads},{type:12,data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let d=e.pads.reduce((l,h)=>l+h);return[i,s,!!d,!1,!1]}},Xs=(t,e,r,n,a,i,s,o,d,l,h,m)=>{let g=a.format==="NHWC",c=e.type.value,w=he("output",e.type.tensor,n);if(a.kernelShape.length<=2){let v="",S="",E="",x=r-(g?2:1);if(h?v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${x}] < 0 || xIndices[${x}]
                      >= uniforms.x_shape[${x}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,a.kernelShape.length===2){let I=r-(g?3:2);m?S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${I}] < 0 || xIndices[${I}] >= uniforms.x_shape[${I}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:S=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${I}] = indices[${I}] * uniforms.sh - uniforms.phStart + j;
                `,E=`
              }
            `}return`
            ${t.registerUniforms(d).declareVariables(e,w)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${w.offsetToIndices("global_idx")};
              var xIndices = ${w.offsetToIndices("global_idx")};

              var value = ${c}(${o});
              var pad = 0;
              ${S}
              ${v}
              ${E}
              ${s}

              output[global_idx] = value;
            }`}else{if(g)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=a.kernelShape.length,S=a.pads.length,E="";return l?E=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:E=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${t.registerUniforms(d).declareVariables(e,w)}

            ${t.mainStart()}
              ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${w.offsetToIndices("global_idx")};
              var xIndices = ${w.offsetToIndices("global_idx")};

              var offsets: array<u32, ${v}>;

              var value = ${c}(${o});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${v-1}u; j++) {
                  offsets[j] = offset / ${$e("uniforms.kernelStrides","j",v)};
                  offset -= offsets[j] * ${$e("uniforms.kernelStrides","j",v)};
                }
                offsets[${v-1}] = offset;

                isPad = false;
                for (var j = ${r-v}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${$e("uniforms.strides",`j - ${r-v}u`,v)}
                    + offsets[j - ${r-v}u] - ${$e("uniforms.pads","j - 2u",S)};
                  ${E}
              }
              ${s}

              output[global_idx] = value;
            }`}},Qs=t=>`${t.format};${t.ceilMode};${t.autoPad};${t.kernelShape.length}`,Up=t=>`${Qs(t)};${t.countIncludePad}`,Wp=t=>`${Qs(t)};${t.storageOrder};${t.dilations}`,Js=t=>({format:t.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][t.auto_pad],ceilMode:t.ceil_mode,kernelShape:t.kernel_shape,strides:t.strides,pads:t.pads}),Zs=(t,e,r,n)=>{let[a,i]=Ks(e,n,r),s=j("x",e.dataType,e.dims.length),o=s.type.value,d="value += x_val;",l="";a.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[h,m,g,c,w]=Ys(i,a);h.push(...ge(e.dims,i));let v=["rank"];return{name:t,shaderCache:{hint:`${n.cacheKey};${g};${c};${w}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:h}),getShaderSource:S=>Xs(S,s,e.dims.length,i.length,a,d,l,0,m,g,c,w)}},Vp=t=>{let e=t.count_include_pad!==0,r=Js(t);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let n={countIncludePad:e,...r,cacheKey:""};return{...n,cacheKey:Up(n)}},Gp=(t,e)=>{Rn(t.inputs),t.compute(Zs("AveragePool",t.inputs[0],!1,e))},eo={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Hp=t=>{let e=t.format;return{format:e,...eo,cacheKey:e}},qp=(t,e)=>{Rn(t.inputs),t.compute(Zs("GlobalAveragePool",t.inputs[0],!0,e))},to=(t,e,r,n)=>{let[a,i]=Ks(e,n,r),s=`
      value = max(x_val, value);
    `,o="",d=j("x",e.dataType,e.dims.length),l=["rank"],[h,m,g,c,w]=Ys(i,a);return h.push(...ge(e.dims,i)),{name:t,shaderCache:{hint:`${n.cacheKey};${g};${c};${w}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(H.size(i)/64)},programUniforms:h}),getShaderSource:v=>Xs(v,d,e.dims.length,i.length,a,s,o,e.dataType===10?-65504:-1e5,m,g,c,w)}},jp=(t,e)=>{Rn(t.inputs),t.compute(to("MaxPool",t.inputs[0],!1,e))},Kp=t=>{let e=t.storage_order,r=t.dilations,n=Js(t);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:e,dilations:r,...n,cacheKey:""};return{...a,cacheKey:Wp(a)}},Yp=t=>{let e=t.format;return{format:e,...eo,cacheKey:e}},Xp=(t,e)=>{Rn(t.inputs),t.compute(to("GlobalMaxPool",t.inputs[0],!0,e))}}),Qp,Jp,Zp,b_=X(()=>{Wt(),be(),Ce(),Qp=(t,e,r)=>{let n=t===e,a=t<e&&r<0,i=t>e&&r>0;if(n||a||i)throw new Error("Range these inputs' contents are invalid.")},Jp=(t,e,r,n)=>{let a=Math.abs(Math.ceil((e-t)/r)),i=[a],s=a,o=[{type:12,data:s},{type:n,data:t},{type:n,data:r},...ge(i)],d=l=>{let h=he("output",n,i.length),m=h.type.value,g=[{name:"outputSize",type:"u32"},{name:"start",type:m},{name:"delta",type:m}];return`
        ${l.registerUniforms(g).declareVariables(h)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${m}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${n}`},getShaderSource:d,getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:o})}},Zp=t=>{let e=0,r=0,n=0;t.inputs[0].dataType===6?(e=t.inputs[0].getInt32Array()[0],r=t.inputs[1].getInt32Array()[0],n=t.inputs[2].getInt32Array()[0]):t.inputs[0].dataType===1&&(e=t.inputs[0].getFloat32Array()[0],r=t.inputs[1].getFloat32Array()[0],n=t.inputs[2].getFloat32Array()[0]),Fe.webgpu.validateInputContent&&Qp(e,r,n),t.compute(Jp(e,r,n,t.inputs[0].dataType),{inputs:[]})}}),eh,th,rh,nh,ah,ih,sh,oh,uh,lh,dh,ro,ch,ph,hh,fh,mh,gh,_h,v_=X(()=>{be(),Ie(),at(),Ce(),eh=(t,e)=>{if(t.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),t.length>0){if(e.mode==="linear"){if(!(t.length===2||t.length===3||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1||t.length===5&&t[0]===1&&t[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(t.length===2||t.length===4&&t[0]===1&&t[1]===1||t.length===4&&t[0]===1&&t[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},th=(t,e,r)=>{e.every(a=>a>=0&&a<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let n=new Array(r).fill(1);return e.forEach((a,i)=>n[a]=t[i]),n},rh=(t,e,r,n,a,i)=>{let[s,o,d]=r>10?[1,2,3]:[-1,t.length>1?1:-1,-1],l=t[0].dims.length;if(s>0&&t.length>s&&t[s].dims.length>0)t[s].getFloat32Array().forEach(h=>i.push(h));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&t.length>o&&t[o].dims.length>0){if(t[o].getFloat32Array().forEach(h=>n.push(h)),n.length!==0&&n.length!==l&&r>=18&&n.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");eh(n,e),e.axes.length>0&&th(n,e.axes,l).forEach((h,m)=>n[m]=h)}if(d>0&&t.length>d&&(t[d].getBigInt64Array().forEach(h=>a.push(Number(h))),a.length!==l||r>=18&&a.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(n.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(a.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof n<"u"&&typeof a<"u"&&n.length>0&&a.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},nh=(t,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(t){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${t} is not supported`)}})()+"}",ah=(t,e,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(t){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${t} is not supported`)}})()+"}",ih=(t,e,r)=>{let n=new Array(r).fill(0).concat(new Array(r).fill(1)),a=t.length===0?n:t.slice();return e.length>0?(e.forEach((i,s)=>{n[i]=a[s],n[s+r]=a[e.length+s]}),n):a},sh=(t,e,r,n)=>{let a=[];if(r.length>0)if(n.length>0){if(t.forEach(i=>a.push(i)),Math.max(...n)>t.length)throw new Error("axes is out of bound");n.forEach((i,s)=>a[i]=r[s])}else r.forEach(i=>a.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");a=t.map((i,s)=>Math.round(i*e[s]))}return a},oh=(t,e,r)=>{let n=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let a=t.slice();return r.axes.length>0?(r.axes.forEach(i=>e[i]=n),r.axes.forEach(i=>a[i]=Math.round(t[i]*e[i]))):(e.fill(n,0,e.length),a.forEach((i,s)=>a[s]=Math.round(i*e[s]))),a},uh=(t,e,r,n,a)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> array<${t.type.value}, ${r.length}> {
      var original_indices: array<${t.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var scale = ${$e("uniforms.scales","i",n)};
        var roi_low = ${$e("uniforms.roi","i",a)};
        var roi_hi = ${$e("uniforms.roi",`i + ${e.length}`,a)};
        if (scale == 1.0) {
          original_indices[i] = ${t.type.value}(output_index);
        } else {
          var input_shape_i = ${$e("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${$e("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,lh=(t,e,r,n,a,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
      var input_indices: ${t.type.indices};
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${$e("uniforms.scales","i",a)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${$e("uniforms.roi","i",i)};
          var roi_hi = ${$e("uniforms.roi",`i + ${r.length}`,i)};
          var input_shape_i = ${$e("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${$e("uniforms.output_shape","i",n.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${t.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,dh=(t,e)=>`
    fn checkInputIndices(input_indices: ${t.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${t.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${$e("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,ro=(t,e,r,n)=>t.rank>n?`
    ${t.indicesSet("input_indices",e,"channel")};
    ${t.indicesSet("input_indices",r,"batch")};
`:"",ch=(t,e,r,n,a)=>{let[i,s,o,d]=r.length===2?[-1,0,1,-1]:[0,2,3,1],l=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${l} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",s,`max(0, min(row, ${r[s]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(col, ${r[o]} - 1))`)};
      ${ro(t,d,i,2)}
      return ${t.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${l} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${l} = originalIndices[${s}];
      var col:${l} = originalIndices[${o}];
      ${n?`if (row < 0 || row > (${r[s]} - 1) || col < 0 || col > (${r[o]} - 1)) {
        return ${a};
      }`:""};
      row = max(0, min(row, ${r[s]} - 1));
      col = max(0, min(col, ${r[o]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${i}])`:"0"};
      var x11: ${l} = getInputValue(batch, channel, row1, col1);
      var x12: ${l} = getInputValue(batch, channel, row1, col2);
      var x21: ${l} = getInputValue(batch, channel, row2, col1);
      var x22: ${l} = getInputValue(batch, channel, row2, col2);
      var dx1: ${l} = abs(row - ${l}(row1));
      var dx2: ${l} = abs(${l}(row2) - row);
      var dy1: ${l} = abs(col - ${l}(col1));
      var dy2: ${l} = abs(${l}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},ph=(t,e,r,n,a,i,s,o,d,l)=>{let h=r.length===2,[m,g]=h?[0,1]:[2,3],c=t.type.value,w=v=>{let S=v===m?"row":"col";return`
      fn ${S}CubicInterpolation(input_indices: ${t.type.indices}, output_indices: ${e.type.indices}) -> ${c} {
        var output_index = ${e.indicesGet("output_indices",v)};
        var originalIdx: ${c} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[v]},
        ${n[v]}, ${r[v]}, ${i[v]}, ${i[v]} + ${r.length});
        var fractOriginalIdx: ${c} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${o} && (originalIdx < 0 || originalIdx > (${r[v]} - 1))) {
          return ${d};
        }
        var data: array<${c}, 4> = array<${c}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${S}: ${c} = originalIdx + ${c}(i);
          if (${S} < 0 || ${S} >= ${r[v]}) {
            ${l?`coefs[i + 1] = 0.0;
                        continue;`:o?`return ${d};`:`${S} = max(0, min(${S}, ${r[v]} - 1));`};
          }
        var input_indices_copy: ${t.type.indices} = input_indices;
          ${t.indicesSet("input_indices_copy",v,`u32(${S})`)};
          data[i + 1] = ${v===m?t.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(m)};
    ${w(g)};
  fn getCubicInterpolationCoefs(s: ${c}) -> array<${c}, 4> {
    var absS = abs(s);
    var coeffs: array<${c}, 4> = array<${c}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${c} = 1.0 - absS;
    var twoMinusAbsS: ${c} = 2.0 - absS;
    var onePlusAbsS: ${c} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${c}, 4>, coefs: array<${c}, 4>) -> ${c} {
    var coefsSum: ${c} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${c} {
    var input_indices: ${t.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},hh=(t,e,r,n,a)=>{let[i,s,o,d,l]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=t.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {
      var input_indices: ${t.type.indices};
      ${t.indicesSet("input_indices",s,`max(0, min(depth, ${r[s]} - 1))`)};
      ${t.indicesSet("input_indices",o,`max(0, min(height, ${r[o]} - 1))`)};
      ${t.indicesSet("input_indices",d,`max(0, min(width, ${r[d]} - 1))`)};
      ${ro(t,l,i,3)}
      return ${t.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${h} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${h} = originalIndices[${s}];
      var height:${h} = originalIndices[${o}];
      var width:${h} = originalIndices[${d}];
      ${n?`if (depth < 0 || depth > (${r[s]} - 1) || height < 0 || height > (${r[o]} - 1) || width < 0 || (width > ${r[d]} - 1)) {
      return ${a};
        }`:""};

    depth = max(0, min(depth, ${r[s]} - 1));
      height = max(0, min(height, ${r[o]} - 1));
      width = max(0, min(width, ${r[d]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${i}])`:"0"};

      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${h} = abs(depth - ${h}(depth1));
      var dx2: ${h} = abs(${h}(depth2) - depth);
      var dy1: ${h} = abs(height - ${h}(height1));
      var dy2: ${h} = abs(${h}(height2) - height);
      var dz1: ${h} = abs(width - ${h}(width1));
      var dz2: ${h} = abs(${h}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},fh=(t,e,r,n,a,i)=>{let s=t.dims,o=ih(i,e.axes,s.length),d=sh(s,n,a,e.axes),l=n.slice();n.length===0&&(l=s.map((x,I)=>x===0?1:d[I]/x),e.keepAspectRatioPolicy!=="stretch"&&(d=oh(s,l,e)));let h=he("output",t.dataType,d.length),m=j("input",t.dataType,s.length),g=H.size(d),c=s.length===d.length&&s.every((x,I)=>x===d[I]),w=e.coordinateTransformMode==="tf_crop_and_resize",v=e.extrapolationValue,S=m.type.value,E=x=>`
      ${c?"":`
      ${nh(e.coordinateTransformMode,S)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${dh(m,s)};
              ${ah(e.nearestMode,r,S)};
              ${lh(m,h,s,d,l.length,o.length,w)};
              `;case"linear":return`
              ${uh(h,s,d,l.length,o.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${ch(m,h,s,w,v)}`;if(s.length===3||s.length===5)return`${hh(m,h,s,w,v)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${ph(m,h,s,d,l,o,e.cubicCoeffA,w,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",o.length).declareVariables(m,h)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${c?"output[global_idx] = input[global_idx];":`
        let output_indices = ${h.offsetToIndices("global_idx")};
        var input_indices: ${m.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${m.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${r}|${l.length>0?l:""}|${a.length>0?a:""}|${o.length>0?o:""}|${c}|${s}`,inputDependencies:["rank"]},getShaderSource:E,getRunData:()=>({outputs:[{dims:d,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:12,data:g},{type:1,data:l},{type:1,data:o},...ge(s,d)]})}},mh=t=>{let e=t.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},gh=(t,e)=>{let r=[],n=[],a=[],i=mh(t);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");rh(t.inputs,e,i,r,n,a),t.compute(fh(t.inputs[0],e,i,r,n,a),{inputs:[0]})},_h=t=>{let e=t.antialias,r=t.axes,n=t.coordinateTransformMode,a=t.cubicCoeffA,i=t.excludeOutside!==0,s=t.extrapolationValue,o=t.keepAspectRatioPolicy,d=t.mode,l=t.nearestMode===""?"simple":t.nearestMode;return Ve({antialias:e,axes:r,coordinateTransformMode:n,cubicCoeffA:a,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:o,mode:d,nearestMode:l})}}),yh,wh,bh,$_=X(()=>{be(),Ie(),at(),Ce(),yh=(t,e)=>{let[r,n,a,i]=t,{numHeads:s,rotaryEmbeddingDim:o}=e;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!H.areEqual(n.dims,[])&&!H.areEqual(n.dims,[1])&&n.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${n.dims.length}`);if(a.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!H.areEqual(a.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&s===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let d=r.dims[0],l=r.dims[r.dims.length-2],h=a.dims[0],m=H.sizeFromDimension(r.dims,1)/l,g=o===0?a.dims[1]*2:m/s;if(o>g)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(n.dims.length===2){if(d!==n.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${n.dims[0]}`);if(l!==n.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${n.dims[1]}`)}if(g/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(l>h)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},wh=(t,e)=>{let{interleaved:r,numHeads:n,rotaryEmbeddingDim:a,scale:i}=e,s=t[0].dims[0],o=H.sizeFromDimension(t[0].dims,1),d=t[0].dims[t[0].dims.length-2],l=o/d,h=t[2].dims[1],m=a===0?h*2:l/n,g=new Array(s,d,l/m,m-h),c=H.computeStrides(g),w=[{type:1,data:i},{type:12,data:g},{type:12,data:c},...t[0].dims.length===3?new Array({type:12,data:[o,l,m,1]}):[],...t[0].dims.length===4?new Array({type:12,data:[o,m,d*m,1]}):[],...ge(t[0].dims,t[1].dims,t[2].dims,t[3].dims,t[0].dims)],v=S=>{let E=j("input",t[0].dataType,t[0].dims.length),x=j("position_ids",t[1].dataType,t[1].dims.length),I=j("cos_cache",t[2].dataType,t[2].dims.length),T=j("sin_cache",t[3].dataType,t[3].dims.length),M=he("output",t[0].dataType,t[0].dims.length);return S.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:g.length},{name:"global_strides",type:"u32",length:c.length},{name:"input_output_strides",type:"u32",length:c.length}]),`
        ${S.declareVariables(E,x,I,T,M)}

        ${S.mainStart(Zr)}
          let half_rotary_emb_dim = uniforms.${I.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${S.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${x.broadcastedIndicesToOffset("bsnh.xy",he("",x.type.tensor,2))};
            let position_id =
                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${E.getByOffset("i")} * ${I.get("position_id","bsnh[3]")} -
                ${E.getByOffset("j")} * ${T.get("position_id","bsnh[3]")};
            ${M.setByOffset("i","re")}
            let im = ${E.getByOffset("i")} * ${T.get("position_id","bsnh[3]")} +
                ${E.getByOffset("j")} * ${I.get("position_id","bsnh[3]")};
            ${M.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${M.setByOffset("k",E.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:v,getRunData:()=>({outputs:[{dims:t[0].dims,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(H.size(g)/Zr)},programUniforms:w})}},bh=(t,e)=>{yh(t.inputs,e),t.compute(wh(t.inputs,e))}}),vh,$h,xh,x_=X(()=>{be(),Ie(),Ce(),vh=t=>{if(!t||t.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=t[0],r=t[1],n=t[2];if(e.dataType!==r.dataType||e.dataType!==n.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let a=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(r.dims[r.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(n.dims.length!==1)throw new Error("Gamma must be 1D");if(n.dims[n.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(t.length>3){let s=t[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(t.length>4){let s=t[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}},$h=(t,e,r,n)=>{let a=e.simplified,i=t[0].dims,s=H.size(i),o=i,d=s,l=i.slice(-1)[0],h=n?i.slice(0,-1).concat(1):[],m=!a&&t.length>3,g=t.length>4,c=n&&r>1,w=n&&r>2,v=r>3,S=tt(l),E=[{type:12,data:d},{type:12,data:S},{type:12,data:l},{type:1,data:e.epsilon}],x=T=>{let M=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],U=[j("x",t[0].dataType,t[0].dims,S),j("skip",t[1].dataType,t[1].dims,S),j("gamma",t[2].dataType,t[2].dims,S)];m&&U.push(j("beta",t[3].dataType,t[3].dims,S)),g&&U.push(j("bias",t[4].dataType,t[4].dims,S)),U.push(he("output",t[0].dataType,o,S)),c&&U.push(he("mean_output",1,h)),w&&U.push(he("inv_std_output",1,h)),v&&U.push(he("input_skip_bias_sum",t[0].dataType,o,S));let B=ut(t[0].dataType);return`

      ${T.registerUniforms(M).declareVariables(...U)}

      ${T.mainStart()}
        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${or("f32",S)};
        var squareSum = ${or("f32",S)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${g?"bias[i]":B+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${v?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${en(B,S,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${_r("sum",S)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${_r("squareSum",S)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);
        ${c?"mean_output[global_idx] = mean;":""}
        ${w?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] ${a?"":`- ${B}(mean)`}) * ${B}(inv_std_dev) * gamma[i] ${m?"+ beta[i]":""};
        }
      }`},I=[{dims:o,dataType:t[0].dataType}];return r>1&&I.push({dims:h,dataType:1}),r>2&&I.push({dims:h,dataType:1}),r>3&&I.push({dims:i,dataType:t[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${S};${c};${w};${v}`,inputDependencies:t.map((T,M)=>"type")},getShaderSource:x,getRunData:()=>({outputs:I,dispatchGroup:{x:Math.ceil(d/l/64)},programUniforms:E})}},xh=(t,e)=>{vh(t.inputs);let r=[0];t.outputCount>1&&r.push(-3),t.outputCount>2&&r.push(-3),t.outputCount>3&&r.push(3),t.compute($h(t.inputs,e,t.outputCount,!1),{outputs:r})}}),Sh,Pn,kh,no,Eh,Ch,Th,Ih,S_=X(()=>{be(),Ie(),at(),Ce(),Sh=(t,e)=>{if(!t||t.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");t.slice(1).forEach((r,n)=>{if(t[n+1].dataType!==6&&t[n+1].dataType!==7)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Pn=(t,e)=>{let r=[];if(t.length>e)if(t[e].dataType===7)t[e].getBigInt64Array().forEach(n=>r.push(Number(n)));else if(t[e].dataType===6)t[e].getInt32Array().forEach(n=>r.push(Number(n)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return r},kh=(t,e)=>{if(t.length>1){let r=Pn(t,1),n=Pn(t,2),a=Pn(t,3);return a.length===0&&(a=[...Array(t[0].dims.length).keys()]),Ve({starts:r,ends:n,axes:a})}else return e},no=(t,e,r,n,a)=>{let i=t;return t<0&&(i+=r[n[e]]),a[e]<0?Math.max(0,Math.min(i,r[n[e]]-1)):Math.max(0,Math.min(i,r[n[e]]))},Eh=(t,e,r)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${t.type.indices} {
          var input_indices: ${t.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${$e("uniforms.input_shape","i",r.length)};
            let steps_i = ${$e("uniforms.steps","i",r.length)};
            let signs_i = ${$e("uniforms.signs","i",r.length)};
            let starts_i = ${$e("uniforms.starts","i",r.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${t.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Ch=(t,e)=>{let r=t[0].dims,n=H.size(r),a=e.axes.length>0?H.normalizeAxes(e.axes,r.length):[...Array(r.length).keys()],i=Pn(t,4);i.forEach(E=>E!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(a.length).fill(1));let s=e.starts.map((E,x)=>no(E,x,r,a,i)),o=e.ends.map((E,x)=>no(E,x,r,a,i));if(a.length!==s.length||a.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(a.length!==r.length)for(let E=0;E<r.length;++E)a.includes(E)||(s.splice(E,0,0),o.splice(E,0,r[E]),i.splice(E,0,1));let d=i.map(E=>Math.sign(E));i.forEach((E,x,I)=>{if(E<0){let T=(o[x]-s[x])/E,M=s[x],U=M+T*i[x];s[x]=U,o[x]=M,I[x]=-E}});let l=r.slice(0);a.forEach((E,x)=>{l[E]=Math.ceil((o[E]-s[E])/i[E])});let h={dims:l,dataType:t[0].dataType},m=he("output",t[0].dataType,l.length),g=j("input",t[0].dataType,t[0].dims.length),c=H.size(l),w=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:d.length},{name:"steps",type:"u32",length:i.length}],v=[{type:12,data:c},{type:12,data:s},{type:6,data:d},{type:12,data:i},...ge(t[0].dims,l)],S=E=>`
      ${E.registerUniforms(w).declareVariables(g,m)}
        ${Eh(g,m,r)}
        ${E.mainStart()}
          ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${m.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${m.setByOffset("global_idx",g.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${d.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:S,getRunData:()=>({outputs:[h],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:v})}},Th=(t,e)=>{Sh(t.inputs,e);let r=kh(t.inputs,e);t.compute(Ch(t.inputs,r),{inputs:[0]})},Ih=t=>{let e=t.starts,r=t.ends,n=t.axes;return Ve({starts:e,ends:r,axes:n})}}),Ah,Oh,Mh,zh,k_=X(()=>{be(),Ie(),at(),Ce(),Ah=t=>{if(!t||t.length!==1)throw new Error("Softmax op requires 1 input.")},Oh=(t,e)=>{let r=t.dims,n=H.size(r),a=64,i=e.axis;if(i<0&&(i=r.length+i),i<r.length-1)throw new Error("softmax only supports last axis for now.");let s=r[i],o=n/s,d=tt(s),l=s/d,h=(S,E)=>E===4?`max(max(${S}.x, ${S}.y), max(${S}.z, ${S}.w))`:E===2?`max(${S}.x, ${S}.y)`:E===3?`max(max(${S}.x, ${S}.y), ${S}.z)`:S,m=j("x",t.dataType,t.dims,d),g=he("result",t.dataType,t.dims,d),c=m.type.value,w=ut(t.dataType)==="f32"?`var threadMax = ${c}(-3.402823e+38f);`:`var threadMax = ${c}(-65504.0h);`,v=S=>`
      var<workgroup> rowMaxShared : ${c};
      var<workgroup> rowSumShared : ${c};
      var<workgroup> threadShared : array<${c}, ${a}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${c} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${c}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${S.registerUniform("packedCols","i32").declareVariables(m,g)}
      ${S.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${a};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${w}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${c}(${h("threadShared[0]",d)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${c}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${c}(${_r("threadShared[0]",d)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${d}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:t.dataType}],dispatchGroup:{x:o},programUniforms:[{type:6,data:l}]}),getShaderSource:v}},Mh=(t,e)=>{Ah(t.inputs),t.compute(Oh(t.inputs[0],e))},zh=t=>Ve({axis:t.axis})}),Rh,Ph,Bh,Dh,Nh,Fh,Lh,E_=X(()=>{be(),Ie(),at(),Ce(),Rh=t=>{if(!t||t.length<1)throw new Error("too few inputs")},Ph=(t,e)=>{let r=[],n=e.numOutputs;return t[1].dims[0]>0&&(t[1].getBigInt64Array().forEach(a=>r.push(Number(a))),n=r.length),Ve({numOutputs:n,axis:e.axis,splitSizes:r})},Bh=t=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${t}u; i += 1u ) {
    if (index < ${$e("uniforms.size_in_split_axis","i",t)}) {
        return i;
    }
    }
    return ${t}u;
}`,Dh=t=>{let e=t.length,r=[];for(let n=0;n<e;++n){let a=t[n].setByIndices("indices","input[global_idx]");e===1?r.push(a):n===0?r.push(`if (output_number == ${n}u) { ${a} }`):n===e-1?r.push(`else { ${a} }`):r.push(`else if (output_number == ${n}) { ${a} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${t[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},Nh=(t,e)=>{let r=t[0].dims,n=H.size(r),a=t[0].dataType,i=H.normalizeAxis(e.axis,r.length),s=new Array(e.numOutputs),o=j("input",a,r.length),d=new Array(e.numOutputs),l=[],h=[],m=0,g=[{type:12,data:n}];for(let w=0;w<e.numOutputs;w++){m+=e.splitSizes[w],d[w]=m;let v=r.slice();v[e.axis]=e.splitSizes[w],h.push(v),s[w]=he(`output${w}`,a,v.length),l.push({dims:h[w],dataType:t[0].dataType})}g.push({type:12,data:d},...ge(r,...h));let c=w=>`
  ${w.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",d.length).declareVariables(o,...s)}
  ${Bh(d.length)}
  ${Dh(s)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${o.offsetToIndices("global_idx")};
    var index = ${o.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${$e("uniforms.size_in_split_axis","output_number - 1u",d.length)};
      ${o.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(n/64)},programUniforms:g})}},Fh=(t,e)=>{Rh(t.inputs);let r=t.inputs.length===1?e:Ph(t.inputs,e);t.compute(Nh(t.inputs,r),{inputs:[0]})},Lh=t=>{let e=t.axis,r=t.splitSizes,n=t.numOutputs<0?r.length:t.numOutputs;if(n!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ve({axis:e,numOutputs:n,splitSizes:r})}}),ao,Uh,Wh,Vh,Gh,C_=X(()=>{be(),Ie(),Ce(),ao=t=>Array.from(t.getBigInt64Array(),Number),Uh=t=>{if(!t||t.length!==2)throw new Error("Tile requires 2 inputs.");if(t[0].dataType!==1&&t[0].dataType!==6&&t[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(t[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(t[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ao(t[1]).length!==t[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Wh=(t,e)=>{let r=[];for(let n=0;n<t.length;++n)r.push(t[n]*e[n]);return r},Vh=t=>{let e=t[0].dims,r=ao(t[1]),n=Wh(e,r),a=H.size(n),i=t[0].dataType,s=j("input",i,e.length),o=he("output",i,n.length),d=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,o)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${o.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${o.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${o.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...ge(t[0].dims,n)]}),getShaderSource:d}},Gh=t=>{Uh(t.inputs),t.compute(Vh(t.inputs),{inputs:[0]})}}),Hh,qh,jh,T_=X(()=>{be(),Ie(),Ce(),Hh=(t,e,r,n,a)=>{let i=he("output_data",a,r.length,4),s=j("a_data",e[1].dataType,e[1].dims.length,4),o=j("b_data",e[2].dataType,e[2].dims.length,4),d=j("c_data",e[0].dataType,e[0].dims.length,4),l,h=(m,g,c)=>`select(${g}, ${m}, ${c})`;if(!n)l=i.setByOffset("global_idx",h(s.getByOffset("global_idx"),o.getByOffset("global_idx"),d.getByOffset("global_idx")));else{let m=(g,c,w="")=>{let v=`a_data[index_a${c}][component_a${c}]`,S=`b_data[index_b${c}][component_b${c}]`,E=`bool(c_data[index_c${c}] & (0xffu << (component_c${c} * 8)))`;return`
            let output_indices${c} = ${i.offsetToIndices(`global_idx * 4u + ${c}u`)};
            let offset_a${c} = ${s.broadcastedIndicesToOffset(`output_indices${c}`,i)};
            let offset_b${c} = ${o.broadcastedIndicesToOffset(`output_indices${c}`,i)};
            let offset_c${c} = ${d.broadcastedIndicesToOffset(`output_indices${c}`,i)};
            let index_a${c} = offset_a${c} / 4u;
            let index_b${c} = offset_b${c} / 4u;
            let index_c${c} = offset_c${c} / 4u;
            let component_a${c} = offset_a${c} % 4u;
            let component_b${c} = offset_b${c} % 4u;
            let component_c${c} = offset_c${c} % 4u;
            ${g}[${c}] = ${w}(${h(v,S,E)});
          `};a===9?l=`
            var data = vec4<u32>(0);
            ${m("data",0,"u32")}
            ${m("data",1,"u32")}
            ${m("data",2,"u32")}
            ${m("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${m("output_data[global_idx]",0)}
            ${m("output_data[global_idx]",1)}
            ${m("output_data[global_idx]",2)}
            ${m("output_data[global_idx]",3)}
          `}return`
        ${t.registerUniform("vec_size","u32").declareVariables(d,s,o,i)}
        ${t.mainStart()}
        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},qh=t=>{let e=t[1].dims,r=t[2].dims,n=t[0].dims,a=t[1].dataType,i=!(H.areEqual(e,r)&&H.areEqual(r,n)),s=e,o=H.size(e);if(i){let l=Jr.calcShape(Jr.calcShape(e,r,!1),n,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,o=H.size(s)}let d=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>Hh(l,t,s,i,a),getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:d},...ge(n,e,r,s)]})}},jh=t=>{t.compute(qh(t.inputs))}}),Kh,I_=X(()=>{X0(),sd(),Q0(),J0(),Z0(),e_(),Zl(),kc(),i_(),s_(),o_(),u_(),l_(),d_(),c_(),p_(),h_(),f_(),m_(),vc(),g_(),__(),y_(),w_(),b_(),Ss(),v_(),$_(),x_(),S_(),k_(),E_(),C_(),Mn(),As(),T_(),Kh=new Map([["Abs",[md]],["Acos",[gd]],["Acosh",[_d]],["Add",[tc]],["ArgMax",[jl,Es]],["ArgMin",[ql,Es]],["Asin",[yd]],["Asinh",[wd]],["Atan",[bd]],["Atanh",[vd]],["Attention",[id]],["AveragePool",[Gp,Vp]],["BatchNormalization",[dd]],["BiasAdd",[hd]],["BiasSplitGelu",[Jd]],["Cast",[xd,$d]],["Ceil",[Ed]],["Clip",[kd]],["Concat",[Ql,Jl]],["Conv",[Us,Ls]],["ConvTranspose",[Dc,Mc]],["Cos",[Cd]],["Cosh",[Td]],["CumSum",[Fc,Lc]],["DepthToSpace",[Gc,Hc]],["Div",[rc]],["Einsum",[Qc,Jc]],["Elu",[Id,Ha]],["Equal",[nc]],["Erf",[Ad]],["Exp",[Od]],["Expand",[rp]],["FastGelu",[ap]],["Floor",[Md]],["FusedConv",[Us,Ls]],["Gather",[up,op]],["GatherElements",[pp,cp]],["Gelu",[zd]],["Gemm",[gp,mp]],["GlobalAveragePool",[qp,Hp]],["GlobalMaxPool",[Xp,Yp]],["Greater",[oc]],["GreaterOrEqual",[lc]],["HardSigmoid",[Ud,Ld]],["InstanceNormalization",[bp]],["LayerNormalization",[xp]],["LeakyRelu",[Rd,Ha]],["Less",[uc]],["LessOrEqual",[dc]],["Log",[Yd]],["MatMul",[bc]],["MatMulNBits",[Ep,Cp]],["MaxPool",[jp,Kp]],["Mul",[ac]],["MultiHeadAttention",[Op,Ip]],["Neg",[Bd]],["Not",[Pd]],["Pad",[Lp]],["Pow",[ic]],["Range",[Zp]],["Reciprocal",[Dd]],["ReduceMin",[Ul]],["ReduceMean",[Bl]],["ReduceMax",[Ll]],["ReduceSum",[Vl]],["ReduceProd",[Wl]],["ReduceL1",[Dl]],["ReduceL2",[Nl]],["ReduceLogSum",[Hl]],["ReduceLogSumExp",[Fl]],["ReduceSumSquare",[Gl]],["Relu",[Nd]],["Resize",[gh,_h]],["RotaryEmbedding",[bh]],["Sigmoid",[Fd]],["Sin",[Wd]],["Sinh",[Vd]],["Slice",[Th,Ih]],["SkipLayerNormalization",[xh]],["Split",[Fh,Lh]],["Sqrt",[Gd]],["Softmax",[Mh,zh]],["Sub",[sc]],["Tan",[Hd]],["Tanh",[qd]],["ThresholdedRelu",[Kd,Ha]],["Tile",[Gh]],["Transpose",[nl,al]],["Where",[jh]]])}),Yh,A_=X(()=>{Wt(),Or(),Ce(),Yh=class{constructor(t){this.backend=t,this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,e){this.repo.set(t,e)}run(t,e,r,n,a){Ut(t.programInfo.name);let i=this.backend.device,s=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let o=[];for(let l of e)o.push({binding:o.length,resource:{buffer:l.buffer}});for(let l of r)o.push({binding:o.length,resource:{buffer:l.buffer}});a&&o.push({binding:o.length,resource:a});let d=i.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:o,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let l={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:d,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(l)}s.setPipeline(t.computePipeline),s.setBindGroup(0,d),s.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Rt(t.programInfo.name)}dispose(){}build(t,e){Ut(t.name);let r=this.backend.device,n=[];r.features.has("shader-f16")&&n.push("enable f16;");let a=Zu(e,this.backend.device.limits),i=t.getShaderSource(a),s=`${n.join(`
`)}
${a.additionalImplementations}
${i}`,o=r.createShaderModule({code:s,label:t.name});Xe("verbose",()=>`[WebGPU] ${t.name} shader code: ${s}`);let d=r.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:t.name});return Rt(t.name),{programInfo:t,computePipeline:d,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(t){let e=typeof t=="number"?t:t.x,r=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(e<=a&&r<=a&&n<=a)return[e,r,n];let i=e*r*n,s=Math.ceil(Math.sqrt(i));if(s>a){if(s=Math.ceil(Math.cbrt(i)),s>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[s,s,s]}else return[s,s,1]}}}),Xh,Qh,Jh,Zh,O_=X(()=>{Wt(),be(),Or(),j0(),K0(),I_(),A_(),Xh=(t,e)=>{if(e.length!==t.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${t.length}.`);let r=[];for(let n=0;n<t.length;++n){let a=t[n].dataType;switch(e[n]){case"none":{r.push("");break}case"type":{r.push(`${a}`);break}case"rank":{let i=t[n].dims.length;r.push(`${a};${i}`);break}case"dims":{let i=t[n].dims.join(",");r.push(`${a};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[n]}`)}}return r.join("|")},Qh=(t,e,r)=>{let n=t.name;return t.shaderCache?.hint&&(n+="["+t.shaderCache.hint+"]"),n+=":"+r+`:${Xh(e,t.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,n},Jh=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Zh=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,e){this.env=t;let r=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:e.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:e.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:e.limits.maxStorageBufferBindingSize,maxBufferSize:e.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:e.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:e.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:e.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:e.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r};e.features.has("chromium-experimental-timestamp-query-inside-passes")?r.push("chromium-experimental-timestamp-query-inside-passes"):e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("shader-f16")&&r.push("shader-f16"),this.device=await e.requestDevice(n),this.adapterInfo=new Jh(await e.requestAdapterInfo()),this.gpuDataManager=Ku(this),this.programManager=new Yh(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Wu(t.logLevel,!!t.debug),this.device.onuncapturederror=a=>{a.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${a.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:e,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),e={};this.queryType==="at-passes"&&(e.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(e)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ut(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let e=new BigUint64Array(t.getMappedRange()),r=this.pendingQueries.get(t);for(let n=0;n<e.length/2;n++){let a=r[n],i=a.kernelId,s=this.kernels.get(i),o=s.kernelType,d=s.kernelName,l=a.programName,h=a.inputTensorViews,m=a.outputTensorViews,g=e[n*2],c=e[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let w=Number(g-this.queryTimeBase),v=Number(c-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(v))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:h.map(S=>({dims:S.dims,dataType:Ar(S.dataType)})),outputsMetadata:m.map(S=>({dims:S.dims,dataType:Ar(S.dataType)})),kernelId:i,kernelType:o,kernelName:d,programName:l,startTime:w,endTime:v});else{let S="";h.forEach((x,I)=>{S+=`input[${I}]: [${x.dims}] | ${Ar(x.dataType)}, `});let E="";m.forEach((x,I)=>{E+=`output[${I}]: [${x.dims}] | ${Ar(x.dataType)}, `}),console.log(`[profiling] kernel "${i}|${o}|${d}|${l}" ${S}${E}execution time: ${v-w} ns`)}Cn("GPU",`${l}::${g}::${c}`)}t.unmap(),this.pendingQueries.delete(t)}),Rt()}run(t,e,r,n,a,i){Ut(t.name);let s=[];for(let x=0;x<e.length;++x){let I=e[x].data;if(I===0)continue;let T=this.gpuDataManager.get(I);if(!T)throw new Error(`no GPU data for input: ${I}`);s.push(T)}let{outputs:o,dispatchGroup:d,programUniforms:l}=t.getRunData(e),h=r.length===0?o.map((x,I)=>I):r;if(h.length!==o.length)throw new Error(`Output size ${h.length} must be equal to ${o.length}.`);let m=[],g=[];for(let x=0;x<o.length;++x){if(!Number.isInteger(h[x])||h[x]<-3||h[x]>=i)throw new Error(`Invalid output index: ${h[x]}`);if(h[x]===-3)continue;let I=h[x]===-1,T=h[x]===-2,M=I||T?a(o[x].dataType,o[x].dims):n(h[x],o[x].dataType,o[x].dims);if(m.push(M),M.data===0)continue;let U=this.gpuDataManager.get(M.data);if(!U)throw new Error(`no GPU data for output: ${M.data}`);if(I&&this.temporaryData.push(U),T){let B=this.kernelPersistentData.get(this.currentKernelId);B||(B=[],this.kernelPersistentData.set(this.currentKernelId,B)),B.push(U)}g.push(U)}if(s.length!==e.length||g.length!==m.length){if(g.length===0)return Rt(t.name),m;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let c;if(l){let x=0,I=[];l.forEach(B=>{let D=typeof B.data=="number"?[B.data]:B.data;if(D.length===0)return;let Q=B.type===10?2:4,J,se;B.type===10?(se=D.length>4?16:D.length>2?8:D.length*Q,J=D.length>4?16:Q*D.length):(se=D.length<=2?D.length*Q:16,J=16),x=Math.ceil(x/se)*se,I.push(x);let ae=B.type===10?8:4;x+=D.length>4?Math.ceil(D.length/ae)*J:D.length*Q});let T=16;x=Math.ceil(x/T)*T;let M=new ArrayBuffer(x);l.forEach((B,D)=>{let Q=I[D],J=typeof B.data=="number"?[B.data]:B.data;if(B.type===6)new Int32Array(M,Q,J.length).set(J);else if(B.type===12)new Uint32Array(M,Q,J.length).set(J);else if(B.type===10)new Uint16Array(M,Q,J.length).set(J);else if(B.type===1)new Float32Array(M,Q,J.length).set(J);else throw new Error(`Unsupported uniform type: ${Ar(B.type)}`)});let U=this.gpuDataManager.create(x,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(U.buffer,0,M,0,x),this.gpuDataManager.release(U.id),c={offset:0,size:x,buffer:U.buffer}}let w=this.programManager.normalizeDispatchGroupSize(d),v=w[1]===1&&w[2]===1,S=Qh(t,e,v),E=this.programManager.getArtifact(S);if(E||(E=this.programManager.build(t,w),this.programManager.setArtifact(S,E),Xe("info",()=>`[artifact] key: ${S}, programName: ${t.name}`)),l&&E.uniformVariablesInfo){if(l.length!==E.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${E.uniformVariablesInfo.length}, got ${l.length} in program "${E.programInfo.name}".`);for(let x=0;x<l.length;x++){let I=l[x],T=I.type,M=typeof I.data=="number"?1:I.data.length,[U,B]=E.uniformVariablesInfo[x];if(T!==U||M!==B)throw new Error(`Uniform variable ${x} mismatch: expect type ${U} with size ${B}, got type ${T} with size ${M} in program "${E.programInfo.name}".`)}}if(Xe("info",()=>`[ProgramManager] run "${t.name}" (key=${S}) with ${w[0]}x${w[1]}x${w[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let x={kernelId:this.currentKernelId,programName:E.programInfo.name,inputTensorViews:e,outputTensorViews:m};this.pendingKernels.push(x),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(x)}return this.programManager.run(E,s,g,w,c),Rt(t.name),m}upload(t,e){this.gpuDataManager.upload(t,e)}memcpy(t,e){this.gpuDataManager.memcpy(t,e)}async download(t,e){await this.gpuDataManager.download(t,e)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,e,r,n){let a=Kh.get(t);if(!a)throw new Error(`kernel not implemented: ${t}`);let i={kernelType:t,kernelName:n,kernelEntry:a[0],attributes:[a[1],r]};this.kernels.set(e,i)}releaseKernel(t){let e=this.kernelPersistentData.get(t);if(e){for(let r of e)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,e,r){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let a=n.kernelType,i=n.kernelName,s=n.kernelEntry,o=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${a}] ${i}" is not allowed to be called recursively`);this.currentKernelId=t,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Xe("info",()=>`[WebGPU] Start to run kernel "[${a}] ${i}"...`);let d=this.env.debug;this.temporaryData=[];try{return d&&this.device.pushErrorScope("validation"),s(e,o[1]),0}catch(l){return r.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${i}" failed. ${l}`)),1}finally{d&&r.push(this.device.popErrorScope().then(l=>l?`GPU validation error for kernel "[${a}] ${i}": ${l.message}`:null));for(let l of this.temporaryData)this.gpuDataManager.release(l.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,e,r,n){let a=this.sessionExternalDataMapping.get(t);a||(a=new Map,this.sessionExternalDataMapping.set(t,a));let i=a.get(e),s=this.gpuDataManager.registerExternalBuffer(r,n,i?.[1]);return a.set(e,[s,r]),s}unregisterBuffers(t){let e=this.sessionExternalDataMapping.get(t);e&&(e.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let e=this.gpuDataManager.get(t);if(!e)throw new Error(`no GPU data for buffer: ${t}`);return e.buffer}createDownloader(t,e,r){return async()=>{let n=await ys(this,t,e);return Gu(n.buffer,r)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Xe("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Xe("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Xe("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),e=this.capturedPendingKernels.get(this.currentSessionId),r=t.length;this.pendingKernels=[];for(let n=0;n<r;n++){let a=this.getComputePassEncoder(),i=t[n];this.writeTimestamp(this.pendingDispatchNumber*2),a.setPipeline(i.computePipeline),a.setBindGroup(0,i.bindGroup),a.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(e[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}}),ef={};Qr(ef,{init:()=>rf});var ei,tf,rf,M_=X(()=>{be(),O_(),Or(),Ie(),ei=class r0{constructor(e,r,n,a){this.module=e,this.dataType=r,this.data=n,this.dims=a}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=H.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(H.size(e)!==H.size(this.dims))throw new Error("Invalid new shape");return new r0(this.module,this.dataType,this.data,e)}},tf=class{constructor(t,e,r){this.module=t,this.backend=e,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=e.adapterInfo;let n=t.HEAPU32,a=r>>>2;this.opKernelContext=n[a++];let i=n[a++];this.outputCount=n[a++],this.customDataOffset=n[a++],this.customDataSize=n[a++];let s=[];for(let o=0;o<i;o++){let d=n[a++],l=n[a++],h=n[a++],m=[];for(let g=0;g<h;g++)m.push(n[a++]);s.push(new ei(t,d,l,m))}this.inputs=s}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,e){let r=e?.inputs?.map(s=>typeof s=="number"?this.inputs[s]:s)??this.inputs,n=e?.outputs??[],a=(s,o,d)=>new ei(this.module,o,this.output(s,d),d),i=(s,o)=>{let d=An(s);if(!d)throw new Error(`Unsupported data type: ${s}`);let l=d*H.size(o),h=l>0?this.backend.gpuDataManager.create(l).id:0;return new ei(this.module,s,h,o)};return this.backend.run(t,r,n,a,i,this.outputCount)}output(t,e){let r=this.module.stackSave();try{let n=this.module.stackAlloc((1+e.length)*4),a=n>>2;this.module.HEAPU32[a++]=e.length;for(let i=0;i<e.length;i++)this.module.HEAPU32[a++]=e[i];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel's output[${t}] with dims [${e}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(r)}}},rf=async(t,e,r,n)=>{let a=e.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(t==="webgpu"){let i=new Zh;await i.initialize(r,n),a("webgpu",[i,s=>i.alloc(s),s=>i.free(s),(s,o,d,l=!1)=>{if(l)Xe("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${o}, size=${d}`),i.memcpy(s,o);else{Xe("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${o}, size=${d}`);let h=e.HEAPU8.subarray(s>>>0,(s>>>0)+d);i.upload(o,h)}},async(s,o,d)=>{Xe("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${o}, size=${d}`),await i.download(s,()=>e.HEAPU8.subarray(o>>>0,(o>>>0)+d))},(s,o,d)=>i.createKernel(s,o,d,e.UTF8ToString(e._JsepGetNodeName(o))),s=>i.releaseKernel(s),(s,o,d,l)=>{Xe("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${s}, contextDataOffset=${o}`);let h=new tf(e,i,o);return i.computeKernel(s,h,l)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else a("webnn")}}),nf,af,sf,yr,of,io,uf,lf,so,df,cf,pf,z_=X(()=>{H0(),q0(),be(),In(),ds(),Du(),nf=(t,e)=>{et()._OrtInit(t,e)!==0&&We("Can't initialize onnxruntime.")},af=async t=>{nf(t.wasm.numThreads,Pa(t.logLevel))},sf=async(t,e)=>{{let r=(M_(),Cr(ef)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=t.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let a=t.webgpu.powerPreference;if(a!==void 0&&a!=="low-power"&&a!=="high-performance")throw new Error(`Invalid powerPreference setting: "${a}"`);let i=t.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:a,forceFallbackAdapter:i}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!t.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",et(),t,n)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",et(),t)}}},yr=new Map,of=t=>{let e=et(),r=e.stackSave();try{let n=e.stackAlloc(8);return e._OrtGetInputOutputCount(t,n,n+4)!==0&&We("Can't get session input/output count."),[e.HEAP32[n/4],e.HEAP32[n/4+1]]}finally{e.stackRestore(r)}},io=t=>{let e=et(),r=e._malloc(t.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${t.byteLength}.`);return e.HEAPU8.set(t,r),[r,t.byteLength]},uf=async(t,e)=>{let r,n,a=et();Array.isArray(t)?[r,n]=t:t.buffer===a.HEAPU8.buffer?[r,n]=[t.byteOffset,t.byteLength]:[r,n]=io(t);let i=0,s=0,o=0,d=[],l=[],h=[];try{if([s,d]=Bu(e),e?.externalData&&a.mountExternalData){let x=[];for(let I of e.externalData){let T=typeof I=="string"?I:I.path;x.push(Ba(typeof I=="string"?I:I.data).then(M=>{a.mountExternalData(T,M)}))}await Promise.all(x)}i=await a._OrtCreateSession(r,n,s),i===0&&We("Can't create a session.");let[m,g]=of(i),c=!!e?.enableGraphCapture,w=[],v=[],S=[];for(let x=0;x<m;x++){let I=a._OrtGetInputName(i,x);I===0&&We("Can't get an input name."),l.push(I),w.push(a.UTF8ToString(I))}for(let x=0;x<g;x++){let I=a._OrtGetOutputName(i,x);I===0&&We("Can't get an output name."),h.push(I);let T=a.UTF8ToString(I);v.push(T);{if(c&&e?.preferredOutputLocation===void 0){S.push("gpu-buffer");continue}let M=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[T]??"cpu";if(M!=="cpu"&&M!=="cpu-pinned"&&M!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${M}.`);if(c&&M!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${M}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);S.push(M)}}let E=null;return S.some(x=>x==="gpu-buffer")&&(o=a._OrtCreateBinding(i),o===0&&We("Can't create IO binding."),E={handle:o,outputPreferredLocations:S,outputPreferredLocationsEncoded:S.map(x=>fs(x))}),yr.set(i,[i,l,h,E,c,!1]),[i,w,v]}catch(m){throw l.forEach(g=>a._OrtFree(g)),h.forEach(g=>a._OrtFree(g)),o!==0&&a._OrtReleaseBinding(o),i!==0&&a._OrtReleaseSession(i),m}finally{a._free(r),s!==0&&a._OrtReleaseSessionOptions(s),d.forEach(m=>a._free(m)),a.unmountExternalData?.()}},lf=t=>{let e=et(),r=yr.get(t);if(!r)throw new Error(`cannot release session. invalid session id: ${t}`);let[n,a,i,s,o]=r;s&&(o&&e._OrtClearBoundOutputs(s.handle),e._OrtReleaseBinding(s.handle)),e.jsepOnReleaseSession?.(t),a.forEach(d=>e._OrtFree(d)),i.forEach(d=>e._OrtFree(d)),e._OrtReleaseSession(n),yr.delete(t)},so=(t,e,r,n,a,i=!1)=>{if(!t){e.push(0);return}let s=et(),o=t[0],d=t[1],l=t[3],h,m;if(o==="string"&&l==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(i&&l!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(l==="gpu-buffer"){let w=t[2].gpuBuffer,v=An(cs(o));m=d.reduce((E,x)=>E*x,1)*v;let S=s.jsepRegisterBuffer;if(!S)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');h=S(n,a,w,m)}else{let w=t[2];if(Array.isArray(w)){m=4*w.length,h=s._malloc(m),r.push(h);let v=h/4;for(let S=0;S<w.length;S++){if(typeof w[S]!="string")throw new TypeError(`tensor data at index ${S} is not a string`);s.HEAPU32[v++]=Ye(w[S],r)}}else m=w.byteLength,h=s._malloc(m),r.push(h),s.HEAPU8.set(new Uint8Array(w.buffer,w.byteOffset,m),h)}let g=s.stackSave(),c=s.stackAlloc(4*d.length);try{let w=c/4;d.forEach(S=>s.HEAP32[w++]=S);let v=s._OrtCreateTensor(cs(o),h,m,c,d.length,fs(l));v===0&&We(`Can't create tensor for input/output. session=${n}, index=${a}.`),e.push(v)}finally{s.stackRestore(g)}},df=async(t,e,r,n,a,i)=>{let s=et(),o=yr.get(t);if(!o)throw new Error(`cannot run inference. invalid session id: ${t}`);let d=o[0],l=o[1],h=o[2],m=o[3],g=o[4],c=o[5],w=e.length,v=n.length,S=0,E=[],x=[],I=[],T=[],M=s.stackSave(),U=s.stackAlloc(w*4),B=s.stackAlloc(w*4),D=s.stackAlloc(v*4),Q=s.stackAlloc(v*4);try{[S,E]=Ou(i);for(let R=0;R<w;R++)so(r[R],x,T,t,e[R],g);for(let R=0;R<v;R++)so(a[R],I,T,t,w+n[R],g);let J=U/4,se=B/4,ae=D/4,ce=Q/4;for(let R=0;R<w;R++)s.HEAPU32[J++]=x[R],s.HEAPU32[se++]=l[e[R]];for(let R=0;R<v;R++)s.HEAPU32[ae++]=I[R],s.HEAPU32[ce++]=h[n[R]];if(m&&!c){let{handle:R,outputPreferredLocations:Z,outputPreferredLocationsEncoded:ve}=m;if(l.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model's input count (${l.length}).`);for(let te=0;te<w;te++){let oe=e[te];await s._OrtBindInput(R,l[oe],x[te])!==0&&We(`Can't bind input[${te}] for session=${t}.`)}for(let te=0;te<v;te++){let oe=n[te];a[te]?.[3]?s._OrtBindOutput(R,h[oe],I[te],0)!==0&&We(`Can't bind pre-allocated output[${te}] for session=${t}.`):s._OrtBindOutput(R,h[oe],0,ve[oe])!==0&&We(`Can't bind output[${te}] to ${Z[te]} for session=${t}.`)}yr.set(t,[d,l,h,m,g,!0])}s.jsepOnRunStart?.(d);let ue;m?ue=await s._OrtRunWithBinding(d,m.handle,v,D,S):ue=await s._OrtRun(d,B,U,w,Q,v,D,S),ue!==0&&We("failed to call OrtRun().");let A=[];for(let R=0;R<v;R++){let Z=s.HEAPU32[D/4+R];if(Z===I[R]){A.push(a[R]);continue}let ve=s.stackSave(),te=s.stackAlloc(4*4),oe=!1,V,re=0;try{s._OrtGetTensorData(Z,te,te+4,te+8,te+12)!==0&&We(`Can't access output tensor data on index ${R}.`);let fe=te/4,ze=s.HEAPU32[fe++];re=s.HEAPU32[fe++];let Ue=s.HEAPU32[fe++],it=s.HEAPU32[fe++],pt=[];for(let Ke=0;Ke<it;Ke++)pt.push(s.HEAPU32[Ue/4+Ke]);s._OrtFree(Ue);let Je=pt.reduce((Ke,He)=>Ke*He,1);V=Ar(ze);let ar=m?.outputPreferredLocations[n[R]];if(V==="string"){if(ar==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ke=[],He=re/4;for(let Nt=0;Nt<Je;Nt++){let Wr=s.HEAPU32[He++],yt=Nt===Je-1?void 0:s.HEAPU32[He]-Wr;Ke.push(s.UTF8ToString(Wr,yt))}A.push([V,pt,Ke,"cpu"])}else if(ar==="gpu-buffer"&&Je>0){let Ke=s.jsepGetBuffer;if(!Ke)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let He=Ke(re),Nt=An(ze);if(Nt===void 0||!hs(V))throw new Error(`Unsupported data type: ${V}`);oe=!0,A.push([V,pt,{gpuBuffer:He,download:s.jsepCreateDownloader(He,Je*Nt,V),dispose:()=>{s._OrtReleaseTensor(Z)}},"gpu-buffer"])}else{let Ke=ps(V),He=new Ke(Je);new Uint8Array(He.buffer,He.byteOffset,He.byteLength).set(s.HEAPU8.subarray(re,re+He.byteLength)),A.push([V,pt,He,"cpu"])}}finally{s.stackRestore(ve),V==="string"&&re&&s._free(re),oe||s._OrtReleaseTensor(Z)}}return m&&!g&&(s._OrtClearBoundOutputs(m.handle),yr.set(t,[d,l,h,m,g,!1])),A}finally{s.stackRestore(M),x.forEach(J=>s._OrtReleaseTensor(J)),I.forEach(J=>s._OrtReleaseTensor(J)),T.forEach(J=>s._free(J)),S!==0&&s._OrtReleaseRunOptions(S),E.forEach(J=>s._free(J))}},cf=t=>{let e=et(),r=yr.get(t);if(!r)throw new Error("invalid session id");let n=r[0],a=e._OrtEndProfiling(n);a===0&&We("Can't get an profile file name."),e._OrtFree(a)},pf=t=>{let e=[];for(let r of t){let n=r[2];!Array.isArray(n)&&"buffer"in n&&e.push(n.buffer)}return e}}),R_=Xr((t,e)=>{e.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let H=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=H?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let H=T.errors;if(0<H.length){let q=await Promise.all(H);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,H)=>g.registerBuffer($,T,B,H),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,A;if(w){var I=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),I.readFileSync(s,m?void 0:"utf8")),A=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),I.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(A=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,L,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,L=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),Be;if(Be="ort-wasm-simd.wasm",!xe(Be)){var Ge=Be;Be=r.locateFile?r.locateFile(Ge,_):_+Ge}function Ut(s){if(A)return A(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Ut(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ut(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=Be;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Rt={824920:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825421:()=>{r.qb()},825452:()=>{r.rb()},825481:()=>{r.vb()},825506:s=>r.pb(s),825539:s=>r.tb(s),825571:(s,m,g)=>{r.lb(s,m,g,!0)},825610:(s,m,g)=>{r.lb(s,m,g)},825643:s=>{r.Ra("Abs",s,void 0)},825694:s=>{r.Ra("Neg",s,void 0)},825745:s=>{r.Ra("Floor",s,void 0)},825798:s=>{r.Ra("Ceil",s,void 0)},825850:s=>{r.Ra("Reciprocal",s,void 0)},825908:s=>{r.Ra("Sqrt",s,void 0)},825960:s=>{r.Ra("Exp",s,void 0)},826011:s=>{r.Ra("Erf",s,void 0)},826062:s=>{r.Ra("Sigmoid",s,void 0)},826117:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826196:s=>{r.Ra("Log",s,void 0)},826247:s=>{r.Ra("Sin",s,void 0)},826298:s=>{r.Ra("Cos",s,void 0)},826349:s=>{r.Ra("Tan",s,void 0)},826400:s=>{r.Ra("Asin",s,void 0)},826452:s=>{r.Ra("Acos",s,void 0)},826504:s=>{r.Ra("Atan",s,void 0)},826556:s=>{r.Ra("Sinh",s,void 0)},826608:s=>{r.Ra("Cosh",s,void 0)},826660:s=>{r.Ra("Asinh",s,void 0)},826713:s=>{r.Ra("Acosh",s,void 0)},826766:s=>{r.Ra("Atanh",s,void 0)},826819:s=>{r.Ra("Tanh",s,void 0)},826871:s=>{r.Ra("Not",s,void 0)},826922:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},826991:s=>{r.Ra("Clip",s,void 0)},827043:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827101:s=>{r.Ra("Relu",s,void 0)},827153:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827217:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827287:(s,m)=>{r.Ra("Cast",s,{to:m})},827345:s=>{r.Ra("Add",s,void 0)},827396:s=>{r.Ra("Sub",s,void 0)},827447:s=>{r.Ra("Mul",s,void 0)},827498:s=>{r.Ra("Div",s,void 0)},827549:s=>{r.Ra("Pow",s,void 0)},827600:s=>{r.Ra("Equal",s,void 0)},827653:s=>{r.Ra("Greater",s,void 0)},827708:s=>{r.Ra("GreaterOrEqual",s,void 0)},827770:s=>{r.Ra("Less",s,void 0)},827822:s=>{r.Ra("LessOrEqual",s,void 0)},827881:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828040:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828198:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828356:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828515:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828673:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828830:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828987:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829148:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829312:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829476:s=>{r.Ra("Where",s,void 0)},829529:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829637:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829770:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829903:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830304:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830869:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831270:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831835:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831926:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832210:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832301:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832585:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832672:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832952:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833039:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833319:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833423:s=>{r.Ra("MatMul",s,void 0)},833477:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833585:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833693:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833756:(s,m)=>{r.Ra("Concat",s,{axis:m})},833816:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833956:s=>{r.Ra("Expand",s,void 0)},834010:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834081:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834160:(s,m,g,$,T,B,H,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834506:(s,m,g,$,T,B,H)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,H>>>0)):[]})},834722:s=>{r.Ra("Tile",s,void 0)},834774:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834885:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},834999:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835113:s=>{r.Ra("Range",s,void 0)},835166:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835247:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835374:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835543:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835712:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835809:(s,m,g,$,T,B,H,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:H?Array.from(W.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!te})},836081:s=>{r.Ra("BiasAdd",s,void 0)},836136:s=>{r.Ra("BiasSplitGelu",s,void 0)},836197:s=>{r.Ra("FastGelu",s,void 0)},836253:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836623:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,H],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837014:s=>{r.Ra("Gelu",s,void 0)},837066:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837193:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837352:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837491:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837593:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837695:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837806:s=>{r.ub(s)},837840:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Vt{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var H=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|H:(T&7)<<18|B<<12|H<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Wt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;m[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;m[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;m[g++>>>0]=224|H>>12}else{if(g+3>=$)break;m[g++>>>0]=240|H>>18,m[g++>>>0]=128|H>>12&63}m[g++>>>0]=128|H>>6&63}m[g++>>>0]=128|H&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var H=s.charCodeAt(++T);B=65536+((B&1023)<<10)|H&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{L=L=s=L,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Bt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Nt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Bt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var H=pr;H&&(pr=null,($?H.reject:H.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Bt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Wt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function H(D,be){function Ie(Mt){return 0>Mt?-1:0<Mt?1:0}var zt;return(zt=Ie(D.getFullYear()-be.getFullYear()))===0&&(zt=Ie(D.getMonth()-be.getMonth()))===0&&(zt=Ie(D.getDate()-be.getDate())),zt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),zt=(Je(D.getFullYear())?an:zr)[Ie];if(be>zt-D.getDate())be-=zt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=H(be,D)?0>=H(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"	","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Vt(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var H=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:H,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(H=je(H,te-H),X===void 0)var X=H;else X+=String.fromCharCode(0),X+=H;H=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var H=g&&B?Wt(T):T.length,q=Nt(4+H+1),te=q+4;if(se[q>>>2>>>0]=H,g&&B)at(T,K,te,H+1);else if(B)for(B=0;B<H;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<H;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},x:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,H=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,H=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||H(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Nt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},w:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,A:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)H.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&H==$):0<g!=(H==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?H:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),H=new Date(T,6,1);T=B.getTimezoneOffset();var q=H.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),H=s(H),q<T?(at(B,K,g,17),at(H,K,$,17)):(at(B,K,$,17),at(H,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var H=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[H+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,H,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,H,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,H,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Nt=r._malloc=s=>(Nt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837952,r.___stop_em_js=838113;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Wt;var Dt;G=function s(){Dt||Vr(),Dt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Dt||(Dt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Ut}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),A="./this.program",I=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function L(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Wt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Wt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(A=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),I=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,Be,Ge,Ut;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Ut=new Float64Array(n),d.HEAP64=Be=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Rt=[],qt=[],Vt=0,sr=null,jt=null;function xr(){if(Vt--,Vt==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Wt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=L(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Wt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Wt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(Be[k+2*V]=1n,Be[k+2*V+1]=F):(Be[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),I(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Vt++,Fn(()=>xr())})}function lr(){var n=L("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Bt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>Be[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||I(1,l)}}catch(l){l instanceof st||l=="unwind"||I(1,l)}};function Nt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Nt;var rt=()=>{var n=pn();n&&(Nt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),At(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Dt.push(f);try{return b(...C)}finally{me||(Dt.pop(),ct&&vt===1&&Dt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Dt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Dt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=H()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),At(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function zt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var Mt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?Be[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:A||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(Mt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(Mt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"	","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&Mt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&Mt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,A:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return At(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Bt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw At(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(At,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){At(b)}})},z:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return At(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(At,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){At(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=Be[C+2*k]?Be[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Nt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},y:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,C:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=zt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(Mt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(Mt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Bt(k,f,17),Bt(V,b,17)):(Bt(k,b,17),Bt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,B:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Rt.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Vt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),At=d._free=n=>(At=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Bt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Vt))if(O)y(d),O||Yt(Rt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Vt||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Rt),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Gt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Gt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Ht,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Ht=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Lt=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Lt();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,It,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},It=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!It.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,De,et,Z,Me,$t,ir,_t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},De=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,$t=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,_t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",A=`${S}${e}_shape`,I=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(I,G,a)};\n    let rest${G} = current % ${fe(I,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(I,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,L=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let Be=a-1;Be>=0;Be--){let Ge=ne.indicesGet("outputIndices",Be+ne.rank-a);Ke.push(`${K(I,Be)} * (${Ge} % ${K(A,Be)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${A} = ${w.indices}(${r.join(",")});`,`const ${I} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:L,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:I,shape:A,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Tt=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,Wl,Tn,Po,Pt,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,kt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((A,I)=>{w||y.indexOf(I)>=0?a&&p.push(1):p.push(A)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:A=>{let I=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,L=0;R<d;R++)w||y.indexOf(R)>=0?(a&&L++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(I.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",L))};`),L++);return`\n\n        ${A.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${I.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Pt=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},kt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)S.registerUniform(`sizeInConcatAxis${A}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let A=v+S,I=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:A,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=De(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],A=I=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),L=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${I.registerUniforms(L).declareVariables(...P,O)}\n  ${I.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:A}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(A).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],A=a?[a,r]:[r],I=y?e.compute(En(A,2,S,r.dataType),{inputs:A,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,I];p&&O.push(p);let R=e.compute(rc(e,t,I,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let L=[R,P];e.compute(nc(e,R,P,h,_),{inputs:L,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),A=U("weight",p[1].dataType,p[1].dims),I=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,A,I,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),A=j("y",e[0].dataType,d,a),I=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${A.indicesSet("outputIndices","0","0")}\n            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,A)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${A.offsetToIndices(`global_idx * ${a}`)};\n    ${I()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${A.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=De(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,Ot,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),A=U("bData",h,r.length,4),I;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?I=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):I=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else I=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,L=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,L)});\n          `};d===9?I=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:I=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,A,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${I}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=It.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,A=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,I=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(A),w.push(I);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||A||I)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},Ot=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{Ot(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{Ot(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{Ot(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{Ot(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ot(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{Ot(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{Ot(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{Ot(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{Ot(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{Ot(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var St,xt,Ct,Bn,Ft=Y(()=>{"use strict";ye();Se();St=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},xt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ct=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],A=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${A}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=De(o[0].type.tensor),A=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},I=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${A()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${I()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],A=[8,8,1],I=[Math.ceil(_/A[0]/S[0]),Math.ceil(y/A[1]/S[1]),Math.ceil(d/A[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,L=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];xt(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(L));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=De(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,L.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ct(t,ie);let ue=De(Ae.type.tensor),le=St(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,A,We,Ce):Lr(S,A,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",I=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${I} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${I} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${I} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),L=e?tt(c,h):tt(a,h),N=St(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${L} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=I[1]*x[1],R=I[0]*x[0],L=Math.max(I[0]*P,I[1]),N=o%O===0,K=i%R===0,Q=u%L===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];xt(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ct(t,ee);let ae=v?4:1,Ae=De(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,I,Ae,void 0,!p,L):Lr(x,I,Ae,void 0,!p,L,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${L}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];xt(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),A=De(S.type.tensor),I=St(t,S.type.value,A),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ct(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${I}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];xt(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=De(v.type.tensor),A=St(t,v.type.value,S),I=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[I,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ct(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${I.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${I.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${I.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${A}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),I=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];xt(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(I));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),L=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,I.length,d),K=De(N.type.tensor),Q=St(t,N.type.value,K),he=[R,L],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ct(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${L.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(L,ee)}\n    let b_offset = ${L.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=It.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let L=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,L),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],L,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;L=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else L=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(L),Q.push(N)}else L=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(L);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let A=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,A),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=St(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(I[0]*P,I[1]),R=v?4:1,L=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[L[0]+(t.dilations[0]<=1?0:(L[0]-1)*(t.dilations[0]-1)),L[1]+(t.dilations[1]<=1?0:(L[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:L},{type:6,data:K}];xt(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:L.length},{name:"pads",type:"i32",length:K.length}];Ct(t,me);let ie=De(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,I,ie,void 0,!p,O):Lr(x,I,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${I};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Lt();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),A=U("Dy",t[0].dataType,t[0].dims.length,v),I=[A,S];o&&I.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${A.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...I,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,A=e[1].dims,I=A[0]/S,x=A[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:I},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let L=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=De(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,L,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let A=e[S],I=y?A*a[v]:h[v],x=Tc(A,a[v],u[v],t[S],r[v],I);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(A-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let I=[t[0],A],x=t.length===3;x&&(!i&&t[2].dims.length===1?I.push(t[2].reshape([t[2].dims[0],1,1])):I.push(t[2])),e.compute(ou(I,o,u,w,_,v,x,S),{inputs:I})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),A=I=>`\n  ${I.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:I=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:I[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:A}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],A=[],I=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let L=r.rhs.symbolToIndices.get(R)?.[0];L!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",L))}`)})}})}else r.lhs.forEach((L,N)=>{if(O.inputIndices.includes(N)){let K=L.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),A.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),I.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...A,...S,w,...x,v,...I];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,A="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${A}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),A=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},I;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${A(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;I=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else I=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${A("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${I}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:I=>`\n      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${I.mainStart()}\n      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),A=U("b",e[1].dataType,e[1].dims),I=S.type.value,x=null,E=[S,A];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${I}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${I}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),A=U("bias",e[2].dataType,e[2].dims),I=j("output",e[0].dataType,h.length,c),x=[v,S,A,I],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${_t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${_t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${I.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,L)=>`${d}(${R}, ${L})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],A=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],I=R=>{let L=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(L)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:A}),getShaderSource:I},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let L=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${L.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=De(t[0].dataType),A=p===1?"vec2f":`mat2x${p}f`,I=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],A=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let I=r>1,x=r>2,E=O=>{let R=De(e[0].dataType),L=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&L.push(U("bias",a.dataType,a.dims,v)),L.push(j("output",e[0].dataType,c,v)),I&&L.push(j("mean_data_output",1,_)),x&&L.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...L)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${$t("f32",v)};\n    var mean_square_vector = ${$t("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${_t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${_t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${L[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return I&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:A}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),A=Me(t.k),I=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,L=d.concat([c,h]),N=M.size(L)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/A],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/I),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,A),ae=U("b",12,he.length,I),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=De(e[0].dataType),ne=(()=>{switch(A){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${A}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${I}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${I}; i++) {\n            let b_value: u32 = ${I===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(Be,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>A===1?`${ne}(${Array.from({length:8},(Be,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/A}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/A},(Be,Ge)=>`${A===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/A};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/A};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${le.type.indices};\n            ${le.indicesSet("output_indices","0","batch")};\n            ${le.indicesSet("output_indices",ue-1,"col")};\n            ${le.indicesSet("output_indices",ue-2,"0")};\n            var output_offset = ${le.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${c}u; m++) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${A};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:L,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,A=0,I=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==I)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==I)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],A=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==I)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==I)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,L=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:I,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:L,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],A=t.pads[t.pads.length-2];w=!!(S+A),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:A}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",A="",I="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,I=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${A}\n              ${S}\n              ${I}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,A=i.pads.length,I="";return h?I=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:I=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",A)};\n                  ${I}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:A=>Xu(A,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=A=>{let I=A===w?"row":"col";return`\n      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",A)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[A]},\n        ${o[A]}, ${r[A]}, ${u[A]}, ${u[A]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[A]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${I}: ${v} = originalIdx + ${v}(i);\n          if (${I} < 0 || ${I} >= ${r[A]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${I} = max(0, min(${I}, ${r[A]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",A,`u32(${I})`)};\n          data[i + 1] = ${A===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,A=y.type.value,I=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,A)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,A)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=A=>{let I=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${A.declareVariables(I,x,E,P,O)}\n\n        ${A.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${I.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${I.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${I.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${I.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",I.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,A=Me(h),I=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],x=P=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],R=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&R.push(U("beta",e[3].dataType,e[3].dims,A)),w&&R.push(U("bias",e[4].dataType,e[4].dims,A)),R.push(j("output",e[0].dataType,c,A)),_&&R.push(j("mean_output",1,d)),v&&R.push(j("inv_std_output",1,d)),S&&R.push(j("input_skip_bias_sum",e[0].dataType,c,A));let L=De(e[0].dataType);return`\n\n      ${P.registerUniforms(O).declareVariables(...R)}\n\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${$t("f32",A)};\n        var squareSum = ${$t("f32",A)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[i]":L+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(L,A,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${_t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${_t("squareSum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${L}(mean)`}) * ${L}(inv_std_dev) * gamma[i] ${y?"+ beta[i]":""};\n        }\n      }`},E=[{dims:c,dataType:e[0].dataType}];return r>1&&E.push({dims:d,dataType:1}),r>2&&E.push({dims:d,dataType:1}),r>3&&E.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((P,O)=>"type")},getShaderSource:x,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(p/h/64)},programUniforms:I})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((I,x)=>_d(I,x,r,i,u)),c=t.ends.map((I,x)=>_d(I,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let I=0;I<r.length;++I)i.includes(I)||(a.splice(I,0,0),c.splice(I,0,r[I]),u.splice(I,0,1));let p=u.map(I=>Math.sign(I));u.forEach((I,x,E)=>{if(I<0){let P=(c[x]-a[x])/I,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-I}});let h=r.slice(0);i.forEach((I,x)=>{h[I]=Math.ceil((c[I]-a[I])/u[I])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],A=I=>`\n      ${I.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(A,I)=>I===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:I===2?`max(${A}.x, ${A}.y)`:I===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=De(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=A=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${A.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${A.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${_t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,I=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,A,I)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=It.calcShape(It.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Lt();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ht(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Ht(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Lt();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),A=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),outputsMetadata:w.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:A});else{let I="";y.forEach((E,P)=>{I+=`input[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${I}${x}execution time: ${A-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Ht()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let L=this.gpuDataManager.get(R.data);if(!L)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(L),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(L)}_.push(L)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Ht(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Gt(N.type)}`)});let L=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(L.buffer,0,R,0,E),this.gpuDataManager.release(L.id),v={offset:0,size:E,buffer:L.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),A=S[1]===1&&S[2]===1,I=nm(t,r,A),x=this.programManager.getArtifact(I);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(I,x),Ve("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[L,N]=x.uniformVariablesInfo[E];if(O!==L||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${L} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Ht(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Lt();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(A,I)=>{if(i&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(h)return h;let x=c??I;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return I+A}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}v(S).then(A=>{yn=!1,ho=!0,fo=A,w()},A=>{yn=!1,Ui=!0,_(A)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],A=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){A.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);A.push(O)}}let I=null;return A.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),I={handle:c,outputPreferredLocations:A,outputPreferredLocationsEncoded:A.map(x=>yo(x))}),ar.set(u,[u,h,d,I,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((I,x)=>I*x,1)*S;let A=a.jsepRegisterBuffer;if(!A)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=A(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let A=0;A<v.length;A++){if(typeof v[A]!="string")throw new TypeError(`tensor data at index ${A} is not a string`);a.HEAPU32[S++]=Fe(v[A],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(A=>a.HEAP32[v++]=A);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,A=0,I=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),L=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[A,I]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=L/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,A):Ce=await a._OrtRun(p,L,R,v,K,S,N,A),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],Be=[];for(let Ne=0;Ne<Ke;Ne++)Be.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=Be.reduce((Ne,Ye)=>Ne*Ye,1);ue=Gt(ne);let Ut=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Rt=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Rt;Ne.push(a.UTF8ToString(Rt,qt))}We.push([ue,Be,Ne,"cpu"])}else if(Ut==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,Be,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,Be,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),A!==0&&a._OrtReleaseRunOptions(A),I.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'}),wr,Pt,tn,Bn,Dn,oo,ti,Br,Dr,hf,Nn,ff,mf,gf,_f,yf,wf,bf,vf=X(()=>{Wt(),z_(),In(),wr=()=>!!Fe.wasm.proxy&&typeof document<"u",tn=!1,Bn=!1,Dn=!1,ti=new Map,Br=(t,e)=>{let r=ti.get(t);r?r.push(e):ti.set(t,[e])},Dr=()=>{if(tn||!Bn||Dn||!Pt)throw new Error("worker not ready")},hf=t=>{switch(t.data.type){case"init-wasm":tn=!1,t.data.err?(Dn=!0,oo[1](t.data.err)):(Bn=!0,oo[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=ti.get(t.data.type);t.data.err?e.shift()[1](t.data.err):e.shift()[0](t.data.out);break}}},Nn=typeof document<"u"?document?.currentScript?.src:void 0,ff=async()=>{if(!Bn){if(tn)throw new Error("multiple calls to 'initWasm()' detected.");if(Dn)throw new Error("previous call to 'initWasm()' failed.");if(tn=!0,wr())return Fe.wasm.wasmPaths===void 0&&Nn&&Nn.indexOf("blob:")!==0&&(Fe.wasm.wasmPaths=Nn.substr(0,+Nn.lastIndexOf("/")+1)),new Promise((t,e)=>{Pt?.terminate();let r=URL.createObjectURL(new Blob([R_()],{type:"text/javascript"}));Pt=new Worker(r,{name:"ort-wasm-proxy-worker"}),Pt.onerror=a=>e(a),Pt.onmessage=hf,URL.revokeObjectURL(r),oo=[t,e];let n={type:"init-wasm",in:Fe};Pt.postMessage(n)});try{await Au(Fe.wasm),await af(Fe),Bn=!0}catch(t){throw Dn=!0,t}finally{tn=!1}}},mf=async t=>{if(wr())return Dr(),new Promise((e,r)=>{Br("init-ep",[e,r]);let n={type:"init-ep",in:{epName:t,env:Fe}};Pt.postMessage(n)});await sf(Fe,t)},gf=async t=>wr()?(Dr(),new Promise((e,r)=>{Br("copy-from",[e,r]);let n={type:"copy-from",in:{buffer:t}};Pt.postMessage(n,[t.buffer])})):io(t),_f=async(t,e)=>{if(wr()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Dr(),new Promise((r,n)=>{Br("create",[r,n]);let a={type:"create",in:{model:t,options:{...e}}},i=[];t instanceof Uint8Array&&i.push(t.buffer),Pt.postMessage(a,i)})}else return uf(t,e)},yf=async t=>{if(wr())return Dr(),new Promise((e,r)=>{Br("release",[e,r]);let n={type:"release",in:t};Pt.postMessage(n)});lf(t)},wf=async(t,e,r,n,a,i)=>{if(wr()){if(r.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(a.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return Dr(),new Promise((s,o)=>{Br("run",[s,o]);let d=r,l={type:"run",in:{sessionId:t,inputIndices:e,inputs:d,outputIndices:n,options:i}};Pt.postMessage(l,pf(d))})}else return df(t,e,r,n,a,i)},bf=async t=>{if(wr())return Dr(),new Promise((e,r)=>{Br("end-profiling",[e,r]);let n={type:"end-profiling",in:t};Pt.postMessage(n)});cf(t)}}),uo,$f,xf,P_=X(()=>{Wt(),vf(),be(),Du(),uo=(t,e)=>{switch(t.location){case"cpu":return[t.type,t.dims,t.data,"cpu"];case"gpu-buffer":return[t.type,t.dims,{gpuBuffer:t.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${t.location} for ${e()}`)}},$f=t=>{switch(t[3]){case"cpu":return new ft(t[0],t[2],t[1]);case"gpu-buffer":{let e=t[0];if(!hs(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:r,download:n,dispose:a}=t[2];return ft.fromGpuBuffer(r,{dataType:e,dims:t[1],download:n,dispose:a})}default:throw new Error(`invalid data location: ${t[3]}`)}},xf=class{async fetchModelAndCopyToWasmMemory(t){return gf(await Ba(t))}async loadModel(t,e){Ut();let r;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?r=await Ba(t):r=await this.fetchModelAndCopyToWasmMemory(t):r=t,[this.sessionId,this.inputNames,this.outputNames]=await _f(r,e),Rt()}async dispose(){return yf(this.sessionId)}async run(t,e,r){Ut();let n=[],a=[];Object.entries(t).forEach(m=>{let g=m[0],c=m[1],w=this.inputNames.indexOf(g);if(w===-1)throw new Error(`invalid input '${g}'`);n.push(c),a.push(w)});let i=[],s=[];Object.entries(e).forEach(m=>{let g=m[0],c=m[1],w=this.outputNames.indexOf(g);if(w===-1)throw new Error(`invalid output '${g}'`);i.push(c),s.push(w)});let o=n.map((m,g)=>uo(m,()=>`input "${this.inputNames[a[g]]}"`)),d=i.map((m,g)=>m?uo(m,()=>`output "${this.outputNames[s[g]]}"`):null),l=await wf(this.sessionId,a,o,s,d,r),h={};for(let m=0;m<l.length;m++)h[this.outputNames[s[m]]]=i[m]??$f(l[m]);return Rt(),h}startProfiling(){}endProfiling(){bf(this.sessionId)}}}),Sf,kf,B_=X(()=>{Wt(),vf(),P_(),Sf=()=>{if((typeof Fe.wasm.initTimeout!="number"||Fe.wasm.initTimeout<0)&&(Fe.wasm.initTimeout=0),typeof Fe.wasm.simd!="boolean"&&(Fe.wasm.simd=!0),typeof Fe.wasm.proxy!="boolean"&&(Fe.wasm.proxy=!1),typeof Fe.wasm.trace!="boolean"&&(Fe.wasm.trace=!1),typeof Fe.wasm.numThreads!="number"||!Number.isInteger(Fe.wasm.numThreads)||Fe.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Fe.wasm.numThreads=1);let t=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Fe.wasm.numThreads=Math.min(4,Math.ceil((t||1)/2))}},kf=class{async init(t){Sf(),await ff(),await mf(t)}async createInferenceSessionHandler(t,e){let r=new xf;return await r.loadModel(t,e),Promise.resolve(r)}}}),Ef={};Qr(Ef,{wasmBackend:()=>Cf});var Cf,D_=X(()=>{B_(),Cf=new kf});Wt(),Wt(),Wt();var N_="1.18.0",F_=gu;{let t=(D_(),Cr(Ef)).wasmBackend;Tr("webgpu",t,5),Tr("webnn",t,5),Tr("cpu",t,10),Tr("wasm",t,10)}Object.defineProperty(Fe.versions,"web",{value:N_,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var L_=Object.freeze({__proto__:null,get InferenceSession(){return as},get TRACE(){return Cn},get TRACE_FUNC_BEGIN(){return Ut},get TRACE_FUNC_END(){return Rt},get Tensor(){return ft},get TrainingSession(){return is},default:F_,get env(){return Fe},get registerBackend(){return Tr}});const U_=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=t.dims[3],r.height=t.dims[2];const n=r.getContext("2d");if(n!=null){let a,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],i=t.dims[3]):(a=t.dims[3],i=t.dims[2]);const s=e?.format!==void 0?e.format:"RGB",o=e?.norm;let d,l;o===void 0||o.mean===void 0?d=[255,255,255,255]:typeof o.mean=="number"?d=[o.mean,o.mean,o.mean,o.mean]:(d=[o.mean[0],o.mean[1],o.mean[2],0],o.mean[3]!==void 0&&(d[3]=o.mean[3])),o===void 0||o.bias===void 0?l=[0,0,0,0]:typeof o.bias=="number"?l=[o.bias,o.bias,o.bias,o.bias]:(l=[o.bias[0],o.bias[1],o.bias[2],0],o.bias[3]!==void 0&&(l[3]=o.bias[3]));const h=i*a;let m=0,g=h,c=h*2,w=-1;s==="RGBA"?(m=0,g=h,c=h*2,w=h*3):s==="RGB"?(m=0,g=h,c=h*2):s==="RBG"&&(m=0,c=h,g=h*2);for(let v=0;v<i;v++)for(let S=0;S<a;S++){const E=(t.data[m++]-l[0])*d[0],x=(t.data[g++]-l[1])*d[1],I=(t.data[c++]-l[2])*d[2],T=w===-1?255:(t.data[w++]-l[3])*d[3];n.fillStyle="rgba("+E+","+x+","+I+","+T+")",n.fillRect(S,v,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},W_=(t,e)=>{const r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let n;if(r!=null){let a,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(a=t.dims[2],i=t.dims[1],s=t.dims[3]):(a=t.dims[3],i=t.dims[2],s=t.dims[1]);const o=e!==void 0&&e.format!==void 0?e.format:"RGB",d=e?.norm;let l,h;d===void 0||d.mean===void 0?l=[255,255,255,255]:typeof d.mean=="number"?l=[d.mean,d.mean,d.mean,d.mean]:(l=[d.mean[0],d.mean[1],d.mean[2],255],d.mean[3]!==void 0&&(l[3]=d.mean[3])),d===void 0||d.bias===void 0?h=[0,0,0,0]:typeof d.bias=="number"?h=[d.bias,d.bias,d.bias,d.bias]:(h=[d.bias[0],d.bias[1],d.bias[2],0],d.bias[3]!==void 0&&(h[3]=d.bias[3]));const m=i*a;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const g=4;let c=0,w=1,v=2,S=3,E=0,x=m,I=m*2,T=-1;o==="RGBA"?(E=0,x=m,I=m*2,T=m*3):o==="RGB"?(E=0,x=m,I=m*2):o==="RBG"&&(E=0,I=m,x=m*2),n=r.createImageData(a,i);for(let M=0;M<i*a;c+=g,w+=g,v+=g,S+=g,M++)n.data[c]=(t.data[E++]-h[0])*l[0],n.data[w]=(t.data[x++]-h[1])*l[1],n.data[v]=(t.data[I++]-h[2])*l[2],n.data[S]=T===-1?255:(t.data[T++]-h[3])*l[3]}else throw new Error("Can not access image data");return n},lo=(t,e)=>{if(t===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:r,width:n}=e,a=e.norm??{mean:255,bias:0};let i,s;typeof a.mean=="number"?i=[a.mean,a.mean,a.mean,a.mean]:i=[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],typeof a.bias=="number"?s=[a.bias,a.bias,a.bias,a.bias]:s=[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const o=e.format!==void 0?e.format:"RGBA",d=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=r*n,h=d==="RGBA"?new Float32Array(l*4):new Float32Array(l*3);let m=4,g=0,c=1,w=2,v=3,S=0,E=l,x=l*2,I=-1;o==="RGB"&&(m=3,g=0,c=1,w=2,v=-1),d==="RGBA"?I=l*3:d==="RBG"?(S=0,x=l,E=l*2):d==="BGR"&&(x=0,E=l,S=l*2);for(let M=0;M<l;M++,g+=m,w+=m,c+=m,v+=m)h[S++]=(t[g]+s[0])/i[0],h[E++]=(t[c]+s[1])/i[1],h[x++]=(t[w]+s[2])/i[2],I!==-1&&v!==-1&&(h[I++]=(t[v]+s[3])/i[3]);return d==="RGBA"?new er("float32",h,[1,4,r,n]):new er("float32",h,[1,3,r,n])},V_=async(t,e)=>{const r=typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement,n=typeof ImageData<"u"&&t instanceof ImageData,a=typeof ImageBitmap<"u"&&t instanceof ImageBitmap,i=typeof t=="string";let s,o=e??{};const d=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=h=>h instanceof HTMLCanvasElement||h instanceof OffscreenCanvas?h.getContext("2d"):null;if(r){const h=d();h.width=t.width,h.height=t.height;const m=l(h);if(m!=null){let g=t.height,c=t.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(g=e.resizedHeight,c=e.resizedWidth),e!==void 0){if(o=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=g,o.width=c}else o.tensorFormat="RGBA",o.height=g,o.width=c;m.drawImage(t,0,0),s=m.getImageData(0,0,c,g).data}else throw new Error("Can not access image data")}else if(n){let h,m;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(h=e.resizedHeight,m=e.resizedWidth):(h=t.height,m=t.width),e!==void 0&&(o=e),o.format="RGBA",o.height=h,o.width=m,e!==void 0){const g=d();g.width=m,g.height=h;const c=l(g);if(c!=null)c.putImageData(t,0,0),s=c.getImageData(0,0,m,h).data;else throw new Error("Can not access image data")}else s=t.data}else if(a){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");const h=d();h.width=t.width,h.height=t.height;const m=l(h);if(m!=null){const g=t.height,c=t.width;return m.drawImage(t,0,0,c,g),s=m.getImageData(0,0,c,g).data,o.height=g,o.width=c,lo(s,o)}else throw new Error("Can not access image data")}else{if(i)return new Promise((h,m)=>{const g=d(),c=l(g);if(!t||!c)return m();const w=new Image;w.crossOrigin="Anonymous",w.src=t,w.onload=()=>{g.width=w.width,g.height=w.height,c.drawImage(w,0,0,g.width,g.height);const v=c.getImageData(0,0,g.width,g.height);o.height=g.height,o.width=g.width,h(lo(v.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return lo(s,o);throw new Error("Input data provided is not supported - aborted tensor creation")},G_=(t,e)=>{const{width:r,height:n,download:a,dispose:i}=e,s=[1,n,r,4];return new er({location:"texture",type:"float32",texture:t,dims:s,download:a,dispose:i})},H_=(t,e)=>{const{dataType:r,dims:n,download:a,dispose:i}=e;return new er({location:"gpu-buffer",type:r??"float32",gpuBuffer:t,dims:n,download:a,dispose:i})},q_=(t,e,r)=>new er({location:"cpu-pinned",type:t,data:e,dims:r??[e.length]}),rn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),ri=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Tf=!1;const j_=()=>{if(!Tf){Tf=!0;const t=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;t&&(rn.set("int64",BigInt64Array),ri.set(BigInt64Array,"int64")),e&&(rn.set("uint64",BigUint64Array),ri.set(BigUint64Array,"uint64")),r?(rn.set("float16",Float16Array),ri.set(Float16Array,"float16")):rn.set("float16",Uint16Array)}},K_=t=>{let e=1;for(let r=0;r<t.length;r++){const n=t[r];if(typeof n!="number"||!Number.isSafeInteger(n))throw new TypeError(`dims[${r}] must be an integer, got: ${n}`);if(n<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${n}`);e*=n}return e},Y_=(t,e)=>{switch(t.location){case"cpu":return new er(t.type,t.data,e);case"cpu-pinned":return new er({location:"cpu-pinned",data:t.data,type:t.type,dims:e});case"texture":return new er({location:"texture",texture:t.texture,type:t.type,dims:e});case"gpu-buffer":return new er({location:"gpu-buffer",gpuBuffer:t.gpuBuffer,type:t.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${t.location} is not supported`)}};let er=class{constructor(e,r,n){j_();let a,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,a=e.type,i=e.dims,e.location){case"cpu-pinned":{const o=rn.get(a);if(!o)throw new TypeError(`unsupported type "${a}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(a!=="float32")throw new TypeError(`unsupported type "${a}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(a!=="float32"&&a!=="float16"&&a!=="int32"&&a!=="int64"&&a!=="uint32"&&a!=="uint8"&&a!=="bool")throw new TypeError(`unsupported type "${a}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,d;if(typeof e=="string")if(a=e,d=n,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{const l=rn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?o=l.from(r,BigInt):o=l.from(r)}else if(r instanceof l)o=r;else throw new TypeError(`A ${a} tensor's data must be type of ${l}`)}else if(d=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const l=typeof e[0];if(l==="string")a="string",o=e;else if(l==="boolean")a="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{const l=ri.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);a=l,o=e}if(d===void 0)d=[o.length];else if(!Array.isArray(d))throw new TypeError("A tensor's dims must be a number array");i=d,this.cpuData=o,this.dataLocation="cpu"}const s=K_(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=a,this.dims=i,this.size=s}static async fromImage(e,r){return V_(e,r)}static fromTexture(e,r){return G_(e,r)}static fromGpuBuffer(e,r){return H_(e,r)}static fromPinnedBuffer(e,r,n){return q_(e,r,n)}toDataURL(e){return U_(this,e)}toImageData(e){return W_(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Y_(this,e)}};const X_=er,Fn=[];let co,Ln;Sr.IS_NODE_ENV?(Ln=Ze??n0,Fn.push("cpu"),co=["cpu"]):(Ln=L_,Sr.IS_WEBGPU_AVAILABLE&&Fn.push("webgpu"),Fn.push("wasm"),co=["wasm"]);const Q_=Ln.InferenceSession;function J_(t){let e=co;if(t){if(!Fn.includes(t))throw new Error(`Unsupported device: "${t}". Should be one of: ${Fn.join(", ")}.`);e=[t]}return e}async function If(t,e){return await Q_.create(t,e)}function Af(t){return t instanceof Ln.Tensor}const Nr=Ln?.env;Nr?.wasm&&(Nr.wasm.wasmPaths="https://cdn.jsdelivr.net/npm/onnxruntime-web@1.18.0/dist/",Nr.wasm.proxy=!Sr.IS_WEBWORKER_ENV,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(Nr.wasm.numThreads=1),typeof navigator<"u"&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(Nr.wasm.simd=!1));function Z_(){return Nr?.wasm?.proxy}lt.backends.onnx=Nr;const nn=async(t,e,r)=>{const n=await If(new Uint8Array(t),e);return async a=>{const i=Object.fromEntries(Object.entries(a).map(([o,d])=>[o,d.ort_tensor])),s=await n.run(i);return Array.isArray(r)?r.map(o=>new Se(s[o])):new Se(s[r])}};class ey{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=nn([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=nn([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=nn([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=nn([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=nn([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=nn([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}const Of=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class Se{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return Af(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new X_(e[0],e[1],e[2]),new Proxy(this,{get:(r,n)=>{if(typeof n=="string"){let a=Number(n);if(Number.isInteger(a))return r._getitem(a)}return r[n]},set:(r,n,a)=>r[n]=a})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...r]=this.dims;if(r.length>0){const n=r.reduce((a,i)=>a*i);for(let a=0;a<e;++a)yield this._subarray(a,n,r)}else yield*this.data}_getitem(e){const[r,...n]=this.dims;if(e=tr(e,r),n.length>0){const a=n.reduce((i,s)=>i*s);return this._subarray(e,a,n)}else return new Se(this.type,[this.data[e]],n)}indexOf(e){const r=this.data;for(let n=0;n<r.length;++n)if(r[n]==e)return n;return-1}_subarray(e,r,n){const a=e*r,i=(e+1)*r,s="subarray"in this.data?this.data.subarray(a,i):this.data.slice(a,i);return new Se(this.type,s,n)}item(){const e=this.data;if(e.length!==1)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return ty(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=1/(1+Math.exp(-e[r]));return this}mul(e){return this.clone().mul_(e)}mul_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const r=this.data;for(let n=0;n<r.length;++n)r[n]+=e;return this}clone(){return new Se(this.type,this.data.slice(),this.dims.slice())}slice(...e){let r=[],n=[];for(let l=0;l<this.dims.length;++l){let h=e[l];if(h==null)n.push([0,this.dims[l]]),r.push(this.dims[l]);else if(typeof h=="number")h=tr(h,this.dims[l],l),n.push([h,h+1]);else if(Array.isArray(h)&&h.length===2){let[m,g]=h;if(m=m===null?0:tr(m,this.dims[l],l,!1),g=g===null?this.dims[l]:tr(g,this.dims[l],l,!1),m>g)throw new Error(`Invalid slice: ${h}`);let c=[Math.max(m,0),Math.min(g,this.dims[l])];n.push(c),r.push(c[1]-c[0])}else throw new Error(`Invalid slice: ${h}`)}let a=n.map(([l,h])=>h-l),i=a.reduce((l,h)=>l*h);const s=this.data;let o=new s.constructor(i);const d=this.stride();for(let l=0;l<i;++l){let h=0;for(let m=a.length-1,g=l;m>=0;--m){const c=a[m];h+=(g%c+n[m][0])*d[m],g=Math.floor(g/c)}o[l]=s[h]}return new Se(this.type,o,r)}permute(...e){return ry(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,r=!1){return this.norm(1,e,r)}norm(e="fro",r=null,n=!1){if(e==="fro")e=2;else if(typeof e=="string")throw Error(`Unsupported norm: ${e}`);const a=this.data;if(r===null){let o=a.reduce((d,l)=>d+l**e,0)**(1/e);return new Se(this.type,[o],[])}r=tr(r,this.dims.length);const i=this.dims.slice();i[r]=1;const s=new a.constructor(a.length/this.dims[r]);for(let o=0;o<a.length;++o){let d=0;for(let l=this.dims.length-1,h=o,m=1;l>=0;--l){const g=this.dims[l];if(l!==r){const c=h%g;d+=c*m,m*=i[l]}h=Math.floor(h/g)}s[d]+=a[o]**e}if(e!==1)for(let o=0;o<s.length;++o)s[o]=s[o]**(1/e);return n||i.splice(r,1),new Se(this.type,s,i)}normalize_(e=2,r=1){r=tr(r,this.dims.length);const n=this.norm(e,r,!0),a=this.data;for(let i=0;i<a.length;++i){let s=0;for(let o=this.dims.length-1,d=i,l=1;o>=0;--o){const h=this.dims[o];if(o!==r){const m=d%h;s+=m*l,l*=this.dims[o]}d=Math.floor(d/h)}a[i]/=n.data[s]}return this}normalize(e=2,r=1){return this.clone().normalize_(e,r)}stride(){return iy(this.dims)}squeeze(e=null){return new Se(this.type,this.data,zf(this.dims,e))}squeeze_(e=null){return this.dims=zf(this.dims,e),this}unsqueeze(e=null){return new Se(this.type,this.data,Rf(this.dims,e))}unsqueeze_(e=null){return this.dims=Rf(this.dims,e),this}flatten_(e=0,r=-1){r=(r+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),a=this.dims.slice(e,r+1),i=this.dims.slice(r+1);return this.dims=[...n,a.reduce((s,o)=>s*o,1),...i],this}flatten(e=0,r=-1){return this.clone().flatten_(e,r)}view(...e){let r=-1;for(let n=0;n<e.length;++n)if(e[n]===-1){if(r!==-1)throw new Error("Only one dimension can be inferred");r=n}if(r!==-1){const n=e.reduce((a,i,s)=>s!==r?a*i:a,1);e[r]=this.data.length/n}return new Se(this.type,this.data,e)}neg_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=-e[r];return this}neg(){return this.clone().neg_()}clamp_(e,r){const n=this.data;for(let a=0;a<n.length;++a)n[a]=Math.min(Math.max(n[a],e),r);return this}clamp(e,r){return this.clone().clamp_(e,r)}round_(){const e=this.data;for(let r=0;r<e.length;++r)e[r]=Math.round(e[r]);return this}round(){return this.clone().round_()}mean(e=null,r=!1){return ho(this,e,r)}to(e){if(this.type===e)return this;if(!Of.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new Se(e,Of[e].from(this.data),this.dims)}}function ty(t,e){const r=t.length,n=e.reduce((i,s)=>i*s);if(r!==n)throw Error(`cannot reshape array of size ${r} into shape (${e})`);let a=t;for(let i=e.length-1;i>=0;i--)a=a.reduce((s,o)=>{let d=s[s.length-1];return d.length<e[i]?d.push(o):s.push([o]),s},[[]]);return a[0]}function ry(t,e){const[r,n]=g0(t.data,t.dims,e);return new Se(t.type,r,n)}async function Mf(t,e){const r=await ey.top_k;return e===null?e=t.dims.at(-1):e=Math.min(e,t.dims.at(-1)),await r({x:t,k:new Se("int64",[BigInt(e)],[1])})}function zf(t,e){return t=t.slice(),e===null?t=t.filter(r=>r!==1):typeof e=="number"?t[e]===1&&t.splice(e,1):Array.isArray(e)&&(t=t.filter((r,n)=>r!==1||!e.includes(n))),t}function Rf(t,e){return e=tr(e,t.length+1),t=t.slice(),t.splice(e,0,1),t}function tr(t,e,r=null,n=!0){if(n&&(t<-e||t>=e))throw new Error(`IndexError: index ${t} is out of bounds for dimension${r===null?"":" "+r} with size ${e}`);return t<0&&(t=(t%e+e)%e),t}function lr(t,e=0){e=tr(e,t[0].dims.length);const r=t[0].dims.slice();r[e]=t.reduce((s,o)=>s+o.dims[e],0);const n=r.reduce((s,o)=>s*o,1),a=new t[0].data.constructor(n),i=t[0].type;if(e===0){let s=0;for(let o of t)a.set(o.data,s),s+=o.data.length}else{let s=0;for(let o=0;o<t.length;++o){let d=t[o];for(let l=0;l<d.data.length;++l){let h=0;for(let m=d.dims.length-1,g=l,c=1;m>=0;--m){const w=d.dims[m];let v=g%w;m===e&&(v+=s),h+=v*c,c*=r[m],g=Math.floor(g/w)}a[h]=d.data[l]}s+=d.dims[e]}}return new Se(i,a,r)}function po(t,e=0){return lr(t.map(r=>r.unsqueeze(e)),e)}function ny(t,e=null,r=1,n=!1){if(e===null){const l=t.data.reduce((c,w)=>c+w,0)/t.data.length,h=Math.sqrt(t.data.reduce((c,w)=>c+(w-l)**2,0)/(t.data.length-r)),m=new Se(t.type,[l],[]);return[new Se(t.type,[h],[]),m]}e=tr(e,t.dims.length);const a=ho(t,e,n),i=t.dims.slice();i[e]=1;const s=new t.data.constructor(t.data.length/t.dims[e]);for(let d=0;d<t.data.length;++d){let l=0;for(let h=t.dims.length-1,m=d,g=1;h>=0;--h){const c=t.dims[h];if(h!==e){const w=m%c;l+=w*g,g*=i[h]}m=Math.floor(m/c)}s[l]+=(t.data[d]-a.data[l])**2}for(let d=0;d<s.length;++d)s[d]=Math.sqrt(s[d]/(t.dims[e]-r));return n||i.splice(e,1),[new Se(t.type,s,i),a]}function ho(t,e=null,r=!1){if(e===null){let i=t.data.reduce((s,o)=>s+o,0);return new Se(t.type,[i/t.data.length],[])}e=tr(e,t.dims.length);const n=t.dims.slice();n[e]=1;const a=new t.data.constructor(t.data.length/t.dims[e]);for(let i=0;i<t.data.length;++i){let s=0;for(let o=t.dims.length-1,d=i,l=1;o>=0;--o){const h=t.dims[o];if(o!==e){const m=d%h;s+=m*l,l*=n[o]}d=Math.floor(d/h)}a[s]+=t.data[i]}if(t.dims[e]!==1)for(let i=0;i<a.length;++i)a[i]=a[i]/t.dims[e];return r||n.splice(e,1),new Se(t.type,a,n)}function ay(t){const[e,r]=t.dims,n=[e+1,r+1],a=new Se("float32",new Float32Array(n[0]*n[1]).fill(1/0),n),i=new Se("float32",new Float32Array(n[0]*n[1]).fill(-1),n);a[0].data[0]=0;for(let h=1;h<r+1;++h)for(let m=1;m<e+1;++m){const g=a[m-1][h-1].item(),c=a[m-1][h].item(),w=a[m][h-1].item();let v,S;g<c&&g<w?(v=g,S=0):c<g&&c<w?(v=c,S=1):(v=w,S=2),a[m].data[h]=t[m-1][h-1].item()+v,i[m].data[h]=S}let s=e,o=r;i.data.fill(2,0,n[1]);for(let h=0;h<n[0];++h)i[h].data[0]=1;let d=[],l=[];for(;s>0||o>0;)switch(d.push(s-1),l.push(o-1),i[s][o].item()){case 0:--s,--o;break;case 1:--s;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${s}, ${o}]. Please file a bug report.`)}return d.reverse(),l.reverse(),[d,l]}function iy(t){const e=new Array(t.length);for(let r=t.length-1,n=1;r>=0;--r)e[r]=n,n*=t[r];return e}function fo(t,e,r,n){const a=t.reduce((i,s)=>i*s,1);return new Se(r,new n(a).fill(e),t)}function sy(t,e){let r,n;return r="float32",n=Float32Array,fo(t,e,r,n)}function oy(t,e){return sy(t.dims,e)}function Un(t){return fo(t,1n,"int64",BigInt64Array)}function uy(t){return Un(t.dims)}function ly(t){return fo(t,0n,"int64",BigInt64Array)}function dy(t){return ly(t.dims)}class cy{constructor(e=(n,a)=>n>a,r=1/0){this._heap=[],this._comparator=e,this._maxSize=r}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const r of e)if(this.size<this._maxSize)this._heap.push(r),this._siftUp();else{const n=this._smallest();this._comparator(r,this._heap[n])&&(this._heap[n]=r,this._siftUpFrom(n))}return this.size}pop(){const e=this.peek(),r=this.size-1;return r>0&&this._swap(0,r),this._heap.pop(),this._siftDown(),e}replace(e){const r=this.peek();return this._heap[0]=e,this._siftDown(),r}_parent(e){return(e+1>>>1)-1}_left(e){return(e<<1)+1}_right(e){return e+1<<1}_greater(e,r){return this._comparator(this._heap[e],this._heap[r])}_swap(e,r){const n=this._heap[e];this._heap[e]=this._heap[r],this._heap[r]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const r=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,r),e=r}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class py{constructor(){this.root=ni.default()}extend(e){for(let r of e)this.push(r)}push(e){let r=this.root;for(let n of e){let a=r.children.get(n);a===void 0&&(a=ni.default(),r.children.set(n,a)),r=a}r.isLeaf=!0}*commonPrefixSearch(e){let r=this.root,n="";for(let a=0;a<e.length&&r!==void 0;++a){const i=e[a];n+=i,r=r.children.get(i),r!==void 0&&r.isLeaf&&(yield n)}}}class ni{constructor(e,r){this.isLeaf=e,this.children=r}static default(){return new ni(!1,new Map)}}class hy{constructor(e,r,n){this.sentence=e,this.len=e.length,this.bosTokenId=r,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const a=new Wn(this.bosTokenId,0,0,0,0),i=new Wn(this.eosTokenId,1,this.len,0,0);this.nodes.push(a.clone()),this.nodes.push(i.clone()),this.beginNodes[this.len].push(i),this.endNodes[0].push(a)}insert(e,r,n,a){const i=this.nodes.length,s=new Wn(a,i,e,r,n);this.beginNodes[e].push(s),this.endNodes[e+r].push(s),this.nodes.push(s)}viterbi(){const e=this.len;let r=0;for(;r<=e;){if(this.beginNodes[r].length==0)return[];for(let o of this.beginNodes[r]){o.prev=null;let d=0,l=null;for(let h of this.endNodes[r]){const m=h.backtraceScore+o.score;(l===null||m>d)&&(l=h.clone(),d=m)}if(l!==null)o.prev=l,o.backtraceScore=d;else return[]}++r}const n=[],i=this.beginNodes[e][0].prev;if(i===null)return[];let s=i.clone();for(;s.prev!==null;)n.push(s.clone()),s=s.clone().prev.clone();return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map(r=>this.piece(r))}tokenIds(){return this.viterbi().map(r=>r.tokenId)}}class Wn{constructor(e,r,n,a,i){this.tokenId=e,this.nodeId=r,this.pos=n,this.length=a,this.score=i,this.prev=null,this.backtraceScore=0}clone(){const e=new Wn(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var F=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),Pf=Object.freeze({set:F.Set,for:F.For,in:F.In,is:F.Is,if:F.If,else:F.Else,endif:F.EndIf,elif:F.ElseIf,endfor:F.EndFor,and:F.And,or:F.Or,not:F.Not,"not in":F.NotIn,true:F.BooleanLiteral,false:F.BooleanLiteral}),Fr=class{constructor(t,e){this.value=t,this.type=e}};function Bf(t){return/\w/.test(t)}function mo(t){return/[0-9]/.test(t)}var fy=[["{%",F.OpenStatement],["%}",F.CloseStatement],["{{",F.OpenExpression],["}}",F.CloseExpression],["(",F.OpenParen],[")",F.CloseParen],["{",F.OpenCurlyBracket],["}",F.CloseCurlyBracket],["[",F.OpenSquareBracket],["]",F.CloseSquareBracket],[",",F.Comma],[".",F.Dot],[":",F.Colon],["|",F.Pipe],["<=",F.ComparisonBinaryOperator],[">=",F.ComparisonBinaryOperator],["==",F.ComparisonBinaryOperator],["!=",F.ComparisonBinaryOperator],["<",F.ComparisonBinaryOperator],[">",F.ComparisonBinaryOperator],["+",F.AdditiveBinaryOperator],["-",F.AdditiveBinaryOperator],["*",F.MultiplicativeBinaryOperator],["/",F.MultiplicativeBinaryOperator],["%",F.MultiplicativeBinaryOperator],["=",F.Equals]],my=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function gy(t,e={}){return t.endsWith(`
`)&&(t=t.slice(0,-1)),t=t.replace(/{#.*?#}/gs,"{##}"),e.lstrip_blocks&&(t=t.replace(/^[ \t]*({[#%])/gm,"$1")),e.trim_blocks&&(t=t.replace(/([#%]})\n/g,"$1")),t.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function _y(t,e={}){const r=[],n=gy(t,e);let a=0;const i=s=>{let o="";for(;s(n[a]);){if(n[a]==="\\"){if(++a,a>=n.length)throw new SyntaxError("Unexpected end of input");const d=n[a++],l=my.get(d);if(l===void 0)throw new SyntaxError(`Unexpected escaped character: ${d}`);o+=l;continue}if(o+=n[a++],a>=n.length)throw new SyntaxError("Unexpected end of input")}return o};e:for(;a<n.length;){const s=r.at(-1)?.type;if(s===void 0||s===F.CloseStatement||s===F.CloseExpression){let d="";for(;a<n.length&&!(n[a]==="{"&&(n[a+1]==="%"||n[a+1]==="{"));)d+=n[a++];if(d.length>0){r.push(new Fr(d,F.Text));continue}}i(d=>/\s/.test(d));const o=n[a];if(o==="-"||o==="+"){const d=r.at(-1)?.type;if(d===F.Text||d===void 0)throw new SyntaxError(`Unexpected character: ${o}`);switch(d){case F.Identifier:case F.NumericLiteral:case F.BooleanLiteral:case F.StringLiteral:case F.CloseParen:case F.CloseSquareBracket:break;default:{++a;const l=i(mo);r.push(new Fr(`${o}${l}`,l.length>0?F.NumericLiteral:F.UnaryOperator));continue}}}for(const[d,l]of fy)if(n.slice(a,a+d.length)===d){r.push(new Fr(d,l)),a+=d.length;continue e}if(o==="'"||o==='"'){++a;const d=i(l=>l!==o);r.push(new Fr(d,F.StringLiteral)),++a;continue}if(mo(o)){const d=i(mo);r.push(new Fr(d,F.NumericLiteral));continue}if(Bf(o)){const d=i(Bf),l=Object.hasOwn(Pf,d)?Pf[d]:F.Identifier;l===F.In&&r.at(-1)?.type===F.Not?(r.pop(),r.push(new Fr("not in",F.NotIn))):r.push(new Fr(d,l));continue}throw new SyntaxError(`Unexpected character: ${o}`)}return r}var Vn=class{type="Statement"},yy=class extends Vn{constructor(t){super(),this.body=t}type="Program"},Df=class extends Vn{constructor(t,e,r){super(),this.test=t,this.body=e,this.alternate=r}type="If"},wy=class extends Vn{constructor(t,e,r){super(),this.loopvar=t,this.iterable=e,this.body=r}type="For"},by=class extends Vn{constructor(t,e){super(),this.assignee=t,this.value=e}type="Set"},rr=class extends Vn{type="Expression"},vy=class extends rr{constructor(t,e,r){super(),this.object=t,this.property=e,this.computed=r}type="MemberExpression"},$y=class extends rr{constructor(t,e){super(),this.callee=t,this.args=e}type="CallExpression"},an=class extends rr{constructor(t){super(),this.value=t}type="Identifier"},sn=class extends rr{constructor(t){super(),this.value=t}type="Literal"},xy=class extends sn{type="NumericLiteral"},Nf=class extends sn{type="StringLiteral"},Ff=class extends sn{type="BooleanLiteral"},Sy=class extends sn{type="ArrayLiteral"},Lf=class extends sn{type="TupleLiteral"},ky=class extends sn{type="ObjectLiteral"},Gn=class extends rr{constructor(t,e,r){super(),this.operator=t,this.left=e,this.right=r}type="BinaryExpression"},Ey=class extends rr{constructor(t,e){super(),this.operand=t,this.filter=e}type="FilterExpression"},Cy=class extends rr{constructor(t,e,r){super(),this.operand=t,this.negate=e,this.test=r}type="TestExpression"},Ty=class extends rr{constructor(t,e){super(),this.operator=t,this.argument=e}type="UnaryExpression"},Iy=class extends rr{constructor(t=void 0,e=void 0,r=void 0){super(),this.start=t,this.stop=e,this.step=r}type="SliceExpression"},Ay=class extends rr{constructor(t,e){super(),this.key=t,this.value=e}type="KeywordArgumentExpression"};function Oy(t){const e=new yy([]);let r=0;function n(A,R){const Z=t[r++];if(!Z||Z.type!==A)throw new Error(`Parser Error: ${R}. ${Z.type} !== ${A}.`);return Z}function a(){switch(t[r].type){case F.Text:return o();case F.OpenStatement:return d();case F.OpenExpression:return l();default:throw new SyntaxError(`Unexpected token type: ${t[r].type}`)}}function i(...A){return r+A.length<=t.length&&A.some((R,Z)=>R!==t[r+Z].type)}function s(...A){return r+A.length<=t.length&&A.every((R,Z)=>R===t[r+Z].type)}function o(){return new Nf(n(F.Text,"Expected text token").value)}function d(){n(F.OpenStatement,"Expected opening statement token");let A;switch(t[r].type){case F.Set:++r,A=h(),n(F.CloseStatement,"Expected closing statement token");break;case F.If:++r,A=m(),n(F.OpenStatement,"Expected {% token"),n(F.EndIf,"Expected endif token"),n(F.CloseStatement,"Expected %} token");break;case F.For:++r,A=c(),n(F.OpenStatement,"Expected {% token"),n(F.EndFor,"Expected endfor token"),n(F.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${t[r].type}`)}return A}function l(){n(F.OpenExpression,"Expected opening expression token");const A=w();return n(F.CloseExpression,"Expected closing expression token"),A}function h(){const A=w();if(s(F.Equals)){++r;const R=h();return new by(A,R)}return A}function m(){const A=w();n(F.CloseStatement,"Expected closing statement token");const R=[],Z=[];for(;!(t[r]?.type===F.OpenStatement&&(t[r+1]?.type===F.ElseIf||t[r+1]?.type===F.Else||t[r+1]?.type===F.EndIf));)R.push(a());if(t[r]?.type===F.OpenStatement&&t[r+1]?.type!==F.EndIf)if(++r,s(F.ElseIf))n(F.ElseIf,"Expected elseif token"),Z.push(m());else for(n(F.Else,"Expected else token"),n(F.CloseStatement,"Expected closing statement token");!(t[r]?.type===F.OpenStatement&&t[r+1]?.type===F.EndIf);)Z.push(a());return new Df(A,R,Z)}function g(A=!1){const R=A?ue:w,Z=[R()],ve=s(F.Comma);for(;ve&&(++r,Z.push(R()),!!s(F.Comma)););return ve?new Lf(Z):Z[0]}function c(){const A=g(!0);if(!(A instanceof an||A instanceof Lf))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${A.type} instead`);n(F.In,"Expected `in` keyword following loop variable");const R=w();n(F.CloseStatement,"Expected closing statement token");const Z=[];for(;i(F.OpenStatement,F.EndFor);)Z.push(a());return new wy(A,R,Z)}function w(){return v()}function v(){const A=S();if(s(F.If)){++r;const R=S();n(F.Else,"Expected else token");const Z=S();return new Df(R,[A],[Z])}return A}function S(){let A=E();for(;s(F.Or);){const R=t[r];++r;const Z=E();A=new Gn(R,A,Z)}return A}function E(){let A=x();for(;s(F.And);){const R=t[r];++r;const Z=x();A=new Gn(R,A,Z)}return A}function x(){let A;for(;s(F.Not);){const R=t[r];++r;const Z=x();A=new Ty(R,Z)}return A??I()}function I(){let A=T();for(;s(F.ComparisonBinaryOperator)||s(F.In)||s(F.NotIn);){const R=t[r];++r;const Z=T();A=new Gn(R,A,Z)}return A}function T(){let A=se();for(;s(F.AdditiveBinaryOperator);){const R=t[r];++r;const Z=se();A=new Gn(R,A,Z)}return A}function M(){const A=J();return s(F.OpenParen)?U(A):A}function U(A){let R=new $y(A,B());return s(F.OpenParen)&&(R=U(R)),R}function B(){n(F.OpenParen,"Expected opening parenthesis for arguments list");const A=D();return n(F.CloseParen,"Expected closing parenthesis for arguments list"),A}function D(){const A=[];for(;!s(F.CloseParen);){let R=w();if(s(F.Equals)){if(++r,!(R instanceof an))throw new SyntaxError("Expected identifier for keyword argument");const Z=w();R=new Ay(R,Z)}A.push(R),s(F.Comma)&&++r}return A}function Q(){const A=[];let R=!1;for(;!s(F.CloseSquareBracket);)s(F.Colon)?(A.push(void 0),++r,R=!0):(A.push(w()),s(F.Colon)&&(++r,R=!0));if(A.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(R){if(A.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new Iy(...A)}return A[0]}function J(){let A=ue();for(;s(F.Dot)||s(F.OpenSquareBracket);){const R=t[r];++r;let Z;const ve=R.type!==F.Dot;if(ve)Z=Q(),n(F.CloseSquareBracket,"Expected closing square bracket");else if(Z=ue(),Z.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");A=new vy(A,Z,ve)}return A}function se(){let A=ae();for(;s(F.MultiplicativeBinaryOperator);){const R=t[r];++r;const Z=ae();A=new Gn(R,A,Z)}return A}function ae(){let A=ce();for(;s(F.Is);){++r;const R=s(F.Not);R&&++r;let Z=ue();if(Z instanceof Ff&&(Z=new an(Z.value.toString())),!(Z instanceof an))throw new SyntaxError("Expected identifier for the test");A=new Cy(A,R,Z)}return A}function ce(){let A=M();for(;s(F.Pipe);){++r;let R=ue();if(!(R instanceof an))throw new SyntaxError("Expected identifier for the filter");s(F.OpenParen)&&(R=U(R)),A=new Ey(A,R)}return A}function ue(){const A=t[r];switch(A.type){case F.NumericLiteral:return++r,new xy(Number(A.value));case F.StringLiteral:return++r,new Nf(A.value);case F.BooleanLiteral:return++r,new Ff(A.value==="true");case F.Identifier:return++r,new an(A.value);case F.OpenParen:{++r;const R=g();if(t[r].type!==F.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${t[r].type} instead`);return++r,R}case F.OpenSquareBracket:{++r;const R=[];for(;!s(F.CloseSquareBracket);)R.push(w()),s(F.Comma)&&++r;return++r,new Sy(R)}case F.OpenCurlyBracket:{++r;const R=new Map;for(;!s(F.CloseCurlyBracket);){const Z=w();n(F.Colon,"Expected colon between key and value in object literal");const ve=w();R.set(Z,ve),s(F.Comma)&&++r}return++r,new ky(R)}default:throw new SyntaxError(`Unexpected token: ${A.type}`)}}for(;r<t.length;)e.body.push(a());return e}function My(t,e,r=1){e===void 0&&(e=t,t=0);const n=[];for(let a=t;a<e;a+=r)n.push(a);return n}function Uf(t,e,r,n=1){const a=Math.sign(n);a>=0?(e=(e??=0)<0?Math.max(t.length+e,0):Math.min(e,t.length),r=(r??=t.length)<0?Math.max(t.length+r,0):Math.min(r,t.length)):(e=(e??=t.length-1)<0?Math.max(t.length+e,-1):Math.min(e,t.length-1),r=(r??=-1)<-1?Math.max(t.length+r,-1):Math.min(r,t.length-1));const i=[];for(let s=e;a*s<a*r;s+=n)i.push(t[s]);return i}function Wf(t){return t.replace(/\b\w/g,e=>e.toUpperCase())}var dr=class{type="RuntimeValue";value;builtins=new Map;constructor(t=void 0){this.value=t}__bool__(){return new Qe(!!this.value)}},Ge=class extends dr{type="NumericValue"},Me=class extends dr{type="StringValue";builtins=new Map([["upper",new cr(()=>new Me(this.value.toUpperCase()))],["lower",new cr(()=>new Me(this.value.toLowerCase()))],["strip",new cr(()=>new Me(this.value.trim()))],["title",new cr(()=>new Me(Wf(this.value)))],["length",new Ge(this.value.length)]])},Qe=class extends dr{type="BooleanValue"},Kt=class extends dr{type="ObjectValue";__bool__(){return new Qe(this.value.size>0)}builtins=new Map([["get",new cr(([t,e])=>{if(!(t instanceof Me))throw new Error(`Object key must be a string: got ${t.type}`);return this.value.get(t.value)??e??new Hn})],["items",new cr(()=>new je(Array.from(this.value.entries()).map(([t,e])=>new je([new Me(t),e]))))]])},je=class extends dr{type="ArrayValue";builtins=new Map([["length",new Ge(this.value.length)]]);__bool__(){return new Qe(this.value.length>0)}},zy=class extends je{type="TupleValue"},cr=class extends dr{type="FunctionValue"},Hn=class extends dr{type="NullValue"},Yt=class extends dr{type="UndefinedValue"},go=class{constructor(t){this.parent=t}variables=new Map([["namespace",new cr(t=>{if(t.length===0)return new Kt(new Map);if(t.length!==1||!(t[0]instanceof Kt))throw new Error("`namespace` expects either zero arguments or a single object argument");return t[0]})]]);tests=new Map([["boolean",t=>t.type==="BooleanValue"],["callable",t=>t instanceof cr],["odd",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${t.type}`);return t.value%2!==0}],["even",t=>{if(t.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${t.type}`);return t.value%2===0}],["false",t=>t.type==="BooleanValue"&&!t.value],["true",t=>t.type==="BooleanValue"&&t.value],["number",t=>t.type==="NumericValue"],["integer",t=>t.type==="NumericValue"&&Number.isInteger(t.value)],["iterable",t=>t instanceof je||t instanceof Me],["lower",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toLowerCase()}],["upper",t=>{const e=t.value;return t.type==="StringValue"&&e===e.toUpperCase()}],["none",t=>t.type==="NullValue"],["defined",t=>t.type!=="UndefinedValue"],["undefined",t=>t.type==="UndefinedValue"],["equalto",(t,e)=>t.value===e.value]]);set(t,e){return this.declareVariable(t,ai(e))}declareVariable(t,e){if(this.variables.has(t))throw new SyntaxError(`Variable already declared: ${t}`);return this.variables.set(t,e),e}setVariable(t,e){return this.variables.set(t,e),e}resolve(t){if(this.variables.has(t))return this;if(this.parent)return this.parent.resolve(t);throw new Error(`Unknown variable: ${t}`)}lookupVariable(t){try{return this.resolve(t).variables.get(t)??new Yt}catch{return new Yt}}},Ry=class{global;constructor(t){this.global=t??new go}run(t){return this.evaluate(t,this.global)}evaluateBinaryExpression(t,e){const r=this.evaluate(t.left,e);switch(t.operator.value){case"and":return r.__bool__().value?this.evaluate(t.right,e):r;case"or":return r.__bool__().value?r:this.evaluate(t.right,e)}const n=this.evaluate(t.right,e);switch(t.operator.value){case"==":return new Qe(r.value==n.value);case"!=":return new Qe(r.value!=n.value)}if(r instanceof Yt||n instanceof Yt)throw new Error("Cannot perform operation on undefined values");if(r instanceof Hn||n instanceof Hn)throw new Error("Cannot perform operation on null values");if(r instanceof Ge&&n instanceof Ge)switch(t.operator.value){case"+":return new Ge(r.value+n.value);case"-":return new Ge(r.value-n.value);case"*":return new Ge(r.value*n.value);case"/":return new Ge(r.value/n.value);case"%":return new Ge(r.value%n.value);case"<":return new Qe(r.value<n.value);case">":return new Qe(r.value>n.value);case">=":return new Qe(r.value>=n.value);case"<=":return new Qe(r.value<=n.value)}else if(r instanceof je&&n instanceof je)switch(t.operator.value){case"+":return new je(r.value.concat(n.value))}else if(n instanceof je){const a=n.value.find(i=>i.value===r.value)!==void 0;switch(t.operator.value){case"in":return new Qe(a);case"not in":return new Qe(!a)}}if(r instanceof Me||n instanceof Me)switch(t.operator.value){case"+":return new Me(r.value.toString()+n.value.toString())}if(r instanceof Me&&n instanceof Me)switch(t.operator.value){case"in":return new Qe(n.value.includes(r.value));case"not in":return new Qe(!n.value.includes(r.value))}if(r instanceof Me&&n instanceof Kt)switch(t.operator.value){case"in":return new Qe(n.value.has(r.value));case"not in":return new Qe(!n.value.has(r.value))}throw new SyntaxError(`Unknown operator "${t.operator.value}" between ${r.type} and ${n.type}`)}evaluateFilterExpression(t,e){const r=this.evaluate(t.operand,e);if(t.filter.type==="Identifier"){const n=t.filter;if(r instanceof je)switch(n.value){case"list":return r;case"first":return r.value[0];case"last":return r.value[r.value.length-1];case"length":return new Ge(r.value.length);case"reverse":return new je(r.value.reverse());case"sort":return new je(r.value.sort((a,i)=>{if(a.type!==i.type)throw new Error(`Cannot compare different types: ${a.type} and ${i.type}`);switch(a.type){case"NumericValue":return a.value-i.value;case"StringValue":return a.value.localeCompare(i.value);default:throw new Error(`Cannot compare type: ${a.type}`)}}));default:throw new Error(`Unknown ArrayValue filter: ${n.value}`)}else if(r instanceof Me)switch(n.value){case"length":return new Ge(r.value.length);case"upper":return new Me(r.value.toUpperCase());case"lower":return new Me(r.value.toLowerCase());case"title":return new Me(Wf(r.value));case"capitalize":return new Me(r.value.charAt(0).toUpperCase()+r.value.slice(1));case"trim":return new Me(r.value.trim());default:throw new Error(`Unknown StringValue filter: ${n.value}`)}else if(r instanceof Ge)switch(n.value){case"abs":return new Ge(Math.abs(r.value));default:throw new Error(`Unknown NumericValue filter: ${n.value}`)}else if(r instanceof Kt)switch(n.value){case"items":return new je(Array.from(r.value.entries()).map(([a,i])=>new je([new Me(a),i])));case"length":return new Ge(r.value.size);default:throw new Error(`Unknown ObjectValue filter: ${n.value}`)}throw new Error(`Cannot apply filter "${n.value}" to type: ${r.type}`)}else if(t.filter.type==="CallExpression"){const n=t.filter;if(n.callee.type!=="Identifier")throw new Error(`Unknown filter: ${n.callee.type}`);const a=n.callee.value;if(r instanceof je){switch(a){case"selectattr":{if(r.value.some(h=>!(h instanceof Kt)))throw new Error("`selectattr` can only be applied to array of objects");if(n.args.some(h=>h.type!=="StringLiteral"))throw new Error("arguments of `selectattr` must be strings");const[i,s,o]=n.args.map(h=>this.evaluate(h,e));let d;if(s){const h=e.tests.get(s.value);if(!h)throw new Error(`Unknown test: ${s.value}`);d=h}else d=(...h)=>h[0].__bool__().value;const l=r.value.filter(h=>{const m=h.value.get(i.value);return m?d(m,o):!1});return new je(l)}}throw new Error(`Unknown ArrayValue filter: ${a}`)}else throw new Error(`Cannot apply filter "${a}" to type: ${r.type}`)}throw new Error(`Unknown filter: ${t.filter.type}`)}evaluateTestExpression(t,e){const r=this.evaluate(t.operand,e),n=e.tests.get(t.test.value);if(!n)throw new Error(`Unknown test: ${t.test.value}`);const a=n(r);return new Qe(t.negate?!a:a)}evaluateUnaryExpression(t,e){const r=this.evaluate(t.argument,e);switch(t.operator.value){case"not":return new Qe(!r.value);default:throw new SyntaxError(`Unknown operator: ${t.operator.value}`)}}evalProgram(t,e){return this.evaluateBlock(t.body,e)}evaluateBlock(t,e){let r="";for(const n of t){const a=this.evaluate(n,e);a.type!=="NullValue"&&a.type!=="UndefinedValue"&&(r+=a.value)}return new Me(r)}evaluateIdentifier(t,e){return e.lookupVariable(t.value)}evaluateCallExpression(t,e){const r=[],n=new Map;for(const i of t.args)if(i.type==="KeywordArgumentExpression"){const s=i;n.set(s.key.value,this.evaluate(s.value,e))}else r.push(this.evaluate(i,e));n.size>0&&r.push(new Kt(n));const a=this.evaluate(t.callee,e);if(a.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(r,e)}evaluateSliceExpression(t,e,r){if(!(t instanceof je||t instanceof Me))throw new Error("Slice object must be an array or string");const n=this.evaluate(e.start,r),a=this.evaluate(e.stop,r),i=this.evaluate(e.step,r);if(!(n instanceof Ge||n instanceof Yt))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof Ge||a instanceof Yt))throw new Error("Slice stop must be numeric or undefined");if(!(i instanceof Ge||i instanceof Yt))throw new Error("Slice step must be numeric or undefined");return t instanceof je?new je(Uf(t.value,n.value,a.value,i.value)):new Me(Uf(Array.from(t.value),n.value,a.value,i.value).join(""))}evaluateMemberExpression(t,e){const r=this.evaluate(t.object,e);let n;if(t.computed){if(t.property.type==="SliceExpression")return this.evaluateSliceExpression(r,t.property,e);n=this.evaluate(t.property,e)}else n=new Me(t.property.value);let a;if(r instanceof Kt){if(!(n instanceof Me))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.value.get(n.value)??r.builtins.get(n.value)}else if(r instanceof je||r instanceof Me)if(n instanceof Ge)a=r.value.at(n.value),r instanceof Me&&(a=new Me(r.value.at(n.value)));else if(n instanceof Me)a=r.builtins.get(n.value);else throw new Error(`Cannot access property with non-string/non-number: got ${n.type}`);else{if(!(n instanceof Me))throw new Error(`Cannot access property with non-string: got ${n.type}`);a=r.builtins.get(n.value)}return a instanceof dr?a:new Yt}evaluateSet(t,e){const r=this.evaluate(t.value,e);if(t.assignee.type==="Identifier"){const n=t.assignee.value;e.setVariable(n,r)}else if(t.assignee.type==="MemberExpression"){const n=t.assignee,a=this.evaluate(n.object,e);if(!(a instanceof Kt))throw new Error("Cannot assign to member of non-object");if(n.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");a.value.set(n.property.value,r)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(t.assignee)}`);return new Hn}evaluateIf(t,e){const r=this.evaluate(t.test,e);return this.evaluateBlock(r.__bool__().value?t.body:t.alternate,e)}evaluateFor(t,e){const r=new go(e),n=this.evaluate(t.iterable,r);if(!(n instanceof je))throw new Error(`Expected iterable type in for loop: got ${n.type}`);let a="";for(let i=0;i<n.value.length;++i){const s=new Map([["index",new Ge(i+1)],["index0",new Ge(i)],["revindex",new Ge(n.value.length-i)],["revindex0",new Ge(n.value.length-i-1)],["first",new Qe(i===0)],["last",new Qe(i===n.value.length-1)],["length",new Ge(n.value.length)],["previtem",i>0?n.value[i-1]:new Yt],["nextitem",i<n.value.length-1?n.value[i+1]:new Yt]]);r.setVariable("loop",new Kt(s));const o=n.value[i];if(t.loopvar.type==="Identifier")r.setVariable(t.loopvar.value,o);else if(t.loopvar.type==="TupleLiteral"){const l=t.loopvar;if(o.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${o.type}`);const h=o;if(l.value.length!==h.value.length)throw new Error(`Too ${l.value.length>h.value.length?"few":"many"} items to unpack`);for(let m=0;m<l.value.length;++m){if(l.value[m].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${l.value[m].type}`);r.setVariable(l.value[m].value,h.value[m])}}const d=this.evaluateBlock(t.body,r);a+=d.value}return new Me(a)}evaluate(t,e){if(t===void 0)return new Yt;switch(t.type){case"Program":return this.evalProgram(t,e);case"Set":return this.evaluateSet(t,e);case"If":return this.evaluateIf(t,e);case"For":return this.evaluateFor(t,e);case"NumericLiteral":return new Ge(Number(t.value));case"StringLiteral":return new Me(t.value);case"BooleanLiteral":return new Qe(t.value);case"ArrayLiteral":return new je(t.value.map(r=>this.evaluate(r,e)));case"TupleLiteral":return new zy(t.value.map(r=>this.evaluate(r,e)));case"ObjectLiteral":{const r=new Map;for(const[n,a]of t.value){const i=this.evaluate(n,e);if(!(i instanceof Me))throw new Error(`Object keys must be strings: got ${i.type}`);r.set(i.value,this.evaluate(a,e))}return new Kt(r)}case"Identifier":return this.evaluateIdentifier(t,e);case"CallExpression":return this.evaluateCallExpression(t,e);case"MemberExpression":return this.evaluateMemberExpression(t,e);case"UnaryExpression":return this.evaluateUnaryExpression(t,e);case"BinaryExpression":return this.evaluateBinaryExpression(t,e);case"FilterExpression":return this.evaluateFilterExpression(t,e);case"TestExpression":return this.evaluateTestExpression(t,e);default:throw new SyntaxError(`Unknown node type: ${t.type}`)}}};function ai(t){switch(typeof t){case"number":return new Ge(t);case"string":return new Me(t);case"boolean":return new Qe(t);case"object":return t===null?new Hn:Array.isArray(t)?new je(t.map(ai)):new Kt(new Map(Object.entries(t).map(([e,r])=>[e,ai(r)])));case"function":return new cr((e,r)=>{const n=t(...e.map(a=>a.value))??null;return ai(n)});default:throw new Error(`Cannot convert to runtime value: ${t}`)}}var Py=class{parsed;constructor(t){const e=_y(t,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Oy(e)}render(t){const e=new go;e.set("false",!1),e.set("true",!0),e.set("raise_exception",a=>{throw new Error(a)}),e.set("range",My);for(const[a,i]of Object.entries(t))e.set(a,i);return new Ry(e).run(this.parsed).value}};const Vf=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],ii=new Map(Vf),By=new Map([...Vf.map(([t,e])=>[e,t]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function Gf(t){t=t.toLowerCase();let e=By.get(t);if(e===void 0)if(ii.has(t))e=t;else{const n=t.length===2?ii.keys():ii.values();throw new Error(`Language "${t}" is not supported. Must be one of: ${JSON.stringify(n)}`)}return e}const _o="https://github.com/xenova/transformers.js/issues/new/choose";async function Hf(t,e){const r=await Promise.all([Er(t,"tokenizer.json",!0,e),Er(t,"tokenizer_config.json",!0,e)]);return e.legacy!==null&&(r[1].legacy=e.legacy),r}function Dy(t,e){const r=[];let n=0;for(const a of t.matchAll(e)){const i=a[0];n<a.index&&r.push(t.slice(n,a.index)),i.length>0&&r.push(i),n=a.index+i.length}return n<t.length&&r.push(t.slice(n)),r}function si(t,e=!0){if(t.Regex!==void 0){let r=t.Regex.replace(/\\([#&~])/g,"$1");for(const[n,a]of Uy)r=r.replaceAll(n,a);return new RegExp(r,"gu")}else if(t.String!==void 0){const r=Qo(t.String);return new RegExp(e?r:`(${r})`,"gu")}else return console.warn("Unknown pattern type:",t),null}function yo(t){return new Map(Object.entries(t))}function qf(t){const e=t.dims;switch(e.length){case 1:return t.tolist();case 2:if(e[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return t.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${e.length}.`)}}function wo(t){return t.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function jf(t){return t.replace(/[\u0300-\u036f]/g,"")}function Ny(t){return jf(t.toLowerCase())}function Kf(t){return t>=19968&&t<=40959||t>=13312&&t<=19903||t>=131072&&t<=173791||t>=173824&&t<=177983||t>=177984&&t<=178207||t>=178208&&t<=183983||t>=63744&&t<=64255||t>=194560&&t<=195103}function Fy(t,e,r){const n=[];let a=0;for(;a<t.length;){if(n.push(t[a]),(r.get(t[a])??e)!==e){++a;continue}for(;a<t.length&&(r.get(t[a])??e)===e;)++a}return n}function Ly(t){return t.match(/\S+/g)||[]}const qn="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",Uy=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class Wy{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class jn extends Et{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...r){switch(e.type){case"WordPiece":return new Vy(e);case"Unigram":return new Gy(e,...r);case"BPE":return new qy(e);default:if(e.vocab)return new jy(e,...r);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let r=this.encode(e);return this.fuse_unk&&(r=Fy(r,this.unk_token_id,this.tokens_to_ids)),r}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(r=>this.tokens_to_ids.get(r)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(r=>this.vocab[r]??this.unk_token)}}class Vy extends jn{constructor(e){super(e),this.tokens_to_ids=yo(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r}encode(e){const r=[];for(const n of e){const a=[...n];if(a.length>this.max_input_chars_per_word){r.push(this.unk_token);continue}let i=!1,s=0;const o=[];for(;s<a.length;){let d=a.length,l=null;for(;s<d;){let h=a.slice(s,d).join("");if(s>0&&(h=this.config.continuing_subword_prefix+h),this.tokens_to_ids.has(h)){l=h;break}--d}if(l===null){i=!0;break}o.push(l),s=d}i?r.push(this.unk_token):r.push(...o)}return r}}class Gy extends jn{constructor(e,r){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let a=0;a<n;++a){const i=e.vocab[a];this.vocab[a]=i[0],this.scores[a]=i[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((a,i)=>[a,i])),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=r.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=y0(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new py,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const r=e.sentence,n=r.length;let a=0;for(;a<n;){let s=!1;for(let o of this.trie.commonPrefixSearch(r.slice(a))){const d=this.tokens_to_ids.get(o),l=this.scores[d],h=o.length;e.insert(a,h,l,d),!s&&h===1&&(s=!0)}s||e.insert(a,1,this.unkScore,this.unk_token_id),a+=1}}tokenize(e){const r=new hy(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(r),r.tokens()}encode(e){const r=[];for(const n of e){const a=this.tokenize(n);r.push(...a)}return r}}const Yf=(()=>{const t=[...Array.from({length:94},(a,i)=>i+33),...Array.from({length:12},(a,i)=>i+161),...Array.from({length:82},(a,i)=>i+174)],e=t.slice();let r=0;for(let a=0;a<256;++a)t.includes(a)||(t.push(a),e.push(256+r),r+=1);const n=e.map(a=>String.fromCharCode(a));return Object.fromEntries(t.map((a,i)=>[a,n[i]]))})(),Hy=d0(Yf);class qy extends jn{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=yo(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[r,n]of this.tokens_to_ids)this.vocab[n]=r;this.bpe_ranks=new Map(e.merges.map((r,n)=>[r,n])),this.merges=e.merges.map(r=>r.split(this.BPE_SPLIT_TOKEN)),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(e.length===0)return[];const r=this.cache.get(e);if(r!==void 0)return r;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let a=[];if(n.length>1){const i=new cy((d,l)=>d.score<l.score);let s={token:n[0],bias:0,prev:null,next:null},o=s;for(let d=1;d<n.length;++d){const l={bias:d/n.length,token:n[d],prev:o,next:null};o.next=l,this._add_node(i,o),o=l}for(;!i.isEmpty();){const d=i.pop();if(d.deleted||!d.next||d.next.deleted)continue;if(d.deleted=!0,d.next.deleted=!0,d.prev){const h={...d.prev};d.prev.deleted=!0,d.prev=h,h.prev?h.prev.next=h:s=h}const l={token:d.token+d.next.token,bias:d.bias,prev:d.prev,next:d.next.next};l.prev?(l.prev.next=l,this._add_node(i,l.prev)):s=l,l.next&&(l.next.prev=l,this._add_node(i,l))}for(let d=s;d!==null;d=d.next)a.push(d.token)}else a=n;if(this.continuing_subword_suffix)for(let i=0;i<a.length-1;++i)a[i]+=this.continuing_subword_suffix;return this.cache.set(e,a),a}_add_node(e,r){const n=this.bpe_ranks.get(r.token+this.BPE_SPLIT_TOKEN+r.next.token);n!==void 0&&(r.score=n+r.bias,e.push(r))}encode(e){const r=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){r.push(n);continue}const a=this.bpe(n);for(const i of a)this.tokens_to_ids.has(i)?r.push(i):this.byte_fallback?r.push(...Array.from(this.text_encoder.encode(i)).map(s=>`<0x${s.toString(16).toUpperCase().padStart(2,"0")}>`)):r.push(this.unk_token)}return r}}class jy extends jn{constructor(e,r){super(e),this.tokens_to_ids=yo(r.target_lang?e.vocab[r.target_lang]:e.vocab),this.bos_token=r.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=r.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=r.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=r.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[n,a]of this.tokens_to_ids)this.vocab[a]=n}encode(e){return e}}class Ct extends Et{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"BertNormalizer":return new nw(e);case"Precompiled":return new $w(e);case"Sequence":return new rw(e);case"Replace":return new Ky(e);case"NFC":return new Yy(e);case"NFKC":return new Xy(e);case"NFKD":return new Qy(e);case"Strip":return new Jy(e);case"StripAccents":return new Zy(e);case"Lowercase":return new ew(e);case"Prepend":return new tw(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Ky extends Ct{normalize(e){const r=si(this.config.pattern);return r===null?e:e.replaceAll(r,this.config.content)}}class Yy extends Ct{normalize(e){return e=e.normalize("NFC"),e}}class Xy extends Ct{normalize(e){return e=e.normalize("NFKC"),e}}class Qy extends Ct{normalize(e){return e=e.normalize("NFKD"),e}}class Jy extends Ct{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class Zy extends Ct{normalize(e){return e=jf(e),e}}class ew extends Ct{normalize(e){return e=e.toLowerCase(),e}}class tw extends Ct{normalize(e){return e=this.config.prepend+e,e}}class rw extends Ct{constructor(e){super(e),this.normalizers=e.normalizers.map(r=>Ct.fromConfig(r))}normalize(e){return this.normalizers.reduce((r,n)=>n.normalize(r),e)}}class nw extends Ct{_tokenize_chinese_chars(e){const r=[];for(let n=0;n<e.length;++n){const a=e[n],i=a.charCodeAt(0);Kf(i)?(r.push(" "),r.push(a),r.push(" ")):r.push(a)}return r.join("")}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const r=[];for(const n of e){const a=n.charCodeAt(0);a===0||a===65533||this._is_control(n)||(/^\s$/.test(n)?r.push(" "):r.push(n))}return r.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),this.config.strip_accents!==!1&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class Bt extends Et{static fromConfig(e){if(e===null)return null;switch(e.type){case"BertPreTokenizer":return new aw(e);case"Sequence":return new xw(e);case"Whitespace":return new Sw(e);case"WhitespaceSplit":return new kw(e);case"Metaspace":return new Zf(e);case"ByteLevel":return new iw(e);case"Split":return new sw(e);case"Punctuation":return new ow(e);case"Digits":return new uw(e);case"Replace":return new Ew(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,r){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,r){return(Array.isArray(e)?e.map(n=>this.pre_tokenize_text(n,r)):this.pre_tokenize_text(e,r)).flat()}_call(e,r){return this.pre_tokenize(e,r)}}class aw extends Bt{constructor(e){super(),this.pattern=new RegExp(`[^\\s${qn}]+|[${qn}]`,"gu")}pre_tokenize_text(e,r){return e.trim().match(this.pattern)||[]}}class iw extends Bt{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Yf,this.text_encoder=new TextEncoder}pre_tokenize_text(e,r){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map(a=>Array.from(this.text_encoder.encode(a),i=>this.byte_encoder[i]).join(""))}}class sw extends Bt{constructor(e){super(),this.config=e,this.pattern=si(this.config.pattern,this.config.invert)}pre_tokenize_text(e,r){return this.pattern===null?[]:this.config.invert?e.match(this.pattern)||[]:Dy(e,this.pattern)}}class ow extends Bt{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${qn}]+|[${qn}]+`,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class uw extends Bt{constructor(e){super(),this.config=e;const r=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(r,"gu")}pre_tokenize_text(e,r){return e.match(this.pattern)||[]}}class on extends Et{constructor(e){super(),this.config=e}static fromConfig(e){if(e===null)return null;switch(e.type){case"TemplateProcessing":return new lw(e);case"ByteLevel":return new Jf(e);case"RobertaProcessing":return new Qf(e);case"BertProcessing":return new Xf(e);case"Sequence":return new dw(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...r){throw Error("post_process should be implemented in subclass.")}_call(e,...r){return this.post_process(e,...r)}}class Xf extends on{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,r=null,{add_special_tokens:n=!0}={}){n&&(e=nt([this.cls],e,[this.sep]));let a=new Array(e.length).fill(0);if(r!==null){const i=n&&this instanceof Qf?[this.sep]:[],s=n?[this.sep]:[];e=nt(e,i,r,s),a=nt(a,new Array(r.length+i.length+s.length).fill(1))}return{tokens:e,token_type_ids:a}}}class Qf extends Xf{}class lw extends on{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,r=null,{add_special_tokens:n=!0}={}){const a=r===null?this.single:this.pair;let i=[],s=[];for(const o of a)"SpecialToken"in o?n&&(i.push(o.SpecialToken.id),s.push(o.SpecialToken.type_id)):"Sequence"in o&&(o.Sequence.id==="A"?(i=nt(i,e),s=nt(s,new Array(e.length).fill(o.Sequence.type_id))):o.Sequence.id==="B"&&(i=nt(i,r),s=nt(s,new Array(r.length).fill(o.Sequence.type_id))));return{tokens:i,token_type_ids:s}}}class Jf extends on{post_process(e,r=null){return r&&(e=nt(e,r)),{tokens:e}}}class dw extends on{constructor(e){super(e),this.processors=e.processors.map(r=>on.fromConfig(r))}post_process(e,r=null,n={}){let a;for(const i of this.processors)if(i instanceof Jf)e=i.post_process(e).tokens,r&&(r=i.post_process(r).tokens);else{const s=i.post_process(e,r,n);e=s.tokens,a=s.token_type_ids}return{tokens:e,token_type_ids:a}}}class Tt extends Et{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(e===null)return null;switch(e.type){case"WordPiece":return new mw(e);case"Metaspace":return new vw(e);case"ByteLevel":return new gw(e);case"Replace":return new cw(e);case"ByteFallback":return new pw(e);case"Fuse":return new hw(e);case"Strip":return new fw(e);case"Sequence":return new yw(e);case"CTC":return new _w(e);case"BPEDecoder":return new ww(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class cw extends Tt{decode_chain(e){const r=si(this.config.pattern);return r===null?e:e.map(n=>n.replaceAll(r,this.config.content))}}class pw extends Tt{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const r=[];let n=[];for(const a of e){let i=null;if(a.length===6&&a.startsWith("<0x")&&a.endsWith(">")){const s=parseInt(a.slice(3,5),16);isNaN(s)||(i=s)}if(i!==null)n.push(i);else{if(n.length>0){const s=this.text_decoder.decode(Uint8Array.from(n));r.push(s),n=[]}r.push(a)}}if(n.length>0){const a=this.text_decoder.decode(Uint8Array.from(n));r.push(a),n=[]}return r}}class hw extends Tt{decode_chain(e){return[e.join("")]}}class fw extends Tt{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(r=>{let n=0;for(let i=0;i<this.start&&r[i]===this.content;++i){n=i+1;continue}let a=r.length;for(let i=0;i<this.stop;++i){const s=r.length-i-1;if(r[s]===this.content){a=s;continue}else break}return r.slice(n,a)})}}class mw extends Tt{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((r,n)=>(n!==0&&(r.startsWith(this.config.prefix)?r=r.replace(this.config.prefix,""):r=" "+r),this.cleanup&&(r=wo(r)),r))}}class gw extends Tt{constructor(e){super(e),this.byte_decoder=Hy,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const r=e.join(""),n=new Uint8Array([...r].map(i=>this.byte_decoder[i]));return this.text_decoder.decode(n)}decode_chain(e){const r=[];let n=[];for(const a of e)this.added_tokens.find(i=>i.content===a)!==void 0?(n.length>0&&(r.push(this.convert_tokens_to_string(n)),n=[]),r.push(a)):n.push(a);return n.length>0&&r.push(this.convert_tokens_to_string(n)),r}}class _w extends Tt{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(e.length===0)return"";const r=[e[0]];for(let i=1;i<e.length;++i)e[i]!==r.at(-1)&&r.push(e[i]);let a=r.filter(i=>i!==this.pad_token).join("");return this.cleanup&&(a=wo(a).replaceAll(this.word_delimiter_token," ").trim()),a}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class yw extends Tt{constructor(e){super(e),this.decoders=e.decoders.map(r=>Tt.fromConfig(r))}decode_chain(e){return this.decoders.reduce((r,n)=>n.decode_chain(r),e)}}class ww extends Tt{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((r,n)=>r.replaceAll(this.suffix,n===e.length-1?"":" "))}}class bw extends Tt{decode_chain(e){let r="";for(let n=1;n<e.length;n+=2)r+=e[n];return[r]}}class Zf extends Bt{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:r=void 0}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&r===0)&&(n=this.strRep+n),[n]}}class vw extends Tt{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const r=[];for(let n=0;n<e.length;++n){let a=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&n==0&&a.startsWith(" ")&&(a=a.substring(1)),r.push(a)}return r}}class $w extends Ct{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){return e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),e=e.replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," "),e.includes("～")?e=e.split("～").map(n=>n.normalize("NFKC")).join("～"):e=e.normalize("NFKC"),e}}class xw extends Bt{constructor(e){super(),this.tokenizers=e.pretokenizers.map(r=>Bt.fromConfig(r))}pre_tokenize_text(e,r){return this.tokenizers.reduce((n,a)=>a.pre_tokenize(n,r),[e])}}class Sw extends Bt{constructor(e){super()}pre_tokenize_text(e,r){return e.match(/\w+|[^\w\s]+/g)||[]}}class kw extends Bt{constructor(e){super()}pre_tokenize_text(e,r){return Ly(e)}}class Ew extends Bt{constructor(e){super(),this.config=e,this.pattern=si(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,r){return this.pattern===null?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const Cw=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Tw(t,e,r,n){for(const a of Object.keys(t)){const i=e-t[a].length,s=r(a),o=new Array(i).fill(s);t[a]=n==="right"?nt(t[a],o):nt(o,t[a])}}function Iw(t,e){for(const r of Object.keys(t))t[r].length=e}class ke extends Et{return_token_type_ids=!1;_default_chat_template=`{% for message in messages %}{{'<|im_start|>' + message['role'] + '
' + message['content'] + '<|im_end|>' + '
'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant
' }}{% endif %}`;padding_side="right";constructor(e,r){super(),this._tokenizer_config=r,this.normalizer=Ct.fromConfig(e.normalizer),this.pre_tokenizer=Bt.fromConfig(e.pre_tokenizer),this.model=jn.fromConfig(e.model,r),this.post_processor=on.fromConfig(e.post_processor),this.decoder=Tt.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const n of e.added_tokens){const a=new Wy(n);this.added_tokens.push(a),this.model.tokens_to_ids.set(a.content,a.id),this.model.vocab[a.id]=a.content,a.special&&(this.special_tokens.push(a.content),this.all_special_ids.push(a.id))}if(this.additional_special_tokens=r.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.map(n=>`${n.lstrip?"\\s*":""}(${Qo(n.content)})${n.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=r.model_max_length,this.remove_space=r.remove_space,this.clean_up_tokenization_spaces=r.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=r.do_lowercase_and_remove_accent??!1,r.padding_side&&(this.padding_side=r.padding_side),this.legacy=!1,this.chat_template=r.chat_template??null,Array.isArray(this.chat_template)){const n=Object.create(null);for(const{name:a,template:i}of this.chat_template){if(typeof a!="string"||typeof i!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');n[a]=i}this.chat_template=n}this._compiled_template_cache=new Map}getToken(...e){for(const r of e){const n=this._tokenizer_config[r];if(n)if(typeof n=="object"){if(n.__type==="AddedToken")return n.content;throw Error(`Unknown token: ${n}`)}else return n}return null}static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",legacy:o=null}={}){const d=await Hf(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:i,revision:s,legacy:o});return new this(...d)}_call(e,{text_pair:r=null,add_special_tokens:n=!0,padding:a=!1,truncation:i=null,max_length:s=null,return_tensor:o=!0,return_token_type_ids:d=null}={}){const l=Array.isArray(e);let h;if(l){if(e.length===0)throw Error("text array must be non-empty");if(r!==null){if(Array.isArray(r)){if(e.length!==r.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");h=e.map((g,c)=>this._encode_plus(g,{text_pair:r[c],add_special_tokens:n,return_token_type_ids:d}))}else h=e.map(g=>this._encode_plus(g,{add_special_tokens:n,return_token_type_ids:d}))}else{if(e==null)throw Error("text may not be null or undefined");if(Array.isArray(r))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");h=[this._encode_plus(e,{text_pair:r,add_special_tokens:n,return_token_type_ids:d})]}if(s===null?a==="max_length"?s=this.model_max_length:s=Oa(h.map(g=>g.input_ids.length))[0]:i||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),s=Math.min(s,this.model_max_length??1/0),a||i)for(let g=0;g<h.length;++g)h[g].input_ids.length!==s&&(h[g].input_ids.length>s?i&&Iw(h[g],s):a&&Tw(h[g],s,c=>c==="input_ids"?this.pad_token_id:0,this.padding_side));const m={};if(o){if(!(a&&i)&&h.some(c=>{for(const w of Object.keys(c))if(c[w].length!==h[0][w]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const g=[h.length,h[0].input_ids.length];for(const c of Object.keys(h[0]))m[c]=new Se("int64",BigInt64Array.from(h.flatMap(w=>w[c]).map(BigInt)),g)}else{for(const g of Object.keys(h[0]))m[g]=h.map(c=>c[g]);if(!l)for(const g of Object.keys(m))m[g]=m[g][0]}return m}_encode_text(e){return e===null?null:(this.added_tokens_regex?e.split(this.added_tokens_regex).filter(a=>a):[e]).map((a,i)=>{if(this.added_tokens.find(o=>o.content===a)!==void 0)return a;{if(this.remove_space===!0&&(a=a.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(a=Ny(a)),this.normalizer!==null&&(a=this.normalizer(a)),a.length===0)return[];const o=this.pre_tokenizer!==null?this.pre_tokenizer(a,{section_index:i}):[a];return this.model(o)}}).flat()}_encode_plus(e,{text_pair:r=null,add_special_tokens:n=!0,return_token_type_ids:a=null}={}){const{tokens:i,token_type_ids:s}=this._tokenize_helper(e,{pair:r,add_special_tokens:n}),o=this.model.convert_tokens_to_ids(i),d={input_ids:o,attention_mask:new Array(o.length).fill(1)};return(a??this.return_token_type_ids)&&s&&(d.token_type_ids=s),d}_tokenize_helper(e,{pair:r=null,add_special_tokens:n=!1}={}){const a=this._encode_text(e),i=this._encode_text(r);return this.post_processor?this.post_processor(a,i,{add_special_tokens:n}):{tokens:nt(a??[],i??[])}}tokenize(e,{pair:r=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:r,add_special_tokens:n}).tokens}encode(e,{text_pair:r=null,add_special_tokens:n=!0,return_token_type_ids:a=null}={}){return this._encode_plus(e,{text_pair:r,add_special_tokens:n,return_token_type_ids:a}).input_ids}batch_decode(e,r={}){return e instanceof Se&&(e=e.tolist()),e.map(n=>this.decode(n,r))}decode(e,r={}){if(e instanceof Se&&(e=qf(e)),!Array.isArray(e)||e.length===0||!c0(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,r)}decode_single(e,{skip_special_tokens:r=!1,clean_up_tokenization_spaces:n=null}){let a=this.model.convert_ids_to_tokens(e);r&&(a=a.filter(s=>!this.special_tokens.includes(s)));let i=this.decoder?this.decoder(a):a.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(i=i.replaceAll(this.decoder.end_of_word_suffix," "),r&&(i=i.trim())),(n??this.clean_up_tokenization_spaces)&&(i=wo(i)),i}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(e,{chat_template:r=null,add_generation_prompt:n=!1,tokenize:a=!0,padding:i=!1,truncation:s=!1,max_length:o=null,return_tensor:d=!0,return_dict:l=!1,tokenizer_kwargs:h={},...m}={}){if(this.chat_template&&typeof this.chat_template=="object"||this.chat_template===null&&this.default_chat_template&&typeof this.default_chat_template=="object"){const v=this.chat_template??this.default_chat_template;if(r!==null&&Object.hasOwn(v,r))r=v[r];else if(r===null&&"default"in v)r=v.default;else if(r===null)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(v).sort()}.`)}else r??=this.chat_template??this.default_chat_template;if(typeof r!="string")throw Error(`chat_template must be a string, but got ${typeof r}`);let g=this._compiled_template_cache.get(r);g===void 0&&(g=new Py(r),this._compiled_template_cache.set(r,g));const c=Object.create(null);for(const v of Cw){const S=this.getToken(v);S&&(c[v]=S)}const w=g.render({messages:e,add_generation_prompt:n,...c,...m});if(a){const v=this._call(w,{add_special_tokens:!1,padding:i,truncation:s,max_length:o,return_tensor:d,...h});return l?v:v.input_ids}return w}}class Aw extends ke{return_token_type_ids=!0}class Ow extends ke{return_token_type_ids=!0}class Mw extends ke{return_token_type_ids=!0}class zw extends ke{return_token_type_ids=!0}class Rw extends ke{return_token_type_ids=!0}class Pw extends ke{return_token_type_ids=!0}class Bw extends ke{return_token_type_ids=!0}class Dw extends ke{return_token_type_ids=!0}class Nw extends ke{return_token_type_ids=!0}class Fw extends ke{}class Lw extends ke{}class Uw extends ke{return_token_type_ids=!0;constructor(e,r){super(e,r),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ww extends ke{return_token_type_ids=!0}class Vw extends ke{}class em extends ke{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}'}class Gw extends ke{}class tm extends ke{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return bo(this,e,r,n)}}class Hw extends tm{}class qw extends ke{}class jw extends em{constructor(e,r){const n=".,!?…。，、।۔،",a=e.pre_tokenizer?.pretokenizers[0]?.pattern;a&&a.Regex===` ?[^(\\s|[${n}])]+`&&(a.Regex=` ?[^\\s${n}]+`),super(e,r)}}const oi="▁";class rm extends ke{_default_chat_template=`{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>
' + system_message + '
<</SYS>>

' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>
' + content.strip() + '
<</SYS>>

' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}`;DEFAULT_SYSTEM_PROMPT=`You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.

If a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.`;padding_side="left";constructor(e,r){super(e,r),this.use_default_system_prompt=r.use_default_system_prompt??!1,this.legacy=r.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Zf({replacement:oi,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(e===null)return null;if(this.legacy||e.length===0)return super._encode_text(e);let r=super._encode_text(oi+e.replaceAll(oi," "));return r.length>1&&r[0]===oi&&this.special_tokens.includes(r[1])&&(r=r.slice(1)),r}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll(`
`,"\\n").replaceAll("'","\\'"))}}class Kw extends rm{}class Yw extends ke{}class Xw extends ke{}class Qw extends ke{}class Jw extends ke{}class Zw extends ke{}class eb extends ke{}class tb extends ke{_default_chat_template=`{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '
' + message['content'] | trim + '<end_of_turn>
' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model
'}}{% endif %}`}class rb extends ke{}function bo(t,e,r,n){if(!("language_codes"in t)||!Array.isArray(t.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in t)||!(t.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in t)||typeof t.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const a=n.src_lang,i=n.tgt_lang;if(!t.language_codes.includes(i))throw new Error(`Target language code "${i}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);if(a!==void 0){if(!t.language_codes.includes(a))throw new Error(`Source language code "${a}" is not valid. Must be one of: {${t.language_codes.join(", ")}}`);for(const s of t.post_processor.config.single)if("SpecialToken"in s&&t.languageRegex.test(s.SpecialToken.id)){s.SpecialToken.id=t.lang_to_token(a);break}}return n.forced_bos_token_id=t.model.convert_tokens_to_ids([t.lang_to_token(i)])[0],t._call(e,r)}class nb extends ke{constructor(e,r){super(e,r),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)),this.lang_to_token=n=>n}_build_translation_inputs(e,r,n){return bo(this,e,r,n)}}class ab extends ke{constructor(e,r){super(e,r),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(n=>this.languageRegex.test(n)).map(n=>n.slice(2,-2)),this.lang_to_token=n=>`__${n}__`}_build_translation_inputs(e,r,n){return bo(this,e,r,n)}}class ib extends ke{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}';get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:r=!1,return_language:n=!1,time_precision:a=null,force_full_sequences:i=!0}={}){if(a===null)throw Error("Must specify time_precision");let s=null;const o=r==="word";function d(){return{language:s,timestamp:[null,null],text:""}}const l=[];let h=d(),m=0;const g=this.timestamp_begin;let c=[],w=[],v=!1,S=null;const E=new Set(this.all_special_ids);for(const T of e){const M=T.tokens,U=o?T.token_timestamps:null;let B=null,D=g;if("stride"in T){const[se,ae,ce]=T.stride;if(m-=ae,S=se-ce,ae&&(D=ae/a+g),ce)for(let ue=M.length-1;ue>=0;--ue){const A=Number(M[ue]);if(A>=g){if(B!==null&&(A-g)*a<S)break;B=A}}}let Q=[],J=[];for(let se=0;se<M.length;++se){const ae=Number(M[se]);if(E.has(ae)){const ce=this.decode([ae]),ue=ii.get(ce.slice(2,-2));if(ue!==void 0){if(s!==null&&ue!==s&&!r){c.push(Q);const A=this.findLongestCommonSequence(c)[0],R=this.decode(A);h.text=R,l.push(h),c=[],Q=[],h=d()}s=h.language=ue}}else if(ae>=g){const ce=(ae-g)*a+m,ue=Yi(ce,2);if(B!==null&&ae>=B)v=!0;else if(v||c.length>0&&ae<D)v=!1;else if(h.timestamp[0]===null)h.timestamp[0]=ue;else if(ue!==h.timestamp[0]){h.timestamp[1]=ue,c.push(Q),o&&w.push(J);const[A,R]=this.findLongestCommonSequence(c,w),Z=this.decode(A);h.text=Z,o&&(h.words=this.collateWordTimestamps(A,R,s)),l.push(h),c=[],Q=[],w=[],J=[],h=d()}}else if(Q.push(ae),o){let ce=Yi(U[se]+m,2),ue;se+1<U.length?ue=Yi(U[se+1]+m,2):ue=null,J.push([ce,ue])}}if("stride"in T){const[se,ae,ce]=T.stride;m+=se-ce}Q.length>0?(c.push(Q),o&&w.push(J)):c.every(se=>se.length===0)&&(h=d(),c=[],Q=[],w=[],J=[])}if(c.length>0){if(i&&r)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[T,M]=this.findLongestCommonSequence(c,w),U=this.decode(T);h.text=U,o&&(h.words=this.collateWordTimestamps(T,M,s)),l.push(h)}let x=Object.create(null);const I=l.map(T=>T.text).join("");if(r||n){for(let T=0;T<l.length;++T){const M=l[T];r||delete M.timestamp,n||delete M.language}if(o){const T=[];for(const M of l)for(const U of M.words)T.push(U);x={chunks:T}}else x={chunks:l}}return[I,x]}findLongestCommonSequence(e,r=null){let n=e[0],a=n.length,i=[];const s=Array.isArray(r)&&r.length>0;let o=s?[]:null,d=s?r[0]:null;for(let l=1;l<e.length;++l){const h=e[l];let m=0,g=[a,a,0,0];const c=h.length;for(let T=1;T<a+c;++T){const M=T/1e4,U=Math.max(0,a-T),B=Math.min(a,a+c-T),D=n.slice(U,B),Q=Math.max(0,T-a),J=Math.min(c,T),se=h.slice(Q,J);if(D.length!==se.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const ae=D.filter((ue,A)=>ue===se[A]).length,ce=ae/T+M;ae>1&&ce>m&&(m=ce,g=[U,B,Q,J])}const[w,v,S,E]=g,x=Math.floor((v+w)/2),I=Math.floor((E+S)/2);i.push(...n.slice(0,x)),n=h.slice(I),a=n.length,s&&(o.push(...d.slice(0,x)),d=r[l].slice(I))}return i.push(...n),s?(o.push(...d),[i,o]):[i,[]]}collateWordTimestamps(e,r,n){const[a,i,s]=this.combineTokensIntoWords(e,n),o=[];for(let d=0;d<a.length;++d){const l=s[d];o.push({text:a[d],timestamp:[r[l.at(0)][0],r[l.at(-1)][1]]})}return o}combineTokensIntoWords(e,r,n=`"'“¡¿([{-`,a=`"'.。,，!！?？:：”)]}、`){r=r??"english";let i,s,o;return["chinese","japanese","thai","lao","myanmar"].includes(r)?[i,s,o]=this.splitTokensOnUnicode(e):[i,s,o]=this.splitTokensOnSpaces(e),this.mergePunctuations(i,s,o,n,a)}decode(e,r){let n;return r?.decode_with_timestamps?(e instanceof Se&&(e=qf(e)),n=this.decodeWithTimestamps(e,r)):n=super.decode(e,r),n}decodeWithTimestamps(e,r){const n=r?.time_precision??.02,a=Array.from(this.all_special_ids).at(-1)+1;let i=[[]];for(let s of e)if(s=Number(s),s>=a){const o=((s-a)*n).toFixed(2);i.push(`<|${o}|>`),i.push([])}else i[i.length-1].push(s);return i=i.map(s=>typeof s=="string"?s:super.decode(s,r)),i.join("")}splitTokensOnUnicode(e){const r=this.decode(e,{decode_with_timestamps:!0}),n="�",a=[],i=[],s=[];let o=[],d=[],l=0;for(let h=0;h<e.length;++h){const m=e[h];o.push(m),d.push(h);const g=this.decode(o,{decode_with_timestamps:!0});(!g.includes(n)||r[l+g.indexOf(n)]===n)&&(a.push(g),i.push(o),s.push(d),o=[],d=[],l+=g.length)}return[a,i,s]}splitTokensOnSpaces(e){const[r,n,a]=this.splitTokensOnUnicode(e),i=[],s=[],o=[],d=new RegExp(`^[${qn}]$`,"gu");for(let l=0;l<r.length;++l){const h=r[l],m=n[l],g=a[l],c=m[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),w=h.startsWith(" "),v=h.trim(),S=d.test(v);if(c||w||S||i.length===0)i.push(h),s.push(m),o.push(g);else{const E=i.length-1;i[E]+=h,s[E].push(...m),o[E].push(...g)}}return[i,s,o]}mergePunctuations(e,r,n,a,i){const s=structuredClone(e),o=structuredClone(r),d=structuredClone(n);let l=s.length-2,h=s.length-1;for(;l>=0;)s[l].startsWith(" ")&&a.includes(s[l].trim())?(s[h]=s[l]+s[h],o[h]=nt(o[l],o[h]),d[h]=nt(d[l],d[h]),s[l]="",o[l]=[],d[l]=[]):h=l,--l;for(l=0,h=1;h<s.length;)!s[l].endsWith(" ")&&i.includes(s[h])?(s[l]+=s[h],o[l]=nt(o[l],o[h]),d[l]=nt(d[l],d[h]),s[h]="",o[h]=[],d[h]=[]):l=h,++h;return[s.filter(m=>m),o.filter(m=>m.length>0),d.filter(m=>m.length>0)]}get_decoder_prompt_ids({language:e=null,task:r=null,no_timestamps:n=!0}={}){const a=[];if(e){const i=Gf(e),s=this.model.tokens_to_ids.get(`<|${i}|>`);if(s===void 0)throw new Error(`Unable to find language "${i}" in model vocabulary. Please report this issue at ${_o}.`);a.push(s)}else a.push(null);if(r){if(r=r.toLowerCase(),r!=="transcribe"&&r!=="translate")throw new Error(`Task "${r}" is not supported. Must be one of: ["transcribe", "translate"]`);const i=this.model.tokens_to_ids.get(`<|${r}|>`);if(i===void 0)throw new Error(`Unable to find task "${r}" in model vocabulary. Please report this issue at ${_o}.`);a.push(i)}else a.push(null);if(n){const i=this.model.tokens_to_ids.get("<|notimestamps|>");if(i===void 0)throw new Error(`Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at ${_o}.`);a.push(i)}return a.map((i,s)=>[s+1,i]).filter(i=>i[1]!==null)}}class sb extends ke{}class ob extends ke{}class ub extends ke{}class lb extends ke{constructor(e,r){super(e,r),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(n=>this.languageRegex.test(n)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(e===null)return null;const[r,...n]=e.trim().split(this.languageRegex);if(n.length===0)return super._encode_text(r);if(n.length===2){const[a,i]=n;return this.supported_language_codes.includes(a)||console.warn(`Unsupported language code "${a}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),nt([a],super._encode_text(i))}}}class db extends ke{}class nm extends ke{_default_chat_template="{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}"}class cb extends nm{}class pb extends ke{}class hb extends ke{}class fb extends ke{constructor(e,r){super(e,r),this.decoder=new bw({})}}class mb extends ke{}class gb{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Vw,DistilBertTokenizer:Fw,CamembertTokenizer:Lw,DebertaTokenizer:Rw,DebertaV2Tokenizer:Pw,BertTokenizer:Aw,HerbertTokenizer:Bw,ConvBertTokenizer:Dw,RoFormerTokenizer:Nw,XLMTokenizer:Uw,ElectraTokenizer:Ww,MobileBertTokenizer:Mw,SqueezeBertTokenizer:zw,AlbertTokenizer:Ow,GPT2Tokenizer:em,BartTokenizer:Gw,MBartTokenizer:tm,MBart50Tokenizer:Hw,RobertaTokenizer:qw,WhisperTokenizer:ib,CodeGenTokenizer:sb,CLIPTokenizer:ob,SiglipTokenizer:ub,MarianTokenizer:lb,BloomTokenizer:jw,NllbTokenizer:nb,M2M100Tokenizer:ab,LlamaTokenizer:rm,CodeLlamaTokenizer:Kw,XLMRobertaTokenizer:Yw,MPNetTokenizer:Xw,FalconTokenizer:Qw,GPTNeoXTokenizer:Jw,EsmTokenizer:Zw,Wav2Vec2CTCTokenizer:db,BlenderbotTokenizer:nm,BlenderbotSmallTokenizer:cb,SpeechT5Tokenizer:pb,NougatTokenizer:hb,VitsTokenizer:fb,Qwen2Tokenizer:eb,GemmaTokenizer:tb,Grok1Tokenizer:rb,CohereTokenizer:mb,PreTrainedTokenizer:ke};static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",legacy:o=null}={}){const[d,l]=await Hf(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:i,revision:s,legacy:o}),h=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let m=this.TOKENIZER_CLASS_MAPPING[h];return m||(console.warn(`Unknown tokenizer class "${h}", attempting to construct from base class.`),m=ke),new m(d,l)}}async function _b(t,e){return await Er(t,"config.json",!0,e)}function un(t){const e={};let r={};switch(t.model_type){case"llava":case"paligemma":r=un(t.text_config);break;case"moondream1":r=un(t.phi_config);break;case"musicgen":r=un(t.decoder);break;case"gpt2":case"gptj":case"codegen":case"gpt_bigcode":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":e.num_heads="num_attention_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size";break;case"llama":case"cohere":case"mistral":case"starcoder2":case"qwen2":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.hidden_size="hidden_size",e.num_attention_heads="num_attention_heads";break;case"gemma":e.num_heads="num_key_value_heads",e.num_layers="num_hidden_layers",e.dim_kv="head_dim";break;case"openelm":e.num_heads="num_kv_heads",e.num_layers="num_transformer_layers",e.dim_kv="head_dim";break;case"gpt_neo":e.num_heads="num_heads",e.num_layers="num_layers",e.hidden_size="hidden_size";break;case"bloom":e.num_heads="n_head",e.num_layers="n_layer",e.hidden_size="hidden_size";break;case"mpt":e.num_heads="n_heads",e.num_layers="n_layers",e.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":e.num_decoder_layers="num_decoder_layers",e.num_decoder_heads="num_heads",e.decoder_dim_kv="d_kv",e.num_encoder_layers="num_layers",e.num_encoder_heads="num_heads",e.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="d_model",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="d_model";break;case"speecht5":e.num_decoder_layers="decoder_layers",e.num_decoder_heads="decoder_attention_heads",e.decoder_hidden_size="hidden_size",e.num_encoder_layers="encoder_layers",e.num_encoder_heads="encoder_attention_heads",e.encoder_hidden_size="hidden_size";break;case"trocr":e.num_encoder_layers=e.num_decoder_layers="decoder_layers",e.num_encoder_heads=e.num_decoder_heads="decoder_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="d_model";break;case"musicgen_decoder":e.num_encoder_layers=e.num_decoder_layers="num_hidden_layers",e.num_encoder_heads=e.num_decoder_heads="num_attention_heads",e.encoder_hidden_size=e.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const a=un(t.encoder),i=un(t.decoder),s="num_decoder_layers"in i,o={};return s?(o.num_decoder_layers=i.num_layers,o.num_decoder_heads=i.num_heads,o.decoder_hidden_size=i.hidden_size,o.num_encoder_layers=a.num_layers,o.num_encoder_heads=a.num_heads,o.encoder_hidden_size=a.hidden_size):(o.num_layers=i.num_layers,o.num_heads=i.num_heads,o.hidden_size=i.hidden_size),o}const n={...r,...kr(t,["model_type","multi_query","is_encoder_decoder"])};for(const a in e)n[a]=t[e[a]];return n}function am(t,{prefix:e="past_key_values",encoder_add_pkv:r=!0}={}){const n={},a=t.normalized_config,i=1;if(a.is_encoder_decoder&&r){const s=a.encoder_dim_kv??a.encoder_hidden_size/a.num_encoder_heads,o=a.decoder_dim_kv??a.decoder_hidden_size/a.num_decoder_heads,d=[i,a.num_encoder_heads,0,s],l=[i,a.num_decoder_heads,0,o];for(let h=0;h<a.num_decoder_layers;++h)n[`${e}.${h}.encoder.key`]=d,n[`${e}.${h}.encoder.value`]=d,n[`${e}.${h}.decoder.key`]=l,n[`${e}.${h}.decoder.value`]=l}else{const s=a.num_heads,o=a.num_layers,d=a.dim_kv??a.hidden_size/(a.num_attention_heads??s);if(a.model_type==="falcon"){const l=[i*s,0,d];for(let h=0;h<o;++h)n[`${e}.${h}.key`]=l,n[`${e}.${h}.value`]=l}else if(a.multi_query){const l=[i*s,0,2*d];for(let h=0;h<o;++h)n[`${e}.${h}.key_value`]=l}else if(a.model_type==="bloom"){const l=[i*s,d,0],h=[i*s,0,d];for(let m=0;m<o;++m)n[`${e}.${m}.key`]=l,n[`${e}.${m}.value`]=h}else if(a.model_type==="openelm")for(let l=0;l<o;++l){const h=[i,s[l],0,d];n[`${e}.${l}.key`]=h,n[`${e}.${l}.value`]=h}else{const l=[i,s,0,d];for(let h=0;h<o;++h)n[`${e}.${h}.key`]=l,n[`${e}.${h}.value`]=l}}return n}class ui{max_position_embeddings;constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e),this.normalized_config=un(this)}static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main"}={}){n&&!(n instanceof ui)&&(n=new ui(n));const o=n??await _b(e,{progress_callback:r,config:n,cache_dir:a,local_files_only:i,revision:s});return new this(o)}}class im{static async from_pretrained(...e){return ui.from_pretrained(...e)}}const li=Object.freeze({cpu:"cpu",gpu:"gpu",wasm:"wasm",webgpu:"webgpu"}),yb=function(){let t;return async function(){if(t===void 0)if(Sr.IS_NODE_ENV)t=!0;else if(!Sr.IS_WEBGPU_AVAILABLE)t=!1;else try{t=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{t=!1}return t}}(),vt=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),wb=Object.freeze({[li.cpu]:vt.q8,[li.gpu]:vt.fp32,[li.wasm]:vt.q8,[li.webgpu]:vt.fp32}),sm=Object.freeze({[vt.fp32]:"",[vt.fp16]:"_fp16",[vt.int8]:"_int8",[vt.uint8]:"_uint8",[vt.q8]:"_quantized",[vt.q4]:"_q4",[vt.q4f16]:"_q4f16",[vt.bnb4]:"_bnb4"});class nr extends Et{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class vo extends Et{_call(e,r){throw Error("`_call` should be implemented in a subclass")}}class $o extends Et{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,r){let n=r;for(const a of this.processors)n=a(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class bb extends nr{constructor(e){super(),this.bos_token_id=e}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===1){const a=r[n];a.data.fill(-1/0),a.data[this.bos_token_id]=0}return r}}class vb extends nr{constructor(e,r){super(),this.max_length=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const a=r[n];a.data.fill(-1/0);for(const i of this.eos_token_id)a.data[i]=0}return r}}class $b extends nr{constructor(e,r){super(),this.begin_suppress_tokens=e,this.begin_index=r}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const a=r[n];for(const i of this.begin_suppress_tokens)a.data[i]=-1/0}return r}}class xb extends nr{constructor(e,r){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=r.length,r.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,r){for(let n=0;n<e.length;++n){const i=r[n].data;if(i[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){i.fill(-1/0),i[this.timestamp_begin]=0;continue}const s=e[n].slice(this.begin_index),o=s.length>=1&&s[s.length-1]>=this.timestamp_begin,d=s.length<2||s[s.length-2]>=this.timestamp_begin;if(o&&(d?i.subarray(this.timestamp_begin).fill(-1/0):i.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&this.max_initial_timestamp_index!==null){const g=this.timestamp_begin+this.max_initial_timestamp_index;i.subarray(g+1).fill(-1/0)}const l=_0(i),h=Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce((g,c)=>g+c)),m=Oa(l.subarray(0,this.timestamp_begin))[0];h>m&&i.subarray(0,this.timestamp_begin).fill(-1/0)}return r}}class Sb extends nr{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const r=e.length,n=[];for(let i=0;i<r+1-this.no_repeat_ngram_size;++i){const s=[];for(let o=0;o<this.no_repeat_ngram_size;++o)s.push(e[i+o]);n.push(s)}const a=new Map;for(const i of n){const s=i.slice(0,i.length-1),o=JSON.stringify(s),d=a.get(o)??[];d.push(i[i.length-1]),a.set(o,d)}return a}getGeneratedNgrams(e,r){const n=r.slice(r.length+1-this.no_repeat_ngram_size,r.length);return e.get(JSON.stringify(n))??[]}calcBannedNgramTokens(e){const r=[];if(e.length+1<this.no_repeat_ngram_size)return r;{const n=this.getNgrams(e);return this.getGeneratedNgrams(n,e)}}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n],i=this.calcBannedNgramTokens(e[n]);for(const s of i)a.data[s]=-1/0}return r}}class kb extends nr{constructor(e){super(),this.penalty=e}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const i of e[n])a.data[i]<0?a.data[i]*=this.penalty:a.data[i]/=this.penalty}return r}}class Eb extends nr{constructor(e,r){super(),this.min_length=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const a=r[n];for(const i of this.eos_token_id)a.data[i]=-1/0}return r}}class Cb extends nr{constructor(e,r,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=r,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,r){for(let n=0;n<e.length;++n)if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const i=r[n];for(const s of this.eos_token_id)i[s]=-1/0}return r}}class Tb extends nr{constructor(e,r){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(r)?r:[r]}_call(e,r){for(let n=0;n<e.length;++n){const a=r[n];for(const i of this.bad_words_ids){let s=!0;for(let o=1;o<=i.length-1&&i.length<e[o].length;++o)if(i.at(-o-1)!==e[o].at(-o)){s=!1;break}s&&(a[i.at(-1)]=-1/0)}}return r}}class Ib extends nr{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,r){if(r.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${r.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,a=r.slice([0,n],null),i=r.slice([n,r.dims[0]],null);for(let s=0;s<i.data.length;++s)i.data[s]+=(a.data[s]-i.data[s])*this.guidance_scale;return i}}class Ab extends vo{constructor(e){super(),this.temperature=e}_call(e,r){const n=r.data;for(let a=0;a<n.length;++a)n[a]/=this.temperature;return r}}class Ob extends vo{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=r,this.min_tokens_to_keep=n}}class Mb extends vo{constructor(e,{filter_value:r=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=r}}class om{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,kr(e,Object.getOwnPropertyNames(this)))}}class di extends Et{_call(e,r){throw Error("StoppingCriteria needs to be subclassed")}}class xo extends Et{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof xo?e=e.criteria:e instanceof di&&(e=[e]),this.criteria.push(...e)}_call(e,r){const n=new Array(e.length).fill(!1);for(const a of this.criteria){const i=a(e,r);for(let s=0;s<n.length;++s)n[s]||=i[s]}return n}[Symbol.iterator](){return this.criteria.values()}}class zb extends di{constructor(e,r=null){super(),this.max_length=e,this.max_position_embeddings=r}_call(e){return e.map(r=>r.length>=this.max_length)}}class Rb extends di{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,r){return e.map(n=>{const a=n.at(-1);return this.eos_token_id.some(i=>a==i)})}}class ci extends Et{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,r){let n=e.dims.at(-1),a=e.data;if(r===-1)a=a.slice(-n);else{let i=r*n;a=a.slice(i,i+n)}return a}randomSelect(e){let r=0;for(let a=0;a<e.length;++a)r+=e[a];let n=Math.random()*r;for(let a=0;a<e.length;++a)if(n-=e[a],n<=0)return a;return 0}static getSampler(e){if(e.do_sample)return new Bb(e);if(e.num_beams>1)return new Db(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new Pb(e)}}class Pb extends ci{async sample(e){const r=Oa(e.data)[1];return[[BigInt(r),0]]}}class Bb extends ci{async sample(e){let r=e.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));const[n,a]=await Mf(e,r),i=Ki(n.data);return Array.from({length:this.generation_config.num_beams},()=>{const s=this.randomSelect(i);return[a.data[s],Math.log(i[s])]})}}class Db extends ci{async sample(e){let r=e.dims.at(-1);this.generation_config.top_k>0&&(r=Math.min(this.generation_config.top_k,r));const[n,a]=await Mf(e,r),i=Ki(n.data);return Array.from({length:this.generation_config.num_beams},(s,o)=>[a.data[o],Math.log(i[o])])}}class Nb extends om{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const we={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7},pi=new Map,um=new Map,Kn=new Map;async function Fb(t,e,r){let n=r.device;n&&typeof n!="string"&&(n.hasOwnProperty(e)?n=n[e]:(console.warn(`Device not specified for ${e}. Using the default device.`),n=null));const a=J_(n);let i=r.dtype;if(typeof i!="string"&&(i&&i.hasOwnProperty(e)?i=i[e]:(i=wb[a[0]],console.warn(`Dtype not specified for ${e}. Using the default dtype: ${i}.`))),sm.hasOwnProperty(i)){if(i===vt.fp16&&!await yb())throw new Error("The device does not support fp16.")}else throw new Error(`Invalid dtype: ${i}. Should be one of: ${Object.keys(vt).join(", ")}`);const s=sm[i],o=`${r.subfolder??""}/${e}${s}.onnx`,d={...r.session_options};d.executionProviders??=a;const l=Ia(t,o,!0,r);let h=[];if(r.use_external_data_format){if(Sr.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const g=`${e}${s}.onnx_data`,c=`${r.subfolder??""}/${g}`;h.push(new Promise(async(w,v)=>{const S=await Ia(t,c,!0,r);w({path:g,data:S})}))}else d.externalData!==void 0&&(h=d.externalData.map(async g=>{if(typeof g.data=="string"){const c=await Ia(t,g.data,!0,r);return{...g,data:c}}return g}));if(h.length>0&&(d.externalData=await Promise.all(h)),n==="webgpu"){const g=am(r.config,{prefix:"present"});if(Object.keys(g).length>0){const c={};for(const w in g)c[w]="gpu-buffer";d.preferredOutputLocation=c}}return{buffer:await l,session_options:d}}async function Lr(t,e,r){const n=Object.keys(e),a=await Promise.all(n.map(async s=>Fb(t,e[s],r))),i={};for(let s=0;s<n.length;++s){const{buffer:o,session_options:d}=a[s],l=await If(o,d);i[n[s]]=l}return i}function Lb(t,e){const r=Object.create(null),n=[];for(const s of t.inputNames){const o=e[s];if(!(o instanceof Se)){n.push(s);continue}r[s]=Z_()?o.clone():o}if(n.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${n.join(", ")}.`);const a=Object.keys(e).length,i=t.inputNames.length;if(a>i){let s=Object.keys(e).filter(o=>!t.inputNames.includes(o));console.warn(`WARNING: Too many inputs were provided (${a} > ${i}). The following inputs will be ignored: "${s.join(", ")}".`)}return r}async function br(t,e){const r=Lb(t,e);try{const n=Object.fromEntries(Object.entries(r).map(([i,s])=>[i,s.ort_tensor]));let a=await t.run(n);return a=lm(a),a}catch(n){throw console.error(`An error occurred during model execution: "${n}".`),console.error("Inputs given to model:",r),n}}function lm(t){for(let e in t)Af(t[e])?t[e]=new Se(t[e]):typeof t[e]=="object"&&lm(t[e]);return t}function dm(t){if(t instanceof Se)return t;if(t.length===0)throw Error("items must be non-empty");if(Array.isArray(t[0])){if(t.some(e=>e.length!==t[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Se("int64",BigInt64Array.from(t.flat().map(e=>BigInt(e))),[t.length,t[0].length])}else return new Se("int64",BigInt64Array.from(t.map(e=>BigInt(e))),[1,t.length])}function cm(t){return new Se("bool",[t],[1])}async function pm(t,e){let{encoder_outputs:r,past_key_values:n}=e;if(!r){const d=kr(e,t.sessions.model.inputNames);r=(await Yn(t,d)).last_hidden_state}const{input_ids:a,decoder_input_ids:i,...s}=e;return s.input_ids=i,s.encoder_hidden_states=r,t.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(s.encoder_attention_mask=e.attention_mask),await So(t,s,!0)}async function Yn(t,e){const r=t.sessions.model,n=Object.create(null);for(const a of r.inputNames)n[a]=e[a];return r.inputNames.includes("token_type_ids")&&!n.token_type_ids&&(n.token_type_ids=new Se("int64",new BigInt64Array(n.input_ids.data.length),n.input_ids.dims)),await br(r,n)}async function So(t,e,r=!1){const n=t.sessions[r?"decoder_model_merged":"model"],{past_key_values:a,...i}=e;n.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=cm(!!a)),n.inputNames.includes("position_ids")&&i.attention_mask&&!i.position_ids&&(i.position_ids=Wb(i,a)),t.addPastKeyValues(i,a);const s=kr(i,n.inputNames);return await br(n,s)}async function Ub(t,{input_ids:e=null,attention_mask:r=null,pixel_values:n=null,position_ids:a=null,inputs_embeds:i=null,past_key_values:s=null,generation_config:o=null,logits_processor:d=null,...l}){if(!i){if(i=await t.encode_text({input_ids:e}),n&&e.dims[1]!==1){const m=await t.encode_image({pixel_values:n});({inputs_embeds:i,attention_mask:r}=t._merge_input_ids_with_image_features({image_features:m,inputs_embeds:i,input_ids:e,attention_mask:r}))}else if(s&&n&&e.dims[1]===1){const m=e.dims[1],g=Object.values(s)[0].dims.at(-2);r=lr([Un([e.dims[0],g]),r.slice(null,[r.dims[1]-m,r.dims[1]])],1)}}return await So(t,{inputs_embeds:i,past_key_values:s,attention_mask:r,position_ids:a,generation_config:o,logits_processor:d},!0)}function Wb(t,e=null){const{input_ids:r,inputs_embeds:n,attention_mask:a}=t,[i,s]=a.dims,o=new BigInt64Array(a.data.length);for(let l=0;l<i;++l){const h=l*s;let m=BigInt(0);for(let g=0;g<s;++g){const c=h+g;a.data[c]===0n?o[c]=BigInt(1):(o[c]=m,m+=a.data[c])}}let d=new Se("int64",o,a.dims);if(e){const l=-(r??n).dims.at(1);d=d.slice(null,[l,null])}return d}function hm(t,e,r,n){if(r.past_key_values){const a=Object.values(r.past_key_values)[0].dims.at(-2),{input_ids:i,attention_mask:s}=r;if(!(s&&s.dims[1]>i.dims[1])){if(a<i.dims[1])r.input_ids=i.slice(null,[a,null]);else if(t.config.image_token_index!=null&&i.data.some(o=>o==t.config.image_token_index)){const o=t.config.num_image_tokens;if(!o)throw new Error("`num_image_tokens` is missing in the model configuration.");const d=i.dims[1]-(a-o);r.input_ids=i.slice(null,[-d,null]),r.attention_mask=Un([1,a+d])}}}return r}function Vb(t,e,r,n){const{...a}=r;return r.past_key_values&&(e=e.map(s=>[s.at(-1)])),a.decoder_input_ids=dm(e),a}class K extends Et{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,r){super(),this.config=e,this.sessions=r;const n=Kn.get(this.constructor),a=pi.get(n);this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,a===we.DecoderOnly?(this.can_generate=!0,this._forward=So,this._prepare_inputs_for_generation=hm):a===we.Seq2Seq||a===we.Vision2Seq||a===we.Musicgen?(this.can_generate=!0,this._forward=pm,this._prepare_inputs_for_generation=Vb):a===we.EncoderDecoder?this._forward=pm:a===we.ImageTextToText?(this.can_generate=!0,this._forward=Ub,this._prepare_inputs_for_generation=hm):this._forward=Yn,this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const r of Object.values(this.sessions))r?.handler?.dispose&&e.push(r.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",model_file_name:o=null,subfolder:d="onnx",device:l=null,dtype:h=null,use_external_data_format:m=null,session_options:g={}}={}){let c={progress_callback:r,config:n,cache_dir:a,local_files_only:i,revision:s,model_file_name:o,subfolder:d,device:l,dtype:h,use_external_data_format:m,session_options:g};const w=Kn.get(this),v=pi.get(w);c.config=await im.from_pretrained(e,c);let S;return v===we.DecoderOnly?S=await Promise.all([Lr(e,{model:c.model_file_name??"model"},c),Er(e,"generation_config.json",!1,c)]):v===we.Seq2Seq||v===we.Vision2Seq?S=await Promise.all([Lr(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},c),Er(e,"generation_config.json",!1,c)]):v===we.MaskGeneration?S=await Promise.all([Lr(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},c)]):v===we.EncoderDecoder?S=await Promise.all([Lr(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},c)]):v===we.ImageTextToText?S=await Promise.all([Lr(e,{embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"},c),Er(e,"generation_config.json",!1,c)]):v===we.Musicgen?S=await Promise.all([Lr(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},c),Er(e,"generation_config.json",!1,c)]):(v!==we.EncoderOnly&&console.warn(`Model type for '${w??n?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),S=await Promise.all([Lr(e,{model:c.model_file_name??"model"},c)])),new this(c.config,...S)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_warper(e){const r=new $o;return e.temperature!==null&&e.temperature!==1&&r.push(new Ab(e.temperature)),e.top_k!==null&&e.top_k!==0&&r.push(new Mb(e.top_k)),e.top_p!==null&&e.top_p<1&&r.push(new Ob(e.top_p)),r}_get_logits_processor(e,r,n=null){const a=new $o;if(e.repetition_penalty!==null&&e.repetition_penalty!==1&&a.push(new kb(e.repetition_penalty)),e.no_repeat_ngram_size!==null&&e.no_repeat_ngram_size>0&&a.push(new Sb(e.no_repeat_ngram_size)),e.bad_words_ids!==null&&a.push(new Tb(e.bad_words_ids,e.eos_token_id)),e.min_length!==null&&e.eos_token_id!==null&&e.min_length>0&&a.push(new Eb(e.min_length,e.eos_token_id)),e.min_new_tokens!==null&&e.eos_token_id!==null&&e.min_new_tokens>0&&a.push(new Cb(r,e.min_new_tokens,e.eos_token_id)),e.forced_bos_token_id!==null&&a.push(new bb(e.forced_bos_token_id)),e.forced_eos_token_id!==null&&a.push(new vb(e.max_length,e.forced_eos_token_id)),e.begin_suppress_tokens!==null){const i=r>1||e.forced_bos_token_id===null?r:r+1;a.push(new $b(e.begin_suppress_tokens,i))}return e.guidance_scale!==null&&e.guidance_scale>1&&a.push(new Ib(e.guidance_scale)),n!==null&&a.extend(n),a}_prepare_generation_config(e,r,n=om){const a={...this.config};for(const s of["decoder","generator","text_config"])s in a&&Object.assign(a,a[s]);const i=new n(a);return"generation_config"in this&&Object.assign(i,this.generation_config),e&&Object.assign(i,e),r&&Object.assign(i,kr(r,Object.getOwnPropertyNames(i))),i}_get_stopping_criteria(e,r=null){const n=new xo;return e.max_length!==null&&n.push(new zb(e.max_length,this.config.max_position_embeddings??null)),e.eos_token_id!==null&&n.push(new Rb(e.eos_token_id)),r&&n.extend(r),n}_validate_model_class(){if(!this.can_generate){const e=[Ao,xg,$g,vg],r=Kn.get(this.constructor),n=new Set,a=this.config.model_type;for(const s of e){const o=s.get(a);o&&n.add(o[0])}let i=`The current model class (${r}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(i+=` Please use the following class instead: ${[...n].join(", ")}`),Error(i)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:r,model_inputs:n,is_encoder_decoder:a}){return n.past_key_values=this.getPastKeyValues(r,n.past_key_values),n.input_ids=new Se("int64",e.flat(),[e.length,1]),a||(n.attention_mask=lr([n.attention_mask,Un([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:r,model_kwargs:n}){const a=kr(n,this.forward_params),i=this.main_input_name;if(i in a){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else a[i]=e;return{inputs_tensor:a[i],model_inputs:a,model_input_name:i}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:r,model_input_name:n,generation_config:a}){const i=kr(r,this.sessions.model.inputNames);let{last_hidden_state:s}=await Yn(this,i);return a.guidance_scale!==null&&a.guidance_scale>1&&(s=lr([s,oy(s,0)],0),"attention_mask"in r&&(r.attention_mask=lr([r.attention_mask,dy(r.attention_mask)],0))),r.encoder_outputs=s,r}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:r,model_kwargs:n,decoder_start_token_id:a,bos_token_id:i,generation_config:s}){let{decoder_input_ids:o,...d}=n;if(!o)if(a??=i,this.config.model_type==="musicgen")o=Array.from({length:e*this.config.decoder.num_codebooks},()=>[a]);else if(Array.isArray(a)){if(a.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${a.length}`);o=a}else o=Array.from({length:e},()=>[a]);return o=dm(o),n.decoder_attention_mask=uy(o),{input_ids:o,model_inputs:d}}async generate({inputs:e=null,generation_config:r=null,logits_processor:n=null,stopping_criteria:a=null,streamer:i=null,...s}){this._validate_model_class(),r=this._prepare_generation_config(r,s);let{inputs_tensor:o,model_inputs:d,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:s});const h=this.config.is_encoder_decoder;h&&("encoder_outputs"in d||(d=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:o,model_inputs:d,model_input_name:l,generation_config:r})));let m;h?{input_ids:m,model_inputs:d}=this._prepare_decoder_input_ids_for_generation({batch_size:d[l].dims.at(0),model_input_name:l,model_kwargs:d,decoder_start_token_id:r.decoder_start_token_id,bos_token_id:r.bos_token_id,generation_config:r}):m=d[l];let g=m.dims.at(-1);r.max_new_tokens!==null&&(r.max_length=g+r.max_new_tokens);const c=this._get_logits_processor(r,g,n),w=this._get_stopping_criteria(r,a),v=d[l].dims.at(0),S=ci.getSampler(r),E=new Array(v).fill(0),x=m.tolist();i&&i.put(x);let I=null;for(;;){d=this.prepare_inputs_for_generation(x,d,r);const M=await this.forward(d),U=M.logits.slice(null,-1,null),B=c(x,U),D=[];for(let J=0;J<B.dims.at(0);++J){const se=B[J],ae=await S(se);for(const[ce,ue]of ae){const A=BigInt(ce);E[J]+=ue,x[J].push(A),D.push([A]);break}}if(i&&i.put(D),w(x).every(J=>J)){r.return_dict_in_generate&&(I=this.getPastKeyValues(M,d.past_key_values,!1));break}d=this._update_model_kwargs_for_generation({generated_input_ids:D,outputs:M,model_inputs:d,is_encoder_decoder:h})}i&&i.end();const T=new Se("int64",x.flat(),[x.length,x[0].length]);return r.return_dict_in_generate?{sequences:T,past_key_values:I}:T}addAttentionsToBeam(e,r){if(this.config.is_encoder_decoder){if(!r.cross_attentions||r.cross_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.cross_attentions||(e.cross_attentions=[]),e.cross_attentions.push(r.cross_attentions)}if(!r.decoder_attentions||r.decoder_attentions.length===0)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.decoder_attentions||(e.decoder_attentions=[]),e.decoder_attentions.push(r.decoder_attentions)}groupBeams(e){const r=Object.create(null);for(const n of e)r[n.id]===void 0?r[n.id]=[n]:r[n.id].push(n);return Object.values(r)}getPastKeyValues(e,r,n=!0){const a=Object.create(null);for(const i in e)if(i.startsWith("present")){let s=i.replace("present","past_key_values");if(r&&i.includes("encoder"))a[s]=r[s];else{if(n&&r){const o=r[s];o.location==="gpu-buffer"&&o.dispose()}a[s]=e[i]}}return a}getAttentions(e){const r=Object.create(null);for(const n of["cross_attentions","decoder_attentions"]){const a=[];for(const i in e)if(i.startsWith(n)){const s=i.split(".").pop();a[s]=e[i]}r[n]=a}return r}addPastKeyValues(e,r){if(r)Object.assign(e,r);else{const n=this.custom_config.kv_cache_dtype??"float32",a=n==="float16"?new Uint16Array:[],i=am(this.config);for(const s in i)e[s]=new Se(n,a,i[s])}}}class Dt{}class Xn extends K{}class Gb extends Xn{}class Hb extends Xn{async _call(e){return new ct(await super._call(e))}}class qb extends Xn{async _call(e){return new Te(await super._call(e))}}class jb extends Xn{async _call(e){return new dt(await super._call(e))}}class Kb extends Xn{async _call(e){return new _t(await super._call(e))}}class Yb extends K{}class Xb extends Yb{}class Qn extends K{}class Qb extends Qn{}class Jb extends Qn{async _call(e){return new ct(await super._call(e))}}class Zb extends Qn{async _call(e){return new Te(await super._call(e))}}class ev extends Qn{async _call(e){return new dt(await super._call(e))}}class tv extends Qn{async _call(e){return new _t(await super._call(e))}}class Jn extends K{}class rv extends Jn{}class nv extends Jn{async _call(e){return new ct(await super._call(e))}}class av extends Jn{async _call(e){return new Te(await super._call(e))}}class iv extends Jn{async _call(e){return new dt(await super._call(e))}}class sv extends Jn{async _call(e){return new _t(await super._call(e))}}class Zn extends K{}class ov extends Zn{}class uv extends Zn{async _call(e){return new ct(await super._call(e))}}class lv extends Zn{async _call(e){return new Te(await super._call(e))}}class dv extends Zn{async _call(e){return new dt(await super._call(e))}}class cv extends Zn{async _call(e){return new _t(await super._call(e))}}class ea extends K{}class pv extends ea{}class hv extends ea{async _call(e){return new ct(await super._call(e))}}class fv extends ea{async _call(e){return new Te(await super._call(e))}}class mv extends ea{async _call(e){return new dt(await super._call(e))}}class gv extends ea{async _call(e){return new _t(await super._call(e))}}class ta extends K{}class _v extends ta{}class yv extends ta{async _call(e){return new ct(await super._call(e))}}class wv extends ta{async _call(e){return new Te(await super._call(e))}}class bv extends ta{async _call(e){return new dt(await super._call(e))}}class vv extends ta{async _call(e){return new _t(await super._call(e))}}class ra extends K{}class $v extends ra{}class xv extends ra{async _call(e){return new ct(await super._call(e))}}class Sv extends ra{async _call(e){return new Te(await super._call(e))}}class kv extends ra{async _call(e){return new dt(await super._call(e))}}class Ev extends ra{async _call(e){return new _t(await super._call(e))}}class na extends K{}class Cv extends na{}class Tv extends na{async _call(e){return new Te(await super._call(e))}}class Iv extends na{async _call(e){return new dt(await super._call(e))}}class Av extends na{async _call(e){return new _t(await super._call(e))}}class Ov extends na{async _call(e){return new ct(await super._call(e))}}class hi extends K{}class Mv extends hi{}class zv extends hi{async _call(e){return new ct(await super._call(e))}}class Rv extends hi{async _call(e){return new Te(await super._call(e))}}class Pv extends hi{async _call(e){return new dt(await super._call(e))}}class fi extends K{}class Bv extends fi{}class Dv extends fi{async _call(e){return new ct(await super._call(e))}}class Nv extends fi{async _call(e){return new Te(await super._call(e))}}class Fv extends fi{async _call(e){return new _t(await super._call(e))}}class aa extends K{}class Lv extends aa{}class Uv extends aa{async _call(e){return new ct(await super._call(e))}}class Wv extends aa{async _call(e){return new Te(await super._call(e))}}class Vv extends aa{async _call(e){return new dt(await super._call(e))}}class Gv extends aa{async _call(e){return new _t(await super._call(e))}}class mi extends K{}class Hv extends mi{}class qv extends mi{async _call(e){return new ct(await super._call(e))}}class jv extends mi{async _call(e){return new Te(await super._call(e))}}class Kv extends mi{async _call(e){return new _t(await super._call(e))}}class gi extends K{}class Yv extends gi{}class Xv extends gi{async _call(e){return new Te(await super._call(e))}}class Qv extends gi{async _call(e){return new _t(await super._call(e))}}class Jv extends gi{async _call(e){return new ct(await super._call(e))}}class fm extends K{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,r,n){super(e,r),this.generation_config=n}}class Zv extends fm{}class e1 extends fm{}class mm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class t1 extends mm{}class r1 extends mm{}class gm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class n1 extends gm{}class a1 extends gm{}class ko extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class i1 extends ko{}class s1 extends ko{}class o1 extends ko{async _call(e){return new Te(await super._call(e))}}class _i extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class u1 extends _i{}class l1 extends _i{}class d1 extends _i{async _call(e){return new Te(await super._call(e))}}class c1 extends _i{}class _m extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class p1 extends _m{}class h1 extends _m{}class ym extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class f1 extends ym{}class m1 extends ym{}class ia extends K{}class g1 extends ia{}class _1 extends ia{async _call(e){return new ct(await super._call(e))}}class y1 extends ia{async _call(e){return new Te(await super._call(e))}}class w1 extends ia{async _call(e){return new dt(await super._call(e))}}class b1 extends ia{async _call(e){return new _t(await super._call(e))}}class sa extends K{}class v1 extends sa{}class $1 extends sa{async _call(e){return new ct(await super._call(e))}}class x1 extends sa{async _call(e){return new Te(await super._call(e))}}class S1 extends sa{async _call(e){return new dt(await super._call(e))}}class k1 extends sa{async _call(e){return new _t(await super._call(e))}}class oa extends K{}class E1 extends oa{}class C1 extends oa{async _call(e){return new ct(await super._call(e))}}class T1 extends oa{async _call(e){return new Te(await super._call(e))}}class I1 extends oa{async _call(e){return new dt(await super._call(e))}}class A1 extends oa{async _call(e){return new _t(await super._call(e))}}class wm extends K{}class O1 extends wm{}class M1 extends wm{}class bm extends K{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,r,n){super(e,r),this.generation_config=n}}class z1 extends bm{}class R1 extends bm{_prepare_generation_config(e,r){return super._prepare_generation_config(e,r,Nb)}_retrieve_init_tokens(e){const r=[e.decoder_start_token_id];let n=e.language;const a=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const s=`<|${Gf(n)}|>`;r.push(e.lang_to_id[s]),r.push(e.task_to_id[a??"transcribe"])}else if(n||a)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&r.at(-1)!==e.no_timestamps_token_id?r.push(e.no_timestamps_token_id):e.return_timestamps&&r.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),r.pop()),r.filter(i=>i!=null)}async generate({inputs:e=null,generation_config:r=null,logits_processor:n=null,stopping_criteria:a=null,...i}){r=this._prepare_generation_config(r,i);const s=this._retrieve_init_tokens(r);return r.return_timestamps&&(n??=new $o,n.push(new xb(r,s))),await super.generate({inputs:e,generation_config:r,logits_processor:n,decoder_input_ids:s,...i})}_extract_token_timestamps(e,r,n=null,a=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let i=this.config.median_filter_width;i===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),i=7);const s=e.cross_attentions.map(l=>{let h=Array.from({length:this.config.decoder_layers},(S,E)=>lr(l.map(x=>x[E]),2)),m=po(r.map(([S,E])=>n?h[S].slice(null,E,null,[0,n]):h[S].slice(null,E)));m=m.transpose(1,0,2,3);let[g,c]=ny(m,-2,0,!0),w=m.clone();for(let S=0;S<w.dims[0];++S){let E=w[S];for(let x=0;x<E.dims[0];++x){let I=E[x];const T=g[S][x][0],M=c[S][x][0];for(let U=0;U<I.dims[0];++U){let B=I[U];for(let D=0;D<B.data.length;++D)B.data[D]=(B.data[D]-M.data[D])/T.data[D];B.data.set(w0(B.data,i))}}}return ho(w,1)}),o=[e.sequences.length,e.sequences[0].length],d=new Se("float32",new Float32Array(o[0]*o[1]),o);for(let l=0;l<o[0];++l){const h=s[l].neg().squeeze_(0);let[m,g]=ay(h),c=Array.from({length:m.length-1},(S,E)=>m[E+1]-m[E]),w=nt([1],c).map(S=>!!S),v=[];for(let S=0;S<w.length;++S)w[S]&&v.push(g[S]*a);d[l].data.set(v,1)}return d}}class P1 extends K{main_input_name="pixel_values";forward_params=["pixel_values","input_ids","encoder_hidden_states","past_key_values"];constructor(e,r,n){super(e,r),this.generation_config=n}}class B1 extends K{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"];constructor(e,r,n){super(e,r),this.generation_config=n}}class vm extends B1{async encode_image({pixel_values:e}){const r=(await br(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${r.dims[1]}).`),this.config.num_image_tokens=r.dims[1]),r}async encode_text({input_ids:e}){return(await br(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}_merge_input_ids_with_image_features({inputs_embeds:e,image_features:r,input_ids:n,attention_mask:a}){const i=this.config.image_token_index,o=n.tolist().map(g=>g.findIndex(c=>c==i)),d=o.every(g=>g===-1),l=o.every(g=>g!==-1);if(!d&&!l)throw new Error("Every input should contain either 0 or 1 image token.");if(d)return{inputs_embeds:e,attention_mask:a};const h=[],m=[];for(let g=0;g<o.length;++g){const c=o[g],w=e[g],v=r[g],S=a[g];h.push(lr([w.slice([0,c]),v,w.slice([c+1,w.dims[0]])],0)),m.push(lr([S.slice([0,c]),Un([v.dims[0]]),S.slice([c+1,S.dims[0]])],0))}return{inputs_embeds:po(h,0),attention_mask:po(m,0)}}}class D1 extends vm{}class yi extends K{}class N1 extends yi{}class F1 extends yi{static async from_pretrained(e,r={}){return r.model_file_name??="text_model",super.from_pretrained(e,r)}}class L1 extends yi{static async from_pretrained(e,r={}){return r.model_file_name??="vision_model",super.from_pretrained(e,r)}}class $m extends K{}class U1 extends $m{}class W1 extends $m{static async from_pretrained(e,r={}){return r.model_file_name??="text_model",super.from_pretrained(e,r)}}class V1 extends yi{static async from_pretrained(e,r={}){return r.model_file_name??="vision_model",super.from_pretrained(e,r)}}class G1 extends K{}class H1 extends G1{}class xm extends K{}class q1 extends xm{}class j1 extends xm{}class Sm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class K1 extends Sm{}class Y1 extends Sm{}class km extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class X1 extends km{}class Q1 extends km{}class Em extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class J1 extends Em{}class Z1 extends Em{}class Cm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class e2 extends Cm{}class t2 extends Cm{}class Tm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class r2 extends Tm{}class n2 extends Tm{}class Im extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class a2 extends Im{}class i2 extends Im{}class Am extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class s2 extends Am{}class o2 extends Am{}class Om extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class u2 extends Om{}class l2 extends Om{}class Mm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class d2 extends Mm{}class c2 extends Mm{}class zm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class p2 extends zm{}class h2 extends zm{}class Rm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class f2 extends Rm{}class m2 extends Rm{}class Pm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class g2 extends Pm{}class _2 extends Pm{}class Bm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class y2 extends Bm{}class w2 extends Bm{}class Dm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class b2 extends Dm{}class v2 extends Dm{}class Nm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class $2 extends Nm{}class x2 extends Nm{}class Fm extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class S2 extends Fm{}class k2 extends Fm{}class Lm extends K{}class E2 extends Lm{}class C2 extends Lm{async _call(e){return new Te(await super._call(e))}}class Um extends K{}class T2 extends Um{}class I2 extends Um{async _call(e){return new Te(await super._call(e))}}class A2 extends K{}class O2 extends A2{async _call(e){return new Qx(await super._call(e))}}class Wm extends K{}class M2 extends Wm{}class z2 extends Wm{async _call(e){return new Te(await super._call(e))}}class Vm extends K{}class R2 extends Vm{}class P2 extends Vm{async _call(e){return new Te(await super._call(e))}}class Gm extends K{}class B2 extends Gm{}class D2 extends Gm{}class Hm extends K{}class N2 extends Hm{}class F2 extends Hm{}class qm extends K{}class L2 extends qm{}class U2 extends qm{async _call(e){return new Te(await super._call(e))}}class Eo extends K{}class W2 extends Eo{}class V2 extends Eo{async _call(e){return new jm(await super._call(e))}}class G2 extends Eo{async _call(e){return new H2(await super._call(e))}}class jm extends Dt{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class H2 extends Dt{constructor({logits:e,pred_boxes:r,pred_masks:n}){super(),this.logits=e,this.pred_boxes=r,this.pred_masks=n}}class Km extends K{}class q2 extends Km{}class j2 extends Km{async _call(e){return new K2(await super._call(e))}}class K2 extends jm{}class Ym extends K{}class Y2 extends Ym{}class X2 extends Ym{async _call(e){return new Te(await super._call(e))}}class Xm extends K{}class Q2 extends Xm{}class J2 extends Xm{async _call(e){return new Te(await super._call(e))}}class Qm extends K{}class Z2 extends Qm{}class e$ extends Qm{async _call(e){return new Te(await super._call(e))}}class Jm extends K{}class t$ extends Jm{}class r$ extends Jm{}class Zm extends K{}class n$ extends Zm{}class a$ extends Zm{}class i$ extends K{}class s$ extends i${}class eg extends K{}class o$ extends eg{}class u$ extends eg{}class l$ extends K{}class d$ extends l${}class tg extends K{}class c$ extends tg{}class p$ extends tg{async _call(e){return new Te(await super._call(e))}}class rg extends K{}class h$ extends rg{}class f$ extends rg{async _call(e){return new Te(await super._call(e))}}class ng extends K{}class m$ extends ng{}class g$ extends ng{async _call(e){return new Te(await super._call(e))}}class ag extends K{}class _$ extends ag{}class y$ extends ag{async _call(e){return new w$(await super._call(e))}}class w$ extends Dt{constructor({logits:e,pred_boxes:r}){super(),this.logits=e,this.pred_boxes=r}}class b$ extends K{}class v$ extends b${async get_image_embeddings({pixel_values:e}){return await Yn(this,{pixel_values:e})}async forward(e){if((!e.image_embeddings||!e.image_positional_embeddings)&&(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const n=e.input_points.dims.slice(0,-1),a=n.reduce((i,s)=>i*s,1);e.input_labels=new Se("int64",new BigInt64Array(a).fill(1n),n)}const r={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(r.input_points=e.input_points),e.input_labels&&(r.input_labels=e.input_labels),e.input_boxes&&(r.input_boxes=e.input_boxes),await br(this.sessions.prompt_encoder_mask_decoder,r)}async _call(e){return new $$(await super._call(e))}}class $$ extends Dt{constructor({iou_scores:e,pred_masks:r}){super(),this.iou_scores=e,this.pred_masks=r}}class ig extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class x$ extends ig{}class S$ extends ig{}class sg extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class k$ extends sg{}class E$ extends sg{}class Ur extends K{}class C$ extends Ur{}class T$ extends Ur{async _call(e){return new ln(await super._call(e))}}class I$ extends Ur{async _call(e){return new Te(await super._call(e))}}class A$ extends Ur{async _call(e){return new dt(await super._call(e))}}class Co extends K{}class O$ extends Co{}class M$ extends Co{async _call(e){return new ln(await super._call(e))}}class z$ extends Co{async _call(e){return new Te(await super._call(e))}}class wi extends K{}class R$ extends wi{}class P$ extends wi{async _call(e){return new ln(await super._call(e))}}class B$ extends wi{async _call(e){return new Te(await super._call(e))}}class D$ extends wi{async _call(e){return new dt(await super._call(e))}}class To extends K{}class N$ extends To{}class F$ extends To{async _call(e){return new ln(await super._call(e))}}class L$ extends To{async _call(e){return new Te(await super._call(e))}}class U$ extends Ur{}class W$ extends Ur{async _call(e){return new ln(await super._call(e))}}class V$ extends Ur{async _call(e){return new Te(await super._call(e))}}class ua extends K{}class G$ extends ua{}class H$ extends ua{async _call(e){return new ln(await super._call(e))}}class q$ extends ua{async _call(e){return new Te(await super._call(e))}}class j$ extends ua{async _call(e){return new Xx(await super._call(e))}}class K$ extends ua{async _call(e){return new dt(await super._call(e))}}class og extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class Y$ extends og{}class X$ extends og{async generate_speech(e,r,{threshold:n=.5,minlenratio:a=0,maxlenratio:i=20,vocoder:s=null}={}){const o={input_ids:e},{encoder_outputs:d,encoder_attention_mask:l}=await Yn(this,o),h=d.dims[1]/this.config.reduction_factor,m=Math.floor(h*i),g=Math.floor(h*a),c=this.config.num_mel_bins;let w=[],v=null,S=null,E=0;for(;;){++E;const T=cm(!!S);let M;S?M=S.output_sequence_out:M=new Se("float32",new Float32Array(c),[1,1,c]);let U={use_cache_branch:T,output_sequence:M,encoder_attention_mask:l,speaker_embeddings:r,encoder_hidden_states:d};this.addPastKeyValues(U,v),S=await br(this.sessions.decoder_model_merged,U),v=this.getPastKeyValues(S,v);const{prob:B,spectrum:D}=S;if(w.push(D),E>=g&&(Array.from(B.data).filter(Q=>Q>=n).length>0||E>=m))break}const x=lr(w),{waveform:I}=await br(s.sessions.model,{spectrogram:x});return{spectrogram:x,waveform:I}}}class Q$ extends K{main_input_name="spectrogram"}class J$ extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class Z$ extends J${}class ug extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class ex extends ug{}class tx extends ug{}class lg extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class rx extends lg{}class nx extends lg{}class dg extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class ax extends dg{}class ix extends dg{}class Io extends K{}class sx extends Io{}class ox extends Io{static async from_pretrained(e,r={}){return r.model_file_name??="text_model",super.from_pretrained(e,r)}}class ux extends Io{static async from_pretrained(e,r={}){return r.model_file_name??="audio_model",super.from_pretrained(e,r)}}class lx extends K{}class cg extends lx{async _call(e){return new Jx(await super._call(e))}}class pg extends K{}class dx extends pg{}class cx extends pg{}class hg extends K{constructor(e,r,n){super(e,r),this.generation_config=n}}class px extends hg{}class hx extends hg{}class fg extends K{}class fx extends fg{}class mx extends fg{async _call(e){return new Te(await super._call(e))}}class mg extends K{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,r,n){super(e,r),this.generation_config=n}_apply_and_filter_by_delay_pattern_mask(e){const[r,n]=e.dims,a=this.config.decoder.num_codebooks,i=n-a;let s=0;for(let l=0;l<e.size;++l){if(e.data[l]===this.config.decoder.pad_token_id)continue;const h=l%n,m=Math.floor(l/n)%a,g=h-m;g>0&&g<=i&&(e.data[s++]=e.data[l])}const o=Math.floor(r/a),d=s/(o*a);return new Se(e.type,e.data.slice(0,s),[o,a,d])}prepare_inputs_for_generation(e,r,n){let a=structuredClone(e);for(let s=0;s<a.length;++s)for(let o=0;o<a[s].length;++o)s%this.config.decoder.num_codebooks>=o&&(a[s][o]=BigInt(this.config.decoder.pad_token_id));return n.guidance_scale!==null&&n.guidance_scale>1&&(a=a.concat(a)),super.prepare_inputs_for_generation(a,r,n)}async generate(e){const r=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(r).unsqueeze_(0),{audio_values:a}=await br(this.sessions.encodec_decode,{audio_codes:n});return a}}class gg extends K{}class gx extends gg{}class _x extends gg{async _call(e){return new Te(await super._call(e))}}class _g extends K{}class yx extends _g{}class wx extends _g{async _call(e){return new Te(await super._call(e))}}class yg extends K{}class bx extends yg{}class vx extends yg{async _call(e){return new Te(await super._call(e))}}class wg extends K{}class $x extends wg{}class xx extends wg{async _call(e){return new Te(await super._call(e))}}class bg{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:r=null,config:n=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",model_file_name:o=null,subfolder:d="onnx",device:l=null,dtype:h=null,use_external_data_format:m=null,session_options:g={}}={}){let c={progress_callback:r,config:n,cache_dir:a,local_files_only:i,revision:s,model_file_name:o,subfolder:d,device:l,dtype:h,use_external_data_format:m,session_options:g};if(c.config=await im.from_pretrained(e,c),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let w of this.MODEL_CLASS_MAPPINGS){const v=w.get(c.config.model_type);if(v)return await v[1].from_pretrained(e,c)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${c.config.model_type}", attempting to construct from base class.`),await K.from_pretrained(e,c);throw Error(`Unsupported model type: ${c.config.model_type}`)}}const Sx=new Map([["bert",["BertModel",Gb]],["nomic_bert",["NomicBertModel",Xb]],["roformer",["RoFormerModel",Qb]],["electra",["ElectraModel",ov]],["esm",["EsmModel",Mv]],["convbert",["ConvBertModel",rv]],["camembert",["CamembertModel",pv]],["deberta",["DebertaModel",_v]],["deberta-v2",["DebertaV2Model",$v]],["mpnet",["MPNetModel",Lv]],["albert",["AlbertModel",Yv]],["distilbert",["DistilBertModel",Cv]],["roberta",["RobertaModel",g1]],["xlm",["XLMModel",v1]],["xlm-roberta",["XLMRobertaModel",E1]],["clap",["ClapModel",sx]],["clip",["CLIPModel",N1]],["clipseg",["CLIPSegModel",q1]],["chinese_clip",["ChineseCLIPModel",H1]],["siglip",["SiglipModel",U1]],["mobilebert",["MobileBertModel",Bv]],["squeezebert",["SqueezeBertModel",Hv]],["wav2vec2",["Wav2Vec2Model",C$]],["wav2vec2-bert",["Wav2Vec2BertModel",N$]],["unispeech",["UniSpeechModel",O$]],["unispeech-sat",["UniSpeechSatModel",R$]],["hubert",["HubertModel",U$]],["wavlm",["WavLMModel",G$]],["audio-spectrogram-transformer",["ASTModel",O1]],["vits",["VitsModel",cg]],["detr",["DetrModel",W2]],["table-transformer",["TableTransformerModel",q2]],["vit",["ViTModel",E2]],["fastvit",["FastViTModel",T2]],["mobilevit",["MobileViTModel",M2]],["mobilevitv2",["MobileViTV2Model",R2]],["owlvit",["OwlViTModel",B2]],["owlv2",["Owlv2Model",N2]],["beit",["BeitModel",L2]],["deit",["DeiTModel",Y2]],["convnext",["ConvNextModel",c$]],["convnextv2",["ConvNextV2Model",h$]],["dinov2",["Dinov2Model",m$]],["resnet",["ResNetModel",Q2]],["swin",["SwinModel",Z2]],["swin2sr",["Swin2SRModel",t$]],["donut-swin",["DonutSwinModel",d$]],["yolos",["YolosModel",_$]],["dpt",["DPTModel",n$]],["glpn",["GLPNModel",o$]],["hifigan",["SpeechT5HifiGan",Q$]],["efficientnet",["EfficientNetModel",fx]],["mobilenet_v1",["MobileNetV1Model",gx]],["mobilenet_v2",["MobileNetV2Model",yx]],["mobilenet_v3",["MobileNetV3Model",bx]],["mobilenet_v4",["MobileNetV4Model",$x]]]),kx=new Map([["t5",["T5Model",Zv]],["longt5",["LongT5Model",t1]],["mt5",["MT5Model",n1]],["bart",["BartModel",i1]],["mbart",["MBartModel",u1]],["marian",["MarianModel",x$]],["whisper",["WhisperModel",z1]],["m2m_100",["M2M100Model",k$]],["blenderbot",["BlenderbotModel",p1]],["blenderbot-small",["BlenderbotSmallModel",f1]]]),Ex=new Map([["bloom",["BloomModel",b2]],["gpt2",["GPT2Model",K1]],["gptj",["GPTJModel",e2]],["gpt_bigcode",["GPTBigCodeModel",r2]],["gpt_neo",["GPTNeoModel",X1]],["gpt_neox",["GPTNeoXModel",J1]],["codegen",["CodeGenModel",a2]],["llama",["LlamaModel",s2]],["cohere",["CohereModel",u2]],["gemma",["GemmaModel",d2]],["openelm",["OpenELMModel",p2]],["qwen2",["Qwen2Model",f2]],["phi",["PhiModel",g2]],["phi3",["Phi3Model",y2]],["mpt",["MptModel",$2]],["opt",["OPTModel",S2]],["mistral",["MistralModel",ex]],["starcoder2",["Starcoder2Model",rx]],["falcon",["FalconModel",ax]],["stablelm",["StableLmModel",px]]]),vg=new Map([["speecht5",["SpeechT5ForSpeechToText",Y$]],["whisper",["WhisperForConditionalGeneration",R1]]]),Cx=new Map([["speecht5",["SpeechT5ForTextToSpeech",X$]]]),Tx=new Map([["vits",["VitsModel",cg]],["musicgen",["MusicgenForConditionalGeneration",mg]]]),Ix=new Map([["bert",["BertForSequenceClassification",qb]],["roformer",["RoFormerForSequenceClassification",Zb]],["electra",["ElectraForSequenceClassification",lv]],["esm",["EsmForSequenceClassification",Rv]],["convbert",["ConvBertForSequenceClassification",av]],["camembert",["CamembertForSequenceClassification",fv]],["deberta",["DebertaForSequenceClassification",wv]],["deberta-v2",["DebertaV2ForSequenceClassification",Sv]],["mpnet",["MPNetForSequenceClassification",Wv]],["albert",["AlbertForSequenceClassification",Xv]],["distilbert",["DistilBertForSequenceClassification",Tv]],["roberta",["RobertaForSequenceClassification",y1]],["xlm",["XLMForSequenceClassification",x1]],["xlm-roberta",["XLMRobertaForSequenceClassification",T1]],["bart",["BartForSequenceClassification",o1]],["mbart",["MBartForSequenceClassification",d1]],["mobilebert",["MobileBertForSequenceClassification",Nv]],["squeezebert",["SqueezeBertForSequenceClassification",jv]]]),Ax=new Map([["bert",["BertForTokenClassification",jb]],["roformer",["RoFormerForTokenClassification",ev]],["electra",["ElectraForTokenClassification",dv]],["esm",["EsmForTokenClassification",Pv]],["convbert",["ConvBertForTokenClassification",iv]],["camembert",["CamembertForTokenClassification",mv]],["deberta",["DebertaForTokenClassification",bv]],["deberta-v2",["DebertaV2ForTokenClassification",kv]],["mpnet",["MPNetForTokenClassification",Vv]],["distilbert",["DistilBertForTokenClassification",Iv]],["roberta",["RobertaForTokenClassification",w1]],["xlm",["XLMForTokenClassification",S1]],["xlm-roberta",["XLMRobertaForTokenClassification",I1]]]),$g=new Map([["t5",["T5ForConditionalGeneration",e1]],["longt5",["LongT5ForConditionalGeneration",r1]],["mt5",["MT5ForConditionalGeneration",a1]],["bart",["BartForConditionalGeneration",s1]],["mbart",["MBartForConditionalGeneration",l1]],["marian",["MarianMTModel",S$]],["m2m_100",["M2M100ForConditionalGeneration",E$]],["blenderbot",["BlenderbotForConditionalGeneration",h1]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",m1]]]),Ao=new Map([["bloom",["BloomForCausalLM",v2]],["gpt2",["GPT2LMHeadModel",Y1]],["gptj",["GPTJForCausalLM",t2]],["gpt_bigcode",["GPTBigCodeForCausalLM",n2]],["gpt_neo",["GPTNeoForCausalLM",Q1]],["gpt_neox",["GPTNeoXForCausalLM",Z1]],["codegen",["CodeGenForCausalLM",i2]],["llama",["LlamaForCausalLM",o2]],["cohere",["CohereForCausalLM",l2]],["gemma",["GemmaForCausalLM",c2]],["openelm",["OpenELMForCausalLM",h2]],["qwen2",["Qwen2ForCausalLM",m2]],["phi",["PhiForCausalLM",_2]],["phi3",["Phi3ForCausalLM",w2]],["mpt",["MptForCausalLM",x2]],["opt",["OPTForCausalLM",k2]],["mbart",["MBartForCausalLM",c1]],["mistral",["MistralForCausalLM",tx]],["starcoder2",["Starcoder2ForCausalLM",nx]],["falcon",["FalconForCausalLM",ix]],["trocr",["TrOCRForCausalLM",Z$]],["stablelm",["StableLmForCausalLM",hx]]]),Ox=new Map([["bert",["BertForMaskedLM",Hb]],["roformer",["RoFormerForMaskedLM",Jb]],["electra",["ElectraForMaskedLM",uv]],["esm",["EsmForMaskedLM",zv]],["convbert",["ConvBertForMaskedLM",nv]],["camembert",["CamembertForMaskedLM",hv]],["deberta",["DebertaForMaskedLM",yv]],["deberta-v2",["DebertaV2ForMaskedLM",xv]],["mpnet",["MPNetForMaskedLM",Uv]],["albert",["AlbertForMaskedLM",Jv]],["distilbert",["DistilBertForMaskedLM",Ov]],["roberta",["RobertaForMaskedLM",_1]],["xlm",["XLMWithLMHeadModel",$1]],["xlm-roberta",["XLMRobertaForMaskedLM",C1]],["mobilebert",["MobileBertForMaskedLM",Dv]],["squeezebert",["SqueezeBertForMaskedLM",qv]]]),Mx=new Map([["bert",["BertForQuestionAnswering",Kb]],["roformer",["RoFormerForQuestionAnswering",tv]],["electra",["ElectraForQuestionAnswering",cv]],["convbert",["ConvBertForQuestionAnswering",sv]],["camembert",["CamembertForQuestionAnswering",gv]],["deberta",["DebertaForQuestionAnswering",vv]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ev]],["mpnet",["MPNetForQuestionAnswering",Gv]],["albert",["AlbertForQuestionAnswering",Qv]],["distilbert",["DistilBertForQuestionAnswering",Av]],["roberta",["RobertaForQuestionAnswering",b1]],["xlm",["XLMForQuestionAnswering",k1]],["xlm-roberta",["XLMRobertaForQuestionAnswering",A1]],["mobilebert",["MobileBertForQuestionAnswering",Fv]],["squeezebert",["SqueezeBertForQuestionAnswering",Kv]]]),xg=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",P1]]]),zx=new Map([["llava",["LlavaForConditionalGeneration",vm]],["moondream1",["Moondream1ForConditionalGeneration",D1]]]),Rx=new Map([["vit",["ViTForImageClassification",C2]],["fastvit",["FastViTForImageClassification",I2]],["mobilevit",["MobileViTForImageClassification",z2]],["mobilevitv2",["MobileViTV2ForImageClassification",P2]],["beit",["BeitForImageClassification",U2]],["deit",["DeiTForImageClassification",X2]],["convnext",["ConvNextForImageClassification",p$]],["convnextv2",["ConvNextV2ForImageClassification",f$]],["dinov2",["Dinov2ForImageClassification",g$]],["resnet",["ResNetForImageClassification",J2]],["swin",["SwinForImageClassification",e$]],["segformer",["SegformerForImageClassification",dx]],["efficientnet",["EfficientNetForImageClassification",mx]],["mobilenet_v1",["MobileNetV1ForImageClassification",_x]],["mobilenet_v2",["MobileNetV2ForImageClassification",wx]],["mobilenet_v3",["MobileNetV3ForImageClassification",vx]],["mobilenet_v4",["MobileNetV4ForImageClassification",xx]]]),Px=new Map([["detr",["DetrForObjectDetection",V2]],["table-transformer",["TableTransformerForObjectDetection",j2]],["yolos",["YolosForObjectDetection",y$]]]),Bx=new Map([["owlvit",["OwlViTForObjectDetection",D2]],["owlv2",["Owlv2ForObjectDetection",F2]]]),Dx=new Map([["detr",["DetrForSegmentation",G2]],["clipseg",["CLIPSegForImageSegmentation",j1]]]),Nx=new Map([["segformer",["SegformerForSemanticSegmentation",cx]]]),Fx=new Map([["sam",["SamModel",v$]]]),Lx=new Map([["wav2vec2",["Wav2Vec2ForCTC",T$]],["wav2vec2-bert",["Wav2Vec2BertForCTC",F$]],["unispeech",["UniSpeechForCTC",M$]],["unispeech-sat",["UniSpeechSatForCTC",P$]],["wavlm",["WavLMForCTC",H$]],["hubert",["HubertForCTC",W$]]]),Ux=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",I$]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",L$]],["unispeech",["UniSpeechForSequenceClassification",z$]],["unispeech-sat",["UniSpeechSatForSequenceClassification",B$]],["wavlm",["WavLMForSequenceClassification",q$]],["hubert",["HubertForSequenceClassification",V$]],["audio-spectrogram-transformer",["ASTForAudioClassification",M1]]]),Wx=new Map([["wavlm",["WavLMForXVector",j$]]]),Vx=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",D$]],["wavlm",["WavLMForAudioFrameClassification",K$]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",A$]]]),Gx=new Map([["vitmatte",["VitMatteForImageMatting",O2]]]),Hx=new Map([["swin2sr",["Swin2SRForImageSuperResolution",r$]]]),qx=new Map([["dpt",["DPTForDepthEstimation",a$]],["depth_anything",["DepthAnythingForDepthEstimation",s$]],["glpn",["GLPNForDepthEstimation",u$]]]),jx=new Map([["clip",["CLIPVisionModelWithProjection",L1]],["siglip",["SiglipVisionModel",V1]]]),Sg=[[Sx,we.EncoderOnly],[kx,we.EncoderDecoder],[Ex,we.DecoderOnly],[Ix,we.EncoderOnly],[Ax,we.EncoderOnly],[$g,we.Seq2Seq],[vg,we.Seq2Seq],[Ao,we.DecoderOnly],[Ox,we.EncoderOnly],[Mx,we.EncoderOnly],[xg,we.Vision2Seq],[zx,we.ImageTextToText],[Rx,we.EncoderOnly],[Dx,we.EncoderOnly],[Nx,we.EncoderOnly],[Gx,we.EncoderOnly],[Hx,we.EncoderOnly],[qx,we.EncoderOnly],[Px,we.EncoderOnly],[Bx,we.EncoderOnly],[Fx,we.MaskGeneration],[Lx,we.EncoderOnly],[Ux,we.EncoderOnly],[Cx,we.Seq2Seq],[Tx,we.EncoderOnly],[Wx,we.EncoderOnly],[Vx,we.EncoderOnly],[jx,we.EncoderOnly]];for(const[t,e]of Sg)for(const[r,n]of t.values())pi.set(r,e),Kn.set(n,r),um.set(r,n);const Kx=[["MusicgenForConditionalGeneration",mg,we.Musicgen],["CLIPTextModelWithProjection",F1,we.EncoderOnly],["SiglipTextModel",W1,we.EncoderOnly],["ClapTextModelWithProjection",ox,we.EncoderOnly],["ClapAudioModelWithProjection",ux,we.EncoderOnly]];for(const[t,e,r]of Kx)pi.set(t,r),Kn.set(e,t),um.set(t,e);class hS extends bg{static MODEL_CLASS_MAPPINGS=Sg.map(e=>e[0]);static BASE_IF_FAIL=!0}class Yx extends bg{static MODEL_CLASS_MAPPINGS=[Ao]}class Te extends Dt{constructor({logits:e}){super(),this.logits=e}}class Xx extends Dt{constructor({logits:e,embeddings:r}){super(),this.logits=e,this.embeddings=r}}class dt extends Dt{constructor({logits:e}){super(),this.logits=e}}class ct extends Dt{constructor({logits:e}){super(),this.logits=e}}class _t extends Dt{constructor({start_logits:e,end_logits:r}){super(),this.start_logits=e,this.end_logits=r}}class ln extends Dt{constructor({logits:e}){super(),this.logits=e}}class Qx extends Dt{constructor({alphas:e}){super(),this.alphas=e}}class Jx extends Dt{constructor({waveform:e,spectrogram:r}){super(),this.waveform=e,this.spectrogram=r}}if(!(typeof self<"u")){if(!Ze)throw new Error("Unable to load image processing library.")}class Zx{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const eS=Sr.IS_PROCESS_AVAILABLE?t=>process.stdout.write(t):t=>console.log(t);class tS extends Zx{constructor(e,{skip_prompt:r=!1,callback_function:n=null,token_callback_function:a=null,decode_kwargs:i={},...s}={}){super(),this.tokenizer=e,this.skip_prompt=r,this.callback_function=n??eS,this.token_callback_function=a,this.decode_kwargs={...i,...s},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const r=e[0];if(this.token_callback_function?.(r),this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}this.token_cache=nt(this.token_cache,r);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;n.endsWith(`
`)?(a=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&Kf(n.charCodeAt(n.length-1))?(a=n.slice(this.print_len),this.print_len+=a.length):(a=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;this.token_cache.length>0?(e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):e="",this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,r){e.length>0&&this.callback_function?.(e),r&&this.callback_function?.(`
`)}}class rS extends tS{constructor(e,r){super(e,{skip_prompt:!0,skip_special_tokens:!0}),this.cb=r}on_finalized_text(e){this.cb(e)}}class nS extends di{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,r){return new Array(e.length).fill(this.interrupted)}}const bi=new nS;async function aS(){try{return(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{return!1}}class kg{static model_id=null;static model=null;static tokenizer=null;static streamer=null;static async getInstance(e=null){return this.model_id??=await aS()?"Xenova/Phi-3-mini-4k-instruct_fp16":"Xenova/Phi-3-mini-4k-instruct",this.tokenizer??=gb.from_pretrained(this.model_id,{legacy:!0,progress_callback:e}),this.model??=Yx.from_pretrained(this.model_id,{dtype:"q4",device:"webgpu",use_external_data_format:!0,progress_callback:e}),Promise.all([this.tokenizer,this.model])}}async function iS(t){const[e,r]=await kg.getInstance(),n=e.apply_chat_template(t,{add_generation_prompt:!0,return_dict:!0});let a,i=0;const s=h=>{a??=performance.now();let m;i++>0&&(m=i/(performance.now()-a)*1e3),self.postMessage({status:"update",output:h,tps:m,numTokens:i})},o=new rS(e,s);self.postMessage({status:"start"});const d=await r.generate({...n,max_new_tokens:512,streamer:o,stopping_criteria:bi}),l=e.batch_decode(d,{skip_special_tokens:!1});self.postMessage({status:"complete",output:l})}async function sS(){self.postMessage({status:"loading",data:"Loading model and initializing"});let t="/";location.href.toLowerCase().indexOf("github.io")>-1&&(t="/web-ai-showcase/"),lt.localModelPath="/models/",lt.allowLocalModels=!0,lt.backends.onnx.wasm.wasmPaths=`${t}models/wasm/ort-web@1_18_0/`;const[e,r]=await kg.getInstance(a=>{self.postMessage(a)});self.postMessage({status:"compiling",data:"Compiling shaders and warming up model..."});const n=e("a");await r.generate({...n,max_new_tokens:1}),self.postMessage({status:"ready"})}self.addEventListener("message",async t=>{const{type:e,data:r}=t.data;switch(e){case"load":sS();break;case"generate":bi.reset(),iS(r);break;case"interrupt":bi.interrupt();break;case"reset":bi.reset();break}})})();
